/*---------------------------------------------------------
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *--------------------------------------------------------*/
/*!
 Â© Microsoft. All rights reserved.

 This library is supported for use in Windows Store apps only.

 Build: 1.0.8514.0.win8_rtm.120711-1900

 Version: Microsoft.WinJS.1.0
 */
"undefined" == typeof WinJS && (function (e) {
    e.setImmediate || (e.setImmediate = function (t) {
        return e.setTimeout(t, 0)
    })
}(this), function (e, t) {
    "use strict";
    function n(e, n) {
        var i, o, r, s = Object.keys(n);
        for (o = 0, r = s.length; r > o; o++) {
            var a = s[o], u = 95 !== a.charCodeAt(0), l = n[a];
            !l || "object" != typeof l || l.value === t && "function" != typeof l.get && "function" != typeof l.set ? u ? e[a] = l : (i = i || {}, i[a] = {value: l, enumerable: u, configurable: !0, writable: !0}) : (l.enumerable === t && (l.enumerable = u), i = i || {}, i[a] = l)
        }
        i && Object.defineProperties(e, i)
    }

    !function (t) {
        function i(e, t, i) {
            for (var o = e, r = t.split("."), s = 0, a = r.length; a > s; s++) {
                var u = r[s];
                o[u] || Object.defineProperty(o, u, {value: {}, writable: !1, enumerable: !0, configurable: !0}), o = o[u]
            }
            return i && n(o, i), o
        }

        function o(t, n) {
            return i(e, t, n)
        }

        e[t] || (e[t] = Object.create(Object.prototype));
        var r = e[t];
        r.Namespace || (r.Namespace = Object.create(Object.prototype)), Object.defineProperties(r.Namespace, {defineWithParent: {value: i, writable: !0, enumerable: !0, configurable: !0}, define: {value: o, writable: !0, enumerable: !0, configurable: !0}})
    }("WinJS"), function (e) {
        function t(t, i, o) {
            return t = t || function () {
            }, e.Utilities.markSupportedForProcessing(t), i && n(t.prototype, i), o && n(t, o), t
        }

        function i(i, o, r, s) {
            if (i) {
                o = o || function () {
                };
                var a = i.prototype;
                return o.prototype = Object.create(a), e.Utilities.markSupportedForProcessing(o), Object.defineProperty(o.prototype, "constructor", {value: o, writable: !0, configurable: !0, enumerable: !0}), r && n(o.prototype, r), s && n(o, s), o
            }
            return t(o, r, s)
        }

        function o(e) {
            e = e || function () {
            };
            var t, i;
            for (t = 1, i = arguments.length; i > t; t++)n(e.prototype, arguments[t]);
            return e
        }

        e.Namespace.define("WinJS.Class", {define: t, derive: i, mix: o})
    }(WinJS)
}(this), function (e, t) {
    "use strict";
    function n(e) {
        return e
    }

    function i(e, t, n) {
        return e.split(".").reduce(function (e, t) {
            return e ? n(e[t]) : null
        }, t)
    }

    var o = !!e.Windows, r = {notSupportedForProcessing: "Value is not supported within a declarative processing context, if you want it to be supported mark it using WinJS.Utilities.markSupportedForProcessing. The value was: '{0}'"};
    t.Namespace.define("WinJS.Utilities", {_setHasWinRT: {value: function (e) {
        o = e
    }, configurable: !1, writable: !1, enumerable: !1}, hasWinRT: {get: function () {
        return o
    }, configurable: !1, enumerable: !0}, _getMemberFiltered: i, getMember: function (t, o) {
        return t ? i(t, o || e, n) : null
    }, ready: function (n, i) {
        return new t.Promise(function (o, r) {
            function s() {
                if (n)try {
                    n(), o()
                } catch (e) {
                    r(e)
                } else o()
            }

            var a = t.Utilities.testReadyState;
            a || (a = e.document ? document.readyState : "complete"), "complete" === a || e.document && null !== document.body ? i ? e.setImmediate(s) : s() : e.addEventListener("DOMContentLoaded", s, !1)
        })
    }, strictProcessing: {get: function () {
        return!0
    }, configurable: !1, enumerable: !0}, markSupportedForProcessing: {value: function (e) {
        return e.supportedForProcessing = !0, e
    }, configurable: !1, writable: !1, enumerable: !0}, requireSupportedForProcessing: {value: function (n) {
        var i = !0;
        switch (i = i && !(n === e), i = i && !(n === e.location), i = i && !(n instanceof HTMLIFrameElement), i = i && !("function" == typeof n && !n.supportedForProcessing), e.frames.length) {
            case 0:
                break;
            case 1:
                i = i && !(n === e.frames[0]);
                break;
            default:
                for (var o = 0, s = e.frames.length; i && s > o; o++)i = i && !(n === e.frames[o])
        }
        if (i)return n;
        throw new t.ErrorFromName("WinJS.Utilities.requireSupportedForProcessing", t.Resources._formatString(r.notSupportedForProcessing, n))
    }, configurable: !1, writable: !1, enumerable: !0}}), t.Namespace.define("WinJS", {validation: !1, strictProcessing: {value: function () {
    }, configurable: !1, writable: !1, enumerable: !1}})
}(this, WinJS), function () {
    "use strict";
    function e(e, t, n) {
        var r = e;
        return"function" == typeof r && (r = r()), (n && o.test(n) ? "" : n ? n + ": " : "") + (t ? t.replace(i, ":") + ": " : "") + r
    }

    function t(e, t, n) {
        var i = WinJS.Utilities.formatLog(e, t, n);
        console[n && o.test(n) ? n : "log"](i)
    }

    function n(e) {
        return e.replace(/[-[\]{}()*+?.,\\^$|#]/g, "\\$&")
    }

    var i = /\s+/g, o = /^(error|warn|info|log)$/;
    WinJS.Namespace.define("WinJS.Utilities", {startLog: function (e) {
        e = e || {}, "string" == typeof e && (e = {tags: e});
        var o = e.type && new RegExp("^(" + n(e.type).replace(i, " ").split(" ").join("|") + ")$"), r = e.excludeTags && new RegExp("(^|\\s)(" + n(e.excludeTags).replace(i, " ").split(" ").join("|") + ")(\\s|$)", "i"), s = e.tags && new RegExp("(^|\\s)(" + n(e.tags).replace(i, " ").split(" ").join("|") + ")(\\s|$)", "i"), a = e.action || t;
        if (!(o || r || s || WinJS.log))return WinJS.log = a, void 0;
        var u = function (e, t, n) {
            o && !o.test(n) || r && r.test(t) || s && !s.test(t) || a(e, t, n), u.next && u.next(e, t, n)
        };
        u.next = WinJS.log, WinJS.log = u
    }, stopLog: function () {
        delete WinJS.log
    }, formatLog: e})
}(), function (e) {
    "use strict";
    function t(e) {
        var t = "_on" + e + "state";
        return{get: function () {
            var e = this[t];
            return e && e.userHandler
        }, set: function (n) {
            var i = this[t];
            n ? (i || (i = {wrapper: function (e) {
                return i.userHandler(e)
            }, userHandler: n}, Object.defineProperty(this, t, {value: i, enumerable: !1, writable: !0, configurable: !0}), this.addEventListener(e, i.wrapper, !1)), i.userHandler = n) : i && (this.removeEventListener(e, i.wrapper, !1), this[t] = null)
        }, enumerable: !0}
    }

    function n() {
        for (var e = {}, n = 0, i = arguments.length; i > n; n++) {
            var o = arguments[n];
            e["on" + o] = t(o)
        }
        return e
    }

    var i = e.Class.define(function (e, t, n) {
        this.detail = t, this.target = n, this.timeStamp = Date.now(), this.type = e
    }, {bubbles: {value: !1, writable: !1}, cancelable: {value: !1, writable: !1}, currentTarget: {get: function () {
        return this.target
    }}, defaultPrevented: {get: function () {
        return this._preventDefaultCalled
    }}, trusted: {value: !1, writable: !1}, eventPhase: {value: 0, writable: !1}, target: null, timeStamp: null, type: null, preventDefault: function () {
        this._preventDefaultCalled = !0
    }, stopImmediatePropagation: function () {
        this._stopImmediatePropagationCalled = !0
    }, stopPropagation: function () {
    }}, {supportedForProcessing: !1}), o = {_listeners: null, addEventListener: function (e, t, n) {
        n = n || !1, this._listeners = this._listeners || {};
        for (var i = this._listeners[e] = this._listeners[e] || [], o = 0, r = i.length; r > o; o++) {
            var s = i[o];
            if (s.useCapture === n && s.listener === t)return
        }
        i.push({listener: t, useCapture: n})
    }, dispatchEvent: function (e, t) {
        var n = this._listeners && this._listeners[e];
        if (n) {
            var o = new i(e, t, this);
            n = n.slice(0, n.length);
            for (var r = 0, s = n.length; s > r && !o._stopImmediatePropagationCalled; r++)n[r].listener(o);
            return o.defaultPrevented || !1
        }
        return!1
    }, removeEventListener: function (e, t, n) {
        n = n || !1;
        var i = this._listeners && this._listeners[e];
        if (i)for (var o = 0, r = i.length; r > o; o++) {
            var s = i[o];
            if (s.listener === t && s.useCapture === n) {
                i.splice(o, 1), 0 === i.length && delete this._listeners[e];
                break
            }
        }
    }};
    e.Namespace.define("WinJS.Utilities", {_createEventProperty: t, createEventProperties: n, eventMixin: o})
}(WinJS), function (e, t, n) {
    "use strict";
    var i, o = !1, r = "contextchanged", s = t.Class.mix(t.Class.define(null, {}, {supportedForProcessing: !1}), t.Utilities.eventMixin), a = new s, u = {malformedFormatStringInput: "Malformed, did you mean to escape your '{0}'?"};
    t.Namespace.define("WinJS.Resources", {addEventListener: function (e, n, i) {
        if (t.Utilities.hasWinRT && !o && e === r)try {
            Windows.ApplicationModel.Resources.Core.ResourceManager.current.defaultContext.qualifierValues.addEventListener("mapchanged", function (e) {
                t.Resources.dispatchEvent(r, {qualifier: e.key, changed: e.target[e.key]})
            }, !1), o = !0
        } catch (s) {
        }
        a.addEventListener(e, n, i)
    }, removeEventListener: a.removeEventListener.bind(a), dispatchEvent: a.dispatchEvent.bind(a), _formatString: function (e) {
        var n = arguments;
        return n.length > 1 && (e = e.replace(/({{)|(}})|{(\d+)}|({)|(})/g, function (e, i, o, r, s, a) {
            if (s || a)throw t.Resources._formatString(u.malformedFormatStringInput, s || a);
            return i && "{" || o && "}" || n[(0 | r) + 1]
        })), e
    }, _getStringWinRT: function (e) {
        if (!i) {
            var t = Windows.ApplicationModel.Resources.Core.ResourceManager.current.mainResourceMap;
            try {
                i = t.getSubtree("Resources")
            } catch (o) {
            }
            i || (i = t)
        }
        var r, s, a;
        try {
            a = i.getValue(e), a && (r = a.valueAsString, r === n && (r = a.toString()))
        } catch (o) {
        }
        if (!r)return{value: e, empty: !0};
        try {
            s = a.getQualifierValue("Language")
        } catch (o) {
            return{value: r}
        }
        return{value: r, lang: s}
    }, _getStringJS: function (t) {
        var n = e.strings && e.strings[t];
        return"string" == typeof n && (n = {value: n}), n || {value: t, empty: !0}
    }}), Object.defineProperties(t.Resources, t.Utilities.createEventProperties(r));
    var l;
    t.Resources.getString = function (e) {
        return l = l || (t.Utilities.hasWinRT ? t.Resources._getStringWinRT : t.Resources._getStringJS), l(e)
    }
}(this, WinJS), function (e, t) {
    "use strict";
    function n() {
    }

    function i(e, t) {
        var n;
        n = t && "object" == typeof t && "function" == typeof t.then ? I : O, e._value = t, e._setState(n)
    }

    function o(e, t, n, i, o, r) {
        return{exception: e, error: t, promise: n, handler: r, id: i, parent: o}
    }

    function r(e, t, n, i) {
        var r = n._isException, s = n._errorId;
        return o(r ? t : null, r ? null : t, e, s, n, i)
    }

    function s(e, t, n) {
        var i = n._isException, r = n._errorId;
        return m(e, r, i), o(i ? t : null, i ? null : t, e, r, n)
    }

    function a(e, t) {
        var n = ++W;
        return m(e, n), o(null, t, e, n)
    }

    function u(e, t) {
        var n = ++W;
        return m(e, n, !0), o(t, null, e, n)
    }

    function l(e, t, n, i) {
        g(e, {c: t, e: n, p: i})
    }

    function d(e, t, n, i) {
        e._value = t, p(e, t, n, i), e._setState(A)
    }

    function c(e, t) {
        var n = e._value, i = e._listeners;
        if (i) {
            e._listeners = null;
            var o, r;
            for (o = 0, r = Array.isArray(i) ? i.length : 1; r > o; o++) {
                var s = 1 === r ? i : i[o], a = s.c, u = s.promise;
                if (u) {
                    try {
                        u._setCompleteValue(a ? a(n) : n)
                    } catch (l) {
                        u._setExceptionValue(l)
                    }
                    u._state !== I && u._listeners && t.push(u)
                } else q.prototype.done.call(e, a)
            }
        }
    }

    function h(e, t) {
        var n = e._value, i = e._listeners;
        if (i) {
            e._listeners = null;
            var o, s;
            for (o = 0, s = Array.isArray(i) ? i.length : 1; s > o; o++) {
                var a = 1 === s ? i : i[o], u = a.e, l = a.promise;
                if (l) {
                    try {
                        u ? (u.handlesOnError || p(l, n, r, e, u), l._setCompleteValue(u(n))) : l._setChainedErrorValue(n, e)
                    } catch (d) {
                        l._setExceptionValue(d)
                    }
                    l._state !== I && l._listeners && t.push(l)
                } else B.prototype.done.call(e, null, u)
            }
        }
    }

    function p(e, t, n, i, o) {
        if (_._listeners[S]) {
            if (t instanceof Error && t.message === T)return;
            _.dispatchEvent(S, n(e, t, i, o))
        }
    }

    function f(e, t) {
        var n = e._listeners;
        if (n) {
            var i, o;
            for (i = 0, o = Array.isArray(n) ? n.length : 1; o > i; i++) {
                var r = 1 === o ? n : n[i], s = r.p;
                if (s)try {
                    s(t)
                } catch (a) {
                }
                r.c || r.e || !r.promise || r.promise._progress(t)
            }
        }
    }

    function g(e, t) {
        var n = e._listeners;
        n ? (n = Array.isArray(n) ? n : [n], n.push(t)) : n = t, e._listeners = n
    }

    function m(e, t, n) {
        e._isException = n || !1, e._errorId = t
    }

    function v(e, t, n, i) {
        e._value = t, p(e, t, n, i), e._setState(H)
    }

    function y(e, t) {
        var n;
        n = t && "object" == typeof t && "function" == typeof t.then ? I : k, e._value = t, e._setState(n)
    }

    function b(e, t, n, i) {
        var o = new U(e);
        return g(e, {promise: o, c: t, e: n, p: i}), o
    }

    function C(e) {
        var t;
        return new WinJS.Promise(function (n) {
            e ? t = setTimeout(n, e) : setImmediate(n)
        }, function () {
            t && clearTimeout(t)
        })
    }

    function E(e, t) {
        var n = function () {
            t.cancel()
        }, i = function () {
            e.cancel()
        };
        return e.then(n), t.then(i, i), t
    }

    e.Debug && (e.Debug.setNonUserCodeExceptions = !0);
    var w = WinJS.Class.mix(WinJS.Class.define(null, {}, {supportedForProcessing: !1}), WinJS.Utilities.eventMixin), _ = new w;
    _._listeners = {};
    var S = "error", T = "Canceled", L = !1, N = {promise: 1, thenPromise: 2, errorPromise: 4, exceptionPromise: 8, completePromise: 16};
    N.all = N.promise | N.thenPromise | N.errorPromise | N.exceptionPromise | N.completePromise;
    var x, M, I, R, D, P, O, k, A, H, W = 1;
    x = {name: "created", enter: function (e) {
        e._setState(M)
    }, cancel: n, done: n, then: n, _completed: n, _error: n, _notify: n, _progress: n, _setCompleteValue: n, _setErrorValue: n}, M = {name: "working", enter: n, cancel: function (e) {
        e._setState(D)
    }, done: l, then: b, _completed: i, _error: d, _notify: n, _progress: f, _setCompleteValue: y, _setErrorValue: v}, I = {name: "waiting", enter: function (e) {
        var t = e._value, n = function (i) {
            t._errorId ? e._chainedError(i, t) : (p(e, i, r, t, n), e._error(i))
        };
        n.handlesOnError = !0, t.then(e._completed.bind(e), n, e._progress.bind(e))
    }, cancel: function (e) {
        e._setState(R)
    }, done: l, then: b, _completed: i, _error: d, _notify: n, _progress: f, _setCompleteValue: y, _setErrorValue: v}, R = {name: "waiting_canceled", enter: function (e) {
        e._setState(P);
        var t = e._value;
        t.cancel && t.cancel()
    }, cancel: n, done: l, then: b, _completed: i, _error: d, _notify: n, _progress: f, _setCompleteValue: y, _setErrorValue: v}, D = {name: "canceled", enter: function (e) {
        e._setState(P), e._cancelAction()
    }, cancel: n, done: l, then: b, _completed: i, _error: d, _notify: n, _progress: f, _setCompleteValue: y, _setErrorValue: v}, P = {name: "canceling", enter: function (e) {
        var t = new Error(T);
        t.name = t.message, e._value = t, e._setState(A)
    }, cancel: n, done: n, then: n, _completed: n, _error: n, _notify: n, _progress: n, _setCompleteValue: n, _setErrorValue: n}, O = {name: "complete_notify", enter: function (e) {
        if (e.done = q.prototype.done, e.then = q.prototype.then, e._listeners)for (var t, n = [e]; n.length;)t = n.pop(), t._state._notify(t, n);
        e._setState(k)
    }, cancel: n, done: null, then: null, _completed: n, _error: n, _notify: c, _progress: n, _setCompleteValue: n, _setErrorValue: n}, k = {name: "success", enter: function (e) {
        e.done = q.prototype.done, e.then = q.prototype.then, e._cleanupAction()
    }, cancel: n, done: null, then: null, _completed: n, _error: n, _notify: c, _progress: n, _setCompleteValue: n, _setErrorValue: n}, A = {name: "error_notify", enter: function (e) {
        if (e.done = B.prototype.done, e.then = B.prototype.then, e._listeners)for (var t, n = [e]; n.length;)t = n.pop(), t._state._notify(t, n);
        e._setState(H)
    }, cancel: n, done: null, then: null, _completed: n, _error: n, _notify: h, _progress: n, _setCompleteValue: n, _setErrorValue: n}, H = {name: "error", enter: function (e) {
        e.done = B.prototype.done, e.then = B.prototype.then, e._cleanupAction()
    }, cancel: n, done: null, then: null, _completed: n, _error: n, _notify: h, _progress: n, _setCompleteValue: n, _setErrorValue: n};
    var V, F = WinJS.Class.define(null, {_listeners: null, _nextState: null, _state: null, _value: null, cancel: function () {
        this._state.cancel(this), this._run()
    }, done: function (e, t, n) {
        this._state.done(this, e, t, n)
    }, then: function (e, t, n) {
        return this._state.then(this, e, t, n)
    }, _chainedError: function (e, t) {
        var n = this._state._error(this, e, s, t);
        return this._run(), n
    }, _completed: function (e) {
        var t = this._state._completed(this, e);
        return this._run(), t
    }, _error: function (e) {
        var t = this._state._error(this, e, a);
        return this._run(), t
    }, _progress: function (e) {
        this._state._progress(this, e)
    }, _setState: function (e) {
        this._nextState = e
    }, _setCompleteValue: function (e) {
        this._state._setCompleteValue(this, e), this._run()
    }, _setChainedErrorValue: function (e, t) {
        var n = this._state._setErrorValue(this, e, s, t);
        return this._run(), n
    }, _setExceptionValue: function (e) {
        var t = this._state._setErrorValue(this, e, u);
        return this._run(), t
    }, _run: function () {
        for (; this._nextState;)this._state = this._nextState, this._nextState = null, this._state.enter(this)
    }}, {supportedForProcessing: !1}), U = WinJS.Class.derive(F, function (e) {
        L && (L === !0 || L & N.thenPromise) && (this._stack = WinJS.Promise._getStack()), this._creator = e, this._setState(x), this._run()
    }, {_creator: null, _cancelAction: function () {
        this._creator && this._creator.cancel()
    }, _cleanupAction: function () {
        this._creator = null
    }}, {supportedForProcessing: !1}), B = WinJS.Class.define(function (e) {
        L && (L === !0 || L & N.errorPromise) && (this._stack = WinJS.Promise._getStack()), this._value = e, p(this, e, a)
    }, {cancel: function () {
    }, done: function (e, t) {
        var n = this._value;
        if (t)try {
            t.handlesOnError || p(null, n, r, this, t);
            var i = t(n);
            return i && "object" == typeof i && "function" == typeof i.done && i.done(), void 0
        } catch (o) {
            n = o
        }
        n instanceof Error && n.message === T || setImmediate(function () {
            throw n
        })
    }, then: function (e, t) {
        if (!t)return this;
        var n, i = this._value;
        try {
            t.handlesOnError || p(null, i, r, this, t), n = new q(t(i))
        } catch (o) {
            n = o === i ? this : new z(o)
        }
        return n
    }}, {supportedForProcessing: !1}), z = WinJS.Class.derive(B, function (e) {
        L && (L === !0 || L & N.exceptionPromise) && (this._stack = WinJS.Promise._getStack()), this._value = e, p(this, e, u)
    }, {}, {supportedForProcessing: !1}), q = WinJS.Class.define(function (e) {
        if (L && (L === !0 || L & N.completePromise) && (this._stack = WinJS.Promise._getStack()), e && "object" == typeof e && "function" == typeof e.then) {
            var t = new U(null);
            return t._setCompleteValue(e), t
        }
        this._value = e
    }, {cancel: function () {
    }, done: function (e) {
        if (e)try {
            var t = e(this._value);
            t && "object" == typeof t && "function" == typeof t.done && t.done()
        } catch (n) {
            setImmediate(function () {
                throw n
            })
        }
    }, then: function (e) {
        try {
            var t = e ? e(this._value) : this._value;
            return t === this._value ? this : new q(t)
        } catch (n) {
            return new z(n)
        }
    }}, {supportedForProcessing: !1}), j = WinJS.Class.derive(F, function (e, t) {
        L && (L === !0 || L & N.promise) && (this._stack = WinJS.Promise._getStack()), this._oncancel = t, this._setState(x), this._run();
        try {
            var n = this._completed.bind(this), i = this._error.bind(this), o = this._progress.bind(this);
            e(n, i, o)
        } catch (r) {
            this._setExceptionValue(r)
        }
    }, {_oncancel: null, _cancelAction: function () {
        if (this._oncancel)try {
            this._oncancel()
        } catch (e) {
        }
    }, _cleanupAction: function () {
        this._oncancel = null
    }}, {addEventListener: function (e, t, n) {
        _.addEventListener(e, t, n)
    }, any: function (e) {
        return new j(function (t, n) {
            var i = Object.keys(e);
            Array.isArray(e) ? [] : {}, 0 === i.length && t();
            var o = 0;
            i.forEach(function (r) {
                j.as(e[r]).then(function () {
                    t({key: r, value: e[r]})
                }, function (s) {
                    return s instanceof Error && s.name === T ? (++o === i.length && t(WinJS.Promise.cancel), void 0) : (n({key: r, value: e[r]}), void 0)
                })
            })
        }, function () {
            var t = Object.keys(e);
            t.forEach(function (t) {
                var n = j.as(e[t]);
                "function" == typeof n.cancel && n.cancel()
            })
        })
    }, as: function (e) {
        return e && "object" == typeof e && "function" == typeof e.then ? e : new q(e)
    }, cancel: {get: function () {
        return V = V || new B(new WinJS.ErrorFromName(T))
    }}, dispatchEvent: function (e, t) {
        return _.dispatchEvent(e, t)
    }, is: function (e) {
        return e && "object" == typeof e && "function" == typeof e.then
    }, join: function (e) {
        return new j(function (n, i, o) {
            var r = Object.keys(e), s = Array.isArray(e) ? [] : {}, a = Array.isArray(e) ? [] : {}, u = 0, l = r.length, d = function (e) {
                if (0 === --l) {
                    var t = Object.keys(s).length;
                    if (0 === t)n(a); else {
                        var u = 0;
                        r.forEach(function (e) {
                            var t = s[e];
                            t instanceof Error && t.name === T && u++
                        }), u === t ? n(WinJS.Promise.cancel) : i(s)
                    }
                } else o({Key: e, Done: !0})
            };
            return r.forEach(function (n) {
                var i = e[n];
                i === t ? u++ : j.then(i, function (e) {
                    a[n] = e, d(n)
                }, function (e) {
                    s[n] = e, d(n)
                })
            }), l -= u, 0 === l ? (n(a), void 0) : void 0
        }, function () {
            Object.keys(e).forEach(function (t) {
                var n = j.as(e[t]);
                "function" == typeof n.cancel && n.cancel()
            })
        })
    }, removeEventListener: function (e, t, n) {
        _.removeEventListener(e, t, n)
    }, supportedForProcessing: !1, then: function (e, t, n, i) {
        return j.as(e).then(t, n, i)
    }, thenEach: function (e, t, n, i) {
        var o = Array.isArray(e) ? [] : {};
        return Object.keys(e).forEach(function (r) {
            o[r] = j.as(e[r]).then(t, n, i)
        }), j.join(o)
    }, timeout: function (e, t) {
        var n = C(e);
        return t ? E(n, t) : n
    }, wrap: function (e) {
        return new q(e)
    }, wrapError: function (e) {
        return new B(e)
    }, _veryExpensiveTagWithStack: {get: function () {
        return L
    }, set: function (e) {
        L = e
    }}, _veryExpensiveTagWithStack_tag: N, _getStack: function () {
        if (Debug.debuggerEnabled)try {
            throw new Error
        } catch (e) {
            return e.stack
        }
    }});
    Object.defineProperties(j, WinJS.Utilities.createEventProperties(S));
    var G = WinJS.Class.derive(F, function (e) {
        this._oncancel = e, this._setState(x), this._run()
    }, {_cancelAction: function () {
        this._oncancel && this._oncancel()
    }, _cleanupAction: function () {
        this._oncancel = null
    }}, {supportedForProcessing: !1}), K = WinJS.Class.define(function (e) {
        this._promise = new G(e)
    }, {promise: {get: function () {
        return this._promise
    }}, cancel: function () {
        this._promise.cancel()
    }, complete: function (e) {
        this._promise._completed(e)
    }, error: function (e) {
        this._promise._error(e)
    }, progress: function (e) {
        this._promise._progress(e)
    }}, {supportedForProcessing: !1});
    WinJS.Namespace.define("WinJS", {Promise: j, _Signal: K})
}(this), function (e, t) {
    "use strict";
    t.Namespace.define("WinJS", {ErrorFromName: t.Class.derive(Error, function (e, t) {
        this.name = e, this.message = t || e
    }, {}, {supportedForProcessing: !1})})
}(this, WinJS), function () {
    "use strict";
    WinJS.Namespace.define("WinJS", {xhr: function (e) {
        var t;
        return new WinJS.Promise(function (n, i, o) {
            t = new XMLHttpRequest, t.onreadystatechange = function () {
                t._canceled || (4 === t.readyState ? (t.status >= 200 && t.status < 300 || 1223 === t.status ? n(t) : i(t), t.onreadystatechange = function () {
                }) : o(t))
            }, t.open(e.type || "GET", e.url, !0, e.user, e.password), t.responseType = e.responseType || "", Object.keys(e.headers || {}).forEach(function (n) {
                t.setRequestHeader(n, e.headers[n])
            }), t.setRequestHeader("X-Requested-With", "XMLHttpRequest"), e.customRequestInitializer && e.customRequestInitializer(t), t.send(e.data)
        }, function () {
            t._canceled = !0, t.abort()
        })
    }})
}(), function (e) {
    "use strict";
    var t, n, i, o, r, s, a = {nonStaticHTML: "Unable to add dynamic content. A script attempted to inject dynamic content, or elements previously modified dynamically, that might be unsafe. For example, using the innerHTML property or the document.write method to add a script element will generate this exception. If the content is safe and from a trusted source, use a method to explicitly manipulate elements and attributes, such as createElement, or use setInnerHTMLUnsafe (or other unsafe method)."};
    t = n = function (e, t) {
        e.innerHTML = t
    }, i = o = function (e, t) {
        e.outerHTML = t
    }, r = s = function (e, t, n) {
        e.insertAdjacentHTML(t, n)
    };
    var u = e.MSApp;
    if (u)n = function (e, t) {
        u.execUnsafeLocalFunction(function () {
            e.innerHTML = t
        })
    }, o = function (e, t) {
        u.execUnsafeLocalFunction(function () {
            e.outerHTML = t
        })
    }, s = function (e, t, n) {
        u.execUnsafeLocalFunction(function () {
            e.insertAdjacentHTML(t, n)
        })
    }; else if (e.msIsStaticHTML) {
        var l = function (t) {
            if (!e.msIsStaticHTML(t))throw new WinJS.ErrorFromName("WinJS.Utitilies.NonStaticHTML", a.nonStaticHTML)
        };
        t = function (e, t) {
            l(t), e.innerHTML = t
        }, i = function (e, t) {
            l(t), e.outerHTML = t
        }, r = function (e, t, n) {
            l(n), e.insertAdjacentHTML(t, n)
        }
    }
    WinJS.Namespace.define("WinJS.Utilities", {setInnerHTML: t, setInnerHTMLUnsafe: n, setOuterHTML: i, setOuterHTMLUnsafe: o, insertAdjacentHTML: r, insertAdjacentHTMLUnsafe: s})
}(this)), define("vs/base/lib/raw.winjs.base", [], {}), define("vs/editor/core/constants", ["require", "exports"], function (e, t) {
    "use strict";
    t.EditorType = {ICodeEditor: "vs.editor.ICodeEditor", IDiffEditor: "vs.editor.IDiffEditor", ITerminal: "vs.editor.ITerminal"}, t.ClassName = {EditorWarningDecoration: "greensquiggly", EditorErrorDecoration: "redsquiggly"}, t.Handler = {ExecuteCommand: "executeCommand", ExecuteCommands: "executeCommands", CursorLeft: "cursorLeft", CursorLeftSelect: "cursorLeftSelect", CursorWordLeft: "cursorWordLeft", CursorWordLeftSelect: "cursorWordLeftSelect", CursorRight: "cursorRight", CursorRightSelect: "cursorRightSelect", CursorWordRight: "cursorWordRight", CursorWordRightSelect: "cursorWordRightSelect", CursorUp: "cursorUp", CursorUpSelect: "cursorUpSelect", CursorDown: "cursorDown", CursorDownSelect: "cursorDownSelect", CursorPageUp: "cursorPageUp", CursorPageUpSelect: "cursorPageUpSelect", CursorPageDown: "cursorPageDown", CursorPageDownSelect: "cursorPageDownSelect", CursorHome: "cursorHome", CursorHomeSelect: "cursorHomeSelect", CursorEnd: "cursorEnd", CursorEndSelect: "cursorEndSelect", CursorTop: "cursorTop", CursorTopSelect: "cursorTopSelect", CursorBottom: "cursorBottom", CursorBottomSelect: "cursorBottomSelect", AddCursorDown: "addCursorDown", AddCursorUp: "addCursorUp", MoveTo: "moveTo", MoveToSelect: "moveToSelect", CreateCursor: "createCursor", LastCursorMoveToSelect: "lastCursorMoveToSelect", JumpToBracket: "jumpToBracket", Type: "type", Paste: "paste", Tab: "tab", Indent: "indent", Outdent: "outdent", DeleteLeft: "deleteLeft", DeleteRight: "deleteRight", DeleteWordLeft: "deleteWordLeft", DeleteWordRight: "deleteWordRight", DeleteAllLeft: "deleteAllLeft", DeleteAllRight: "deleteAllRight", Enter: "enter", Escape: "escape", Cut: "cut", Undo: "undo", Redo: "redo", WordSelect: "wordSelect", WordSelectDrag: "wordSelectDrag", LastCursorWordSelect: "lastCursorWordSelect", LineSelect: "lineSelect", LineSelectDrag: "lineSelectDrag", LastCursorLineSelect: "lastCursorLineSelect", LastCursorLineSelectDrag: "lastCursorLineSelectDrag", LineInsertBefore: "lineInsertBefore", LineInsertAfter: "lineInsertAfter", LineBreakInsert: "lineBreakInsert", SelectAll: "selectAll"}, t.EventType = {Disposed: "disposed", ConfigurationChanged: "configurationChanged", ConfigurationLineHeightChanged: "configurationLineHeightChanged", ConfigurationFontChanged: "configurationFontChanged", ModelDispose: "modelDispose", ModelChanged: "modelChanged", ModelModeChanged: "modelsModeChanged", ModelTokensChanged: "modelTokensChanged", ModelContentChanged: "contentChanged", ModelContentChangedFlush: "flush", ModelContentChangedLinesDeleted: "linesDeleted", ModelContentChangedLinesInserted: "linesInserted", ModelContentChangedLineChanged: "lineChanged", OnBeforeModelContentChangedFlush: "onBeforeFlush", OnBeforeModelContentChangedLinesDeleted: "onBeforeLinesDeleted", OnBeforeModelContentChangedLinesInserted: "onBeforeLinesInserted", OnBeforeModelContentChangedLineChanged: "onBeforeLineChanged", ModelPropertiesChanged: "propertiesChanged", ModelDecorationsChanged: "decorationsChanged", CursorPositionChanged: "positionChanged", CursorSelectionChanged: "selectionChanged", CursorRevealRange: "revealRange", ViewFocusGained: "focusGained", ViewFocusLost: "focusLost", ViewFocusChanged: "focusChanged", ViewScrollWidthChanged: "scrollWidthChanged", ViewScrollHeightChanged: "scrollHeightChanged", ViewScrollChanged: "scrollChanged", ViewZonesChanged: "zonesChanged", ViewLayoutChanged: "viewLayoutChanged", ContextMenu: "contextMenu", MouseDown: "mousedown", MouseUp: "mouseup", MouseMove: "mousemove", MouseLeave: "mouseleave", KeyDown: "keydown", KeyUp: "keyup", EditorLayout: "editorLayout", DiffUpdated: "diffUpdated"}
}), define("vs/base/types", ["require", "exports"], function (e, t) {
    "use strict";
    function n(e) {
        return Array.isArray ? Array.isArray(e) : e && "number" == typeof e.length && e.constructor === Array ? !0 : !1
    }

    function i(e) {
        return"string" == typeof e || e instanceof String ? !0 : !1
    }

    function o(e) {
        return"undefined" == typeof e || null === e ? !1 : "[object Object]" === Object.prototype.toString.call(e)
    }

    function r(e) {
        return("number" == typeof e || e instanceof Number) && !isNaN(e) ? !0 : !1
    }

    function s(e) {
        return"undefined" == typeof e
    }

    function a(e) {
        return t.isUndefined(e) || null === e
    }

    function u(e) {
        if (!t.isObject(e))return!1;
        for (var n in e)if (e.hasOwnProperty(n))return!1;
        return!0
    }

    function l(e) {
        return"[object Function]" === Object.prototype.toString.call(e)
    }

    function d(e) {
        for (var t = [], n = 0; n < arguments.length - 1; n++)t[n] = arguments[n + 1];
        var i = Object.create(e.prototype);
        return e.apply(i, t), i
    }

    function c(e, n, i) {
        "undefined" == typeof i && (i = !0);
        var o, r = {};
        for (o in e)(i || e.hasOwnProperty(o)) && t.isFunction(e[o]) && (r[o] = function (t) {
            return function () {
                return n(e, t, arguments)
            }
        }(o));
        return r
    }

    t.isArray = n, t.isString = i, t.isObject = o, t.isNumber = r, t.isUndefined = s, t.isUndefinedOrNull = a, t.isEmptyObject = u, t.isFunction = l, t.create = d, t.proxy = c
}), define("vs/base/objects", ["require", "exports", "./types"], function (e, t, n) {
    "use strict";
    function i(e) {
        if (!e || "object" != typeof e)return e;
        var n = e instanceof Array ? [] : {};
        for (var i in e)n[i] = e[i] && "object" == typeof e[i] ? t.clone(e[i]) : e[i];
        return n
    }

    function o(e, n, i) {
        return"undefined" == typeof i && (i = !0), l.isObject(e) ? (l.isObject(n) && Object.keys(n).forEach(function (o) {
            o in e ? i && (l.isObject(e[o]) && l.isObject(n[o]) ? t.mixin(e[o], n[o], i) : e[o] = n[o]) : e[o] = n[o]
        }), e) : n
    }

    function r(e, n) {
        if (e === n)return!0;
        if (null === e || void 0 === e || null === n || void 0 === n)return!1;
        if (typeof e != typeof n)return!1;
        if ("object" != typeof e)return!1;
        if (e instanceof Array != n instanceof Array)return!1;
        var i, o;
        if (e instanceof Array) {
            if (e.length !== n.length)return!1;
            for (i = 0; i < e.length; i++)if (!t.equals(e[i], n[i]))return!1
        } else {
            var r = [];
            for (o in e)r.push(o);
            r.sort();
            var s = [];
            for (o in n)s.push(o);
            if (s.sort(), !t.equals(r, s))return!1;
            for (i = 0; i < r.length; i++)if (!t.equals(e[r[i]], n[r[i]]))return!1
        }
        return!0
    }

    function s(e) {
        for (var t = {}, n = 0; n < e.length; ++n)t[e[n]] = !0;
        return t
    }

    function a(e, n) {
        "undefined" == typeof n && (n = !1), n && (e = e.map(function (e) {
            return e.toLowerCase()
        }));
        var i = t.arrayToHash(e);
        return n ? function (e) {
            return void 0 !== i[e.toLowerCase()]
        } : function (e) {
            return void 0 !== i[e]
        }
    }

    function u(e, t) {
        t = t || function () {
        };
        var n = e.prototype;
        return t.prototype = Object.create(n), Object.defineProperty(t.prototype, "constructor", {value: t, writable: !0, configurable: !0, enumerable: !0}), t
    }

    var l = n;
    t.clone = i, t.mixin = o, t.equals = r, t.arrayToHash = s, t.createKeywordMatcher = a, t.derive = u
}), define("vs/base/errors", ["require", "exports", "vs/nls!vs/editor/editor.main", "./objects", "./types"], function (e, t, n, i, o) {
    "use strict";
    function r(e) {
        t.errorHandler.setUnexpectedErrorHandler(e)
    }

    function s(e, n) {
        "undefined" == typeof n && (n = null), t.errorHandler.onUnexpectedError(e, n)
    }

    function a(e, t) {
        var n = e.errorCode, i = e.errorMessage;
        return null !== n && null !== i ? m.localize("vs_base_errors", 0, n, i) : null !== i ? i : t && null !== e.responseText ? e.responseText : null
    }

    function u(e, t) {
        var n = a(e, t);
        return 401 === e.status ? null !== n ? m.localize("vs_base_errors", 1, n) : m.localize("vs_base_errors", 2) : n ? n : e.status > 0 && null !== e.statusText ? t && null !== e.responseText && e.responseText.length > 0 ? m.localize("vs_base_errors", 3, e.statusText, e.status, e.responseText) : m.localize("vs_base_errors", 4, e.statusText, e.status) : t && null !== e.responseText && e.responseText.length > 0 ? m.localize("vs_base_errors", 5, e.responseText) : m.localize("vs_base_errors", 6)
    }

    function l(e, t) {
        return u(new C(e), t)
    }

    function d(e, t) {
        return t && e.message && (e.stack || e.stacktrace) ? m.localize("vs_base_errors", 7, e.message, e.stack || e.stacktrace) : e.message ? e.message : m.localize("vs_base_errors", 8)
    }

    function c(e, t) {
        if ("undefined" == typeof t && (t = !1), !e)return m.localize("vs_base_errors", 9);
        if (y.isString(e))return e;
        if (e instanceof C)return u(e, t);
        if (!y.isUndefinedOrNull(e.status))return l(e, t);
        if (e.detail) {
            var n = e.detail;
            if (n.error) {
                if (n.error && !y.isUndefinedOrNull(n.error.status))return l(n.error, t);
                if (!y.isArray(n.error))return d(n.error, t);
                for (var i = 0; i < n.error.length; i++)if (n.error[i] && !y.isUndefinedOrNull(n.error[i].status))return l(n.error[i], t)
            }
            if (n.exception)return y.isUndefinedOrNull(n.exception.status) ? d(n.exception, t) : l(n.exception, t)
        }
        return e.stack ? d(e, t) : e.message ? e.message : m.localize("vs_base_errors", 10)
    }

    function h(e) {
        if (e)if (y.isArray(e)) {
            for (var t = 0; t < e.length; t++)if (e[t] && e[t].status)return e[t].status
        } else if (e.status)return e.status;
        return-1
    }

    function p(e) {
        return e instanceof Error && "Canceled" === e.name && "Canceled" === e.message
    }

    function f() {
        return new Error("not implemented")
    }

    function g() {
        return new Error("illegeal argument: ")
    }

    var m = n, v = i, y = o, b = function () {
        function e() {
            this.listeners = [], this.unexpectedErrorHandler = function (e) {
                setTimeout(function () {
                    throw e
                }, 0)
            }
        }

        return e.prototype.addListener = function (e) {
            var t = this;
            return this.listeners.push(e), function () {
                t._removeListener(e)
            }
        }, e.prototype.emit = function (e, t, n) {
            "undefined" == typeof t && (t = null), "undefined" == typeof n && (n = null), this.listeners.forEach(function (i) {
                i(e, t, n)
            })
        }, e.prototype._removeListener = function (e) {
            this.listeners.splice(this.listeners.indexOf(e), 1)
        }, e.prototype.setUnexpectedErrorHandler = function (e) {
            this.unexpectedErrorHandler = e
        }, e.prototype.getUnexpectedErrorHandler = function () {
            return this.unexpectedErrorHandler
        }, e.prototype.onUnexpectedError = function (e, n) {
            "undefined" == typeof n && (n = null), this.unexpectedErrorHandler(e, n), this.emit(e, n, t.toErrorMessage(e, !0))
        }, e
    }();
    t.ErrorHandler = b, t.errorHandler = new b, t.setUnexpectedErrorHandler = r, t.onUnexpectedError = s;
    var C = function () {
        function e(e) {
            if (this.status = e.status, this.statusText = e.statusText, this.responseText = e.responseText, this.errorMessage = null, this.errorCode = null, this.errorObject = null, this.responseText)try {
                var n = JSON.parse(this.responseText);
                this.errorMessage = n.message, this.errorCode = n.code, this.errorObject = n
            } catch (i) {
            }
            this.message = t.toErrorMessage(this, !1)
        }

        return e
    }();
    t.ConnectionError = C, v.derive(Error, C), t.toErrorMessage = c, t.getHttpStatus = h, t.isPromiseCanceledError = p, t.notImplemented = f, t.illegalArgument = g
}), require.config({shim: {"vs/base/lib/raw.winjs.base": {}}}), define("vs/base/lib/winjs.base", ["./raw.winjs.base", "vs/base/errors"], function (e, t) {
    "use strict";
    function n(e) {
        var n = e.detail, i = n.id;
        return n.parent ? (n.handler && o && delete o[i], void 0) : (o[i] = n, 1 === Object.keys(o).length && setTimeout(function () {
            var e = o;
            o = {}, Object.keys(e).forEach(function (n) {
                var i = e[n];
                i.exception ? t.onUnexpectedError(i.exception) : i.error && t.onUnexpectedError(i.error), console.log("WARNING: Promise with no error callback:" + i.id), console.log(i), i.exception && console.log(i.exception.stack)
            })
        }, 0), void 0)
    }

    function i(e, t, n) {
        var i, o, r, s = new WinJS.Promise(function (e, t, n) {
            i = e, o = t, r = n
        }, function () {
            e.cancel()
        });
        return e.then(function (e) {
            t && t(e), i(e)
        }, function (e) {
            n && n(e), o(e)
        }, r), s
    }

    var o = {};
    return WinJS.Promise.addEventListener("error", n), {decoratePromise: i, Class: WinJS.Class, xhr: WinJS.xhr, Promise: WinJS.Promise, TPromise: WinJS.Promise, Utilities: WinJS.Utilities}
}), define("vs/base/strings", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/types"], function (e, t, n, i) {
    "use strict";
    function o(e, t) {
        for (var n = "" + e; n.length < t;)n = "0" + n;
        return n
    }

    function r(e) {
        for (var t = [], n = 0; n < arguments.length - 1; n++)t[n] = arguments[n + 1];
        if (0 === t.length)return e;
        for (var i = e, o = t.length, r = 0; o > r; r++)i = i.replace(new RegExp("\\{" + r + "\\}", "g"), t[r]);
        return i
    }

    function s(e) {
        return e || (e = new Date), A.localize("vs_base_strings", 0, t.pad(e.getMonth() + 1, 2), t.pad(e.getDate(), 2), t.pad(e.getFullYear(), 4), t.pad(e.getHours(), 2), t.pad(e.getMinutes(), 2), t.pad(e.getSeconds(), 2))
    }

    function a(e) {
        return e || (e = new Date), A.localize("vs_base_strings", 1, t.pad(e.getHours(), 2), t.pad(e.getMinutes(), 2), t.pad(e.getSeconds(), 2))
    }

    function u(e) {
        return e.replace(/[<|>|&]/g, function (e) {
            switch (e) {
                case"<":
                    return"&lt;";
                case">":
                    return"&gt;";
                case"&":
                    return"&amp;";
                default:
                    return e
            }
        })
    }

    function l(e) {
        var t = document.createElement("div");
        return t.innerHTML = e, t.textContent || t.innerText || ""
    }

    function d(e, n) {
        "undefined" == typeof n && (n = " ");
        var i = t.ltrim(e, n);
        return t.rtrim(i, n)
    }

    function c(e, t) {
        var n = t.length;
        if (0 === n || 0 === e.length)return e;
        for (var i = 0, o = -1; (o = e.indexOf(t, i)) === i;)i += n;
        return e.substring(i)
    }

    function h(e, t) {
        var n = t.length, i = e.length;
        if (0 === n || 0 === i)return e;
        for (var o = i, r = -1; ;) {
            if (r = e.lastIndexOf(t, o - 1), -1 === r || r + n !== o)break;
            if (0 === r)return"";
            o = r
        }
        return e.substring(0, o)
    }

    function p(e) {
        return e.replace(/(^\s+|\s+$)/g, "")
    }

    function f(e) {
        return e.replace(/\s+/g, " ")
    }

    function g(e) {
        var t = (new Date).getTime(), n = (t - e) / 1e3;
        if (60 > n)return A.localize("vs_base_strings", 2, Math.floor(n));
        var i = n / 60;
        if (60 > i)return A.localize("vs_base_strings", 3, Math.floor(i));
        var o = i / 60;
        if (24 > o)return A.localize("vs_base_strings", 4, Math.floor(o));
        var r = o / 24;
        return A.localize("vs_base_strings", 5, Math.floor(r))
    }

    function m(e) {
        return e.replace(/[\-\\\{\}\+\?\|\^\$\.\,\[\]\(\)\#\s]/g, "\\$&").replace(/[\*]/g, ".*")
    }

    function v(e, t) {
        for (var n = 0, i = t.length; i > n; n++)if (e.charCodeAt(n) !== t.charCodeAt(n))return!1;
        return!0
    }

    function y(e, t) {
        if (t.length > e.length)return!1;
        for (var n = 0, i = e.length - t.length; n < t.length; n++, i++)if (e.charCodeAt(i) !== t.charCodeAt(n))return!1;
        return!0
    }

    function b(e, t, n, i) {
        return"undefined" == typeof i && (i = ""), e.substring(0, t) + i + e.substring(t + n)
    }

    function C(e, t, n, i) {
        if ("" === e)throw new Error("Cannot create regex from empty string");
        t || (e = e.replace(/[\-\\\{\}\*\+\?\|\^\$\.\,\[\]\(\)\#\s]/g, "\\$&")), i && (e = "\\b" + e + "\\b");
        var o = "g";
        return n || (o += "i"), new RegExp(e, o)
    }

    function E(e) {
        var t = e.exec("");
        return t && 0 === e.lastIndex
    }

    function w(e, t) {
        if (!e)return e;
        if (t) {
            for (var n = e.split("/"), i = 0, o = n.length; o > i; i++)n[i] = encodeURIComponent(n[i]);
            return n.join("/")
        }
        return encodeURIComponent(e)
    }

    function _(e) {
        return/^\w[\w.]*$/.test(e)
    }

    function S(e) {
        return e.replace(/[\-\\\{\}\*\+\?\|\^\$\.\,\[\]\(\)\#\s]/g, "\\$&")
    }

    function T(e, t, n) {
        return t && (e = "^" + e), n && (e += "$"), e
    }

    function L(e, n) {
        if (t.regExpLeadsToEndlessLoop(new RegExp(e, n)))throw new Error("Regular expression /" + e + "/g results in infinitive matches")
    }

    function N(e) {
        return e ? (0 === e.indexOf("/") && (e = e.substring(1)), t.encodeURIPart(e, !0)) : ""
    }

    function x(e) {
        return"undefined" == typeof e && (e = 8), M(e)
    }

    function M(e) {
        for (var t = "", n = 0; e > n; n++)t += W[Math.floor(Math.random() * V)];
        return t
    }

    function I(e, t) {
        return"[" + e + "m" + t + "[0m"
    }

    function R(e) {
        for (var t = 0, n = e.length; n > t; t++)if (" " !== e.charAt(t) && "	" !== e.charAt(t))return t;
        return-1
    }

    function D(e) {
        for (var t = 0, n = e.length; n > t; t++)if (" " !== e.charAt(t) && "	" !== e.charAt(t))return e.substring(0, t);
        return e
    }

    function P(e) {
        for (var t = e.length - 1; t >= 0; t--)if (" " !== e.charAt(t) && "	" !== e.charAt(t))return t;
        return-1
    }

    function O(e, t) {
        if (!U && (U = !0, window.Intl && H.isFunction(window.Intl.Collator))) {
            var n = new window.Intl.Collator;
            H.isFunction(n.compare) && (F = n.compare)
        }
        return F ? F.call(this, e, t) : e.localeCompare(t)
    }

    function k(e, t, n) {
        "undefined" == typeof n && (n = 4);
        var i = Math.abs(e.length - t.length);
        if (i > n)return 0;
        var o, r, s = [], a = [];
        for (o = 0; o < t.length + 1; ++o)a.push(0);
        for (o = 0; o < e.length + 1; ++o)s.push(a);
        for (o = 1; o < e.length + 1; ++o)for (r = 1; r < t.length + 1; ++r)s[o][r] = e[o - 1] === t[r - 1] ? s[o - 1][r - 1] + 1 : Math.max(s[o - 1][r], s[o][r - 1]);
        return s[e.length][t.length] - Math.sqrt(i)
    }

    var A = n, H = i;
    t.pad = o, t.format = r, t.formatDate = s, t.formatTime = a, t.escape = u, t.stripHtml = l, t.trim = d, t.ltrim = c, t.rtrim = h, t.trimWhitespace = p, t.normalize = f, t.conciseformatDiff = g, t.convertSimple2RegExpPattern = m, t.startsWith = v, t.endsWith = y, t.splice = b, t.createRegExp = C, t.regExpLeadsToEndlessLoop = E, t.encodeURIPart = w, t.isCamelCasePattern = _, t.toRegExpPattern = S, t.anchorPattern = T, t.assertRegExp = L, t.normalizePath = N, t.generateUuid = x;
    var W = "0123456789abcdefghiklmnopkqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ", V = W.length;
    t.colorize = I, t.firstNonWhitespaceIndex = R, t.getLeadingWhitespace = D, t.lastNonWhitespaceIndex = P;
    var F, U = !1;
    t.localeCompare = O, t.difference = k
}), define("vs/base/assert", ["require", "exports", "vs/base/strings"], function (e, t, n) {
    "use strict";
    function i(e, t) {
        if (!e || null === e)throw new Error(t ? r.format("Assertion failed ({0})", t) : "Assertion Failed")
    }

    function o(e, t, n) {
        if (e !== t || !e || !t)throw new Error(n ? r.format("Assertion failed ({0})", n) : "Assertion Failed")
    }

    var r = n;
    t.ok = i, t.equals = o
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/base/async", ["require", "exports", "vs/base/errors", "vs/base/lib/winjs.base"], function (e, t, n, i) {
    "use strict";
    function o(e, t) {
        return new s.Promise(function (n, i, o) {
            e.done(function (e) {
                try {
                    t(e)
                } catch (i) {
                    r.onUnexpectedError(i)
                }
                n(e)
            }, function (e) {
                try {
                    t(e)
                } catch (n) {
                    r.onUnexpectedError(n)
                }
                n(e)
            }, function (e) {
                o(e)
            })
        })
    }

    var r = n, s = i, a = function () {
        function e() {
            this.activePromise = null, this.queuedPromise = null, this.queuedPromiseFactory = null
        }

        return e.prototype.queue = function (e) {
            var t = this;
            if (this.activePromise) {
                if (this.queuedPromiseFactory = e, !this.queuedPromise) {
                    var n = function () {
                        t.queuedPromise = null;
                        var e = t.queue(t.queuedPromiseFactory);
                        return t.queuedPromiseFactory = null, e
                    };
                    this.queuedPromise = this.activePromise.then(n, n)
                }
                return new s.Promise(function (e, n) {
                    t.queuedPromise.then(e, n)
                })
            }
            return this.activePromise = e(), this.activePromise.then(function (e) {
                return t.activePromise = null, e
            }, function (e) {
                return t.activePromise = null, s.Promise.wrapError(e)
            })
        }, e
    }();
    t.Throttler = a;
    var u = function () {
        function e(e) {
            this.defaultDelay = e, this.timeoutPromise = null, this.completionPromise = null, this.onSuccess = null, this.task = null
        }

        return e.prototype.trigger = function (e, t) {
            "undefined" == typeof t && (t = this.defaultDelay);
            var n = this;
            return this.task = e, this.cancelTimeout(), this.completionPromise || (this.completionPromise = new s.Promise(function (e) {
                n.onSuccess = e
            }).then(function () {
                n.completionPromise = null, n.onSuccess = null;
                var e = n.task();
                return n.task = null, e
            })), this.timeoutPromise = s.Promise.timeout(t), this.timeoutPromise.then(function () {
                n.timeoutPromise = null, n.onSuccess(null)
            }), this.completionPromise
        }, e.prototype.isTriggered = function () {
            return!!this.timeoutPromise
        }, e.prototype.cancel = function () {
            this.cancelTimeout(), this.completionPromise && (this.completionPromise.cancel(), this.completionPromise = null)
        }, e.prototype.cancelTimeout = function () {
            this.timeoutPromise && (this.timeoutPromise.cancel(), this.timeoutPromise = null)
        }, e
    }();
    t.Delayer = u;
    var l = function (e) {
        function t(t) {
            e.call(this, t), this.throttler = new a
        }

        return __extends(t, e), t.prototype.trigger = function (t, n) {
            var i = this;
            return e.prototype.trigger.call(this, function () {
                return i.throttler.queue(t)
            }, n)
        }, t
    }(u);
    t.ThrottledDelayer = l, t.always = o
}), define("vs/base/hash", ["require", "exports"], function (e, t) {
    "use strict";
    function n(e) {
        for (var t = 1540483477, n = 24, i = 0, o = e.length, r = o, s = 0 ^ r, a = i; r >= 2;) {
            var u = e.charCodeAt(a), l = e.charCodeAt(a + 1), d = u | l << 16;
            d *= t, d ^= d >> n, d *= t, s *= t, s ^= d, a += 2, r -= 2
        }
        return 1 === r && (s ^= e.charCodeAt(a), s *= t), s ^= s >> 13, s *= t, s ^= s >> 15
    }

    function i(e, t) {
        return 2147483647 & (t << 5) + t + e
    }

    t.computeMurmur2StringHashCode = n, t.combine = i
}), define("vs/base/network", ["require", "exports", "./assert", "./hash"], function (e, t, n, i) {
    "use strict";
    function o(e) {
        var t = window.location.search;
        if (t) {
            t = t.substring(1);
            for (var n = t.split("&"), i = 0; i < n.length; i++) {
                var o = n[i];
                if (o.indexOf("=") >= 0) {
                    var r = o.split("=");
                    if (decodeURIComponent(r[0]) === e && r.length > 1)return decodeURIComponent(r[1])
                } else if (decodeURIComponent(o) === e)return"true"
            }
        }
        return null
    }

    var r = n, s = i, a = function () {
        function e(e) {
            r.ok(!!e, "spec must not be null"), this.spec = e
        }

        return e.prototype.equals = function (t) {
            return t instanceof e && t.spec === this.spec
        }, e.prototype.hashCode = function () {
            return s.computeMurmur2StringHashCode(this.spec)
        }, e.prototype.toJSON = function () {
            return{$url: this.spec}
        }, e.prototype.toExternal = function () {
            return this.spec
        }, e.prototype.toString = function () {
            return this.spec
        }, e.prototype.getScheme = function () {
            return"undefined" == typeof this.scheme && (this.scheme = this.doGetScheme()), this.scheme
        }, e.prototype.doGetScheme = function () {
            var e = this.spec.indexOf(":");
            return-1 === e ? null : this.spec.substring(0, e)
        }, e.prototype.getPath = function () {
            for (var e = 0, t = -1, n = 0, i = this.spec.length; i > n; n++) {
                var o = this.spec.charAt(n);
                switch (o) {
                    case"/":
                        3 === ++e && (t = n);
                        break;
                    case"?":
                    case"#":
                        return-1 === t ? null : this.spec.substring(t, n)
                }
            }
            return-1 === t ? null : t === this.spec.length - 1 ? "" : this.spec.substring(t)
        }, e
    }();
    t.URL = a, t.getQueryValue = o, function (e) {
        e.inMemory = "inMemory"
    }(t.schemas || (t.schemas = {})), t.schemas
}), define("vs/base/env", ["require", "exports", "vs/base/types"], function (e, t, n) {
    "use strict";
    function i() {
        return d
    }

    function o() {
        return self.parent !== self
    }

    function r() {
        return l
    }

    function s(e) {
        l = e
    }

    var a = n, u = navigator.userAgent, l = self.isTest || !1, d = self.document && self.document.URL.match(/[^\?]*\?[^\#]*pseudo=true/), c = !1;
    c = self.window ? !!self.window.Worker : !0;
    var h = u.indexOf("Trident") >= 0 && u.indexOf("IE") < 0, p = u.indexOf("IE") >= 0, f = u.indexOf("MSIE 9") >= 0;
    t.browser = {isWindows: u.indexOf("Windows") >= 0, isMacintosh: u.indexOf("Macintosh") >= 0, isOpera: u.indexOf("Opera") >= 0, isIE11: h, isIE10: p, isIE9: f, isIE: f || p || h, isFirefox: u.indexOf("Firefox") >= 0, isWebKit: u.indexOf("AppleWebKit") >= 0, isChrome: u.indexOf("Chrome") >= 0, isSafari: -1 === u.indexOf("Chrome") && u.indexOf("Safari") >= 0, canPushState: function () {
        return self && self.history && self.history.pushState
    }, hasWorkers: c, hasCSSAnimationSupport: function () {
        if (this._hasCSSAnimationSupport === !0 || this._hasCSSAnimationSupport === !1)return this._hasCSSAnimationSupport;
        for (var e = !1, t = document.createElement("div"), n = ["animationName", "webkitAnimationName", "msAnimationName", "MozAnimationName", "OAnimationName"], i = 0; i < n.length; i++) {
            var o = n[i];
            if (!a.isUndefinedOrNull(t.style[o]) || t.style.hasOwnProperty(o)) {
                e = !0;
                break
            }
        }
        return this._hasCSSAnimationSupport = e ? !0 : !1, this._hasCSSAnimationSupport
    }, canPlayVideo: function (e) {
        var t = document.createElement("video");
        if (t.canPlayType) {
            var n = t.canPlayType(e);
            return"maybe" === n || "probably" === n
        }
        return!1
    }, canPlayAudio: function (e) {
        var t = document.createElement("audio");
        if (t.canPlayType) {
            var n = t.canPlayType(e);
            return"maybe" === n || "probably" === n
        }
        return!1
    }, getInternetExplorerVersion: function () {
        var e = -1;
        if ("Microsoft Internet Explorer" === navigator.appName) {
            var t = navigator.userAgent, n = new RegExp("MSIE ([0-9]{1,}[\\.0-9]{0,})");
            null != n.exec(t) && (e = parseFloat(RegExp.$1))
        }
        return e
    }}, t.enableWI = self.MonacoEnvironment ? self.MonacoEnvironment.enableWI : !0, t.enableTEST = self.MonacoEnvironment ? self.MonacoEnvironment.enableTEST : !0, t.enableTestCoverage = self.MonacoEnvironment ? self.MonacoEnvironment.enableTestCoverage : !1, t.enableOps = self.MonacoEnvironment ? self.MonacoEnvironment.enableOps : !1, t.enableDebug = self.MonacoEnvironment ? self.MonacoEnvironment.enableDebug : !1, t.enablePerformanceEvents = self.MonacoEnvironment ? self.MonacoEnvironment.enablePerformanceEvents : !1, t.enableTelemetry = self.MonacoEnvironment ? self.MonacoEnvironment.enableTelemetry : !1, t.showPerformanceBox = self.MonacoEnvironment ? self.MonacoEnvironment.showPerformanceBox : !1, t.enableGlobalCSSRuleChecker = self.MonacoEnvironment ? self.MonacoEnvironment.enableGlobalCSSRuleChecker : !1, t.enableNLSWarnings = self.MonacoEnvironment ? self.MonacoEnvironment.enableNLSWarnings : !1, t.enableEditorLanguageServiceIndicator = self.MonacoEnvironment ? self.MonacoEnvironment.enableEditorLanguageServiceIndicator : !1, t.isPseudoLanguage = i, t.isInIframe = o, t.isTesting = r, t.setTesting = s
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/base/dom/mockDom", ["require", "exports"], function (e, t) {
    "use strict";
    var n = function () {
        function e() {
            this.eventMap = {}
        }

        return e.prototype.removeEventListener = function (e, t) {
            if (e in this.eventMap) {
                var n = this.eventMap[e];
                n.splice(n.indexOf(t), 1)
            }
        }, e.prototype.addEventListener = function (e, t) {
            e in this.eventMap ? this.eventMap[e].push(t) : this.eventMap[e] = [t]
        }, e.prototype.dispatchEvent = function (e) {
            return this.eventMap[e.type].forEach(function (t) {
                t(e)
            }), e.defaultPrevented
        }, e
    }();
    t.MockEventTarget = n;
    var i = function (e) {
        function t(t) {
            e.call(this), this.ENTITY_REFERENCE_NODE = Node.ENTITY_REFERENCE_NODE, this.ATTRIBUTE_NODE = Node.ATTRIBUTE_NODE, this.DOCUMENT_FRAGMENT_NODE = Node.DOCUMENT_FRAGMENT_NODE, this.TEXT_NODE = Node.TEXT_NODE, this.ELEMENT_NODE = Node.ELEMENT_NODE, this.COMMENT_NODE = Node.COMMENT_NODE, this.DOCUMENT_POSITION_DISCONNECTED = Node.DOCUMENT_POSITION_DISCONNECTED, this.DOCUMENT_POSITION_CONTAINED_BY = Node.DOCUMENT_POSITION_CONTAINED_BY, this.DOCUMENT_POSITION_CONTAINS = Node.DOCUMENT_POSITION_CONTAINS, this.DOCUMENT_TYPE_NODE = Node.DOCUMENT_TYPE_NODE, this.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC, this.DOCUMENT_NODE = Node.DOCUMENT_NODE, this.ENTITY_NODE = Node.ENTITY_NODE, this.PROCESSING_INSTRUCTION_NODE = Node.PROCESSING_INSTRUCTION_NODE, this.CDATA_SECTION_NODE = Node.CDATA_SECTION_NODE, this.NOTATION_NODE = Node.NOTATION_NODE, this.DOCUMENT_POSITION_FOLLOWING = Node.DOCUMENT_POSITION_FOLLOWING, this.DOCUMENT_POSITION_PRECEDING = Node.DOCUMENT_POSITION_PRECEDING, this.nodeName = t, this._childNodes = [], this.attributes = []
        }

        return __extends(t, e), Object.defineProperty(t.prototype, "lastChild", {get: function () {
            return this._childNodes[this._childNodes.length - 1]
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "firstChild", {get: function () {
            return this._childNodes[0]
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "childNodes", {get: function () {
            var e = this._childNodes;
            return e.item || (e.item = function (e) {
                return this[e]
            }.bind(e)), e
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "textContent", {get: function () {
            var e = this;
            return this._childNodes.filter(function (t) {
                return t.nodeType === e.TEXT_NODE
            }).map(function (e) {
                return e.wholeText
            }).join("")
        }, set: function (e) {
            this._childNodes = [], this.appendChild(this.ownerDocument.createTextNode(e))
        }, enumerable: !0, configurable: !0}), t.prototype.removeChild = function (e) {
            var t = this._childNodes.indexOf(e);
            if (t >= 0) {
                var n = this._childNodes.splice(t, 1);
                return n[0]
            }
            return null
        }, t.prototype.appendChild = function (e) {
            return this._childNodes.push(e), e
        }, t.prototype.isSupported = function () {
            throw new Error("Not implemented!")
        }, t.prototype.isEqualNode = function () {
            throw new Error("Not implemented!")
        }, t.prototype.lookupPrefix = function () {
            throw new Error("Not implemented!")
        }, t.prototype.isDefaultNamespace = function () {
            throw new Error("Not implemented!")
        }, t.prototype.compareDocumentPosition = function () {
            throw new Error("Not implemented!")
        }, t.prototype.normalize = function () {
            throw new Error("Not implemented!")
        }, t.prototype.isSameNode = function (e) {
            return this === e
        }, t.prototype.hasAttributes = function () {
            return this.attributes.length > 0
        }, t.prototype.lookupNamespaceURI = function () {
            throw new Error("Not implemented!")
        }, t.prototype.cloneNode = function () {
            throw new Error("Not implemented!")
        }, t.prototype.hasChildNodes = function () {
            return this.childNodes.length > 0
        }, t.prototype.replaceChild = function () {
            throw new Error("Not implemented!")
        }, t.prototype.insertBefore = function () {
            throw new Error("Not implemented!")
        }, t
    }(n);
    t.MockNode = i;
    var o = function (e) {
        function t(t) {
            e.call(this, t), this.name = t, this.expando = !1
        }

        return __extends(t, e), Object.defineProperty(t.prototype, "specified", {get: function () {
            return!!this.value
        }, enumerable: !0, configurable: !0}), t
    }(i);
    t.MockAttribute = o;
    var r = function (e) {
        function t(t) {
            e.call(this, t), this.tagName = t
        }

        return __extends(t, e), t.prototype.getAttribute = function (e) {
            var t = this.attributes.filter(function (t) {
                return t.name === e
            });
            return t.length ? t[0].value : ""
        }, t.prototype.getElementsByTagNameNS = function () {
            throw new Error("Not implemented!")
        }, t.prototype.hasAttributeNS = function () {
            throw new Error("Not implemented!")
        }, t.prototype.getBoundingClientRect = function () {
            throw new Error("Not implemented!")
        }, t.prototype.getAttributeNS = function () {
            throw new Error("Not implemented!")
        }, t.prototype.getAttributeNodeNS = function () {
            throw new Error("Not implemented!")
        }, t.prototype.setAttributeNodeNS = function () {
            throw new Error("Not implemented!")
        }, t.prototype.hasAttribute = function (e) {
            var t = this.attributes.filter(function (t) {
                return t.name === e
            });
            return t.length > 0
        }, t.prototype.removeAttribute = function (e) {
            this.attributes = this.attributes.filter(function (t) {
                return t.name !== e
            })
        }, t.prototype.setAttributeNS = function () {
            throw new Error("Not implemented!")
        }, t.prototype.getAttributeNode = function () {
            throw new Error("Not implemented!")
        }, t.prototype.getElementsByTagName = function () {
            throw new Error("Not implemented!")
        }, t.prototype.setAttributeNode = function () {
            throw new Error("Not implemented!")
        }, t.prototype.getClientRects = function () {
            throw new Error("Not implemented!")
        }, t.prototype.removeAttributeNode = function () {
            throw new Error("Not implemented!")
        }, t.prototype.setAttribute = function (e, t) {
            this.hasAttribute(e) && this.removeAttribute(e);
            var n = this.ownerDocument.createAttribute(e);
            n.ownerElement = this, n.value = t, this.attributes.push(n)
        }, t.prototype.removeAttributeNS = function () {
            throw new Error("Not implemented!")
        }, t.prototype.querySelectorAll = function () {
            throw new Error("Not implemented!")
        }, t.prototype.querySelector = function () {
            throw new Error("Not implemented!")
        }, Object.defineProperty(t.prototype, "childElementCount", {get: function () {
            var e = this;
            return this._childNodes.filter(function (t) {
                return t.nodeType === e.ELEMENT_NODE
            }).length
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "lastElementChild", {get: function () {
            var e = this, t = this._childNodes.filter(function (t) {
                return t.nodeType === e.ELEMENT_NODE
            });
            return t[t.length - 1]
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "firstElementChild", {get: function () {
            var e = this, t = this._childNodes.filter(function (t) {
                return t.nodeType === e.ELEMENT_NODE
            });
            return t[0]
        }, enumerable: !0, configurable: !0}), t.prototype.msMatchesSelector = function () {
            throw new Error("Not implemented!")
        }, t.prototype.fireEvent = function () {
            throw new Error("Not implemented!")
        }, t.prototype.msGetRegionContent = function () {
            throw new Error("Not implemented!")
        }, t.prototype.msReleasePointerCapture = function () {
            throw new Error("Not implemented!")
        }, t.prototype.msSetPointerCapture = function () {
            throw new Error("Not implemented!")
        }, t
    }(i);
    t.MockElement = r;
    var s = function (e) {
        function t(t) {
            e.call(this, t), this.nodeType = this.TEXT_NODE, this.length = t.length, this.data = t
        }

        return __extends(t, e), t.prototype.deleteData = function () {
            throw new Error("Not implemented!")
        }, t.prototype.replaceData = function () {
            throw new Error("Not implemented!")
        }, t.prototype.appendData = function () {
            throw new Error("Not implemented!")
        }, t.prototype.insertData = function () {
            throw new Error("Not implemented!")
        }, t.prototype.substringData = function () {
            throw new Error("Not implemented!")
        }, t
    }(i);
    t.MockCharacterData = s;
    var a = function (e) {
        function t(t) {
            e.call(this, t), this.wholeText = t
        }

        return __extends(t, e), t.prototype.splitText = function () {
            throw new Error("Not implemented!")
        }, t.prototype.replaceWholeText = function () {
            throw new Error("Not implemented!")
        }, t.prototype.swapNode = function () {
            throw new Error("Not implemented!")
        }, t.prototype.removeNode = function () {
            throw new Error("Not implemented!")
        }, t.prototype.replaceNode = function () {
            throw new Error("Not implemented!")
        }, t
    }(s);
    t.MockText = a;
    var u = function (e) {
        function t(t) {
            e.call(this, t), this.style = {}, this.nodeType = this.ELEMENT_NODE
        }

        return __extends(t, e), Object.defineProperty(t.prototype, "className", {get: function () {
            return this.getAttribute("class")
        }, set: function (e) {
            this.setAttribute("class", e)
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "id", {get: function () {
            return this.getAttribute("id")
        }, set: function (e) {
            this.setAttribute("id", e)
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "children", {get: function () {
            var e = this, t = this._childNodes.filter(function (t) {
                return t.nodeType === e.ELEMENT_NODE
            });
            return t.item || (t.item = function (e) {
                return this[e]
            }.bind(t)), t
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "outerHTML", {get: function () {
            var e = new y(this);
            return e.toString(!0)
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "innerHTML", {get: function () {
            var e = new y(this);
            return e.toString()
        }, set: function (e) {
            var t = this, n = new v(this.ownerDocument), i = n.parse(e);
            i.forEach(function (e) {
                t.appendChild(e)
            })
        }, enumerable: !0, configurable: !0}), t
    }(r);
    t.MockHTMLElement = u;
    var l = function () {
        function e() {
        }

        return e.prototype.createElement = function (e) {
            var t = new u(e);
            return t.ownerDocument = this, t
        }, e.prototype.createTextNode = function (e) {
            var t = new a(e);
            return t.ownerDocument = this, t
        }, e.prototype.createAttribute = function (e) {
            var t = new o(e);
            return t.ownerDocument = this, t
        }, e
    }();
    t.MockDocument = l;
    var d = function () {
        function e() {
        }

        return e
    }();
    t.MockWindow = d;
    var c = function () {
        function e(e) {
            this.name = "error", this.message = e
        }

        return e.prototype.consumeCharacter = function () {
            return this
        }, e.prototype.onTransition = function () {
        }, e
    }(), h = function () {
        function e() {
            this.name = "text", this.textContent = ""
        }

        return e.prototype.consumeCharacter = function (e) {
            var t = e.next();
            switch (t) {
                case"<":
                    return new p;
                case">":
                    return new c("Unexpected >");
                default:
                    return this.textContent += t, this
            }
        }, e.prototype.onTransition = function (e) {
            if (this.textContent) {
                var t = e.document.createTextNode(this.textContent);
                e.currentNode ? e.currentNode.appendChild(t) : e.root.push(t)
            }
        }, e
    }(), p = function () {
        function e() {
            this.name = "tag", this.tagName = "", this.isClosing = !1, this.attributes = {}
        }

        return e.prototype.consumeCharacter = function (e) {
            var t = e.next();
            switch (t) {
                case"/":
                    return this.isClosing = !0, this;
                case">":
                    return this.tagName ? new h : new c("No tag name specified");
                case" ":
                    return this.tagName ? this.isClosing ? new c("Closing tags cannot have attributes") : new f(this) : new c("Tag name must be first.");
                default:
                    return this.tagName += t, this
            }
        }, e.prototype.onTransition = function (e, t) {
            var n = this;
            if (this.tagName && "attribute" !== t)if (this.isClosing) {
                if (e.openElements[e.openElements.length - 1].tagName !== this.tagName)throw new Error("Mismatched closing tag:" + this.tagName);
                e.openElements.pop(), e.currentNode = e.openElements.length ? e.openElements[e.openElements.length - 1] : null
            } else {
                var i = e.document.createElement(this.tagName);
                Object.keys(this.attributes).forEach(function (e) {
                    i.setAttribute(e, n.attributes[e])
                }), e.currentNode ? e.currentNode.appendChild(i) : e.root.push(i), e.openElements.push(i), e.currentNode = i
            }
        }, e
    }(), f = function () {
        function e(e) {
            this.name = "attribute", this.tag = e, this.inValue = !1, this.attributeName = ""
        }

        return e.prototype.consumeCharacter = function (e) {
            var t = e.next();
            switch (t) {
                case" ":
                    return this.inValue ? this.tag : this;
                case"=":
                    return this.inValue = !0, new g(this);
                case">":
                    return e.back(), this.tag;
                default:
                    return this.inValue === !1 && (this.attributeName += t), this
            }
        }, e.prototype.onTransition = function (e, t) {
            "attributeValue" !== t && (this.tag.attributes[this.attributeName] = this.attributeValue)
        }, e
    }(), g = function () {
        function e(e) {
            this.name = "attributeValue", this.attribute = e, this.value = "", this.quote = !1
        }

        return e.prototype.consumeCharacter = function (e) {
            var t = e.next();
            switch (t) {
                case'"':
                    return this.quote === !1 ? (this.quote = !0, this) : this.attribute;
                default:
                    return this.quote === !1 ? new c('Expected " character') : (this.value += t, this)
            }
        }, e.prototype.onTransition = function () {
            this.attribute.attributeValue = this.value
        }, e
    }(), m = function () {
        function e(e) {
            this.index = 0, this.text = e
        }

        return e.prototype.more = function () {
            return this.index < this.text.length
        }, e.prototype.next = function () {
            if (this.index >= this.text.length)throw new Error("Past end of string!");
            return this.text[this.index++]
        }, e.prototype.back = function () {
            this.index--
        }, e
    }(), v = function () {
        function e(e) {
            this.document = e, this.root = [], this.openElements = [], this.currentNode = null, this.activeState = new h
        }

        return e.prototype.parse = function (e) {
            for (var t = new m(e); t.more();) {
                var n = this.activeState.consumeCharacter(t);
                n !== this.activeState && (this.activeState.onTransition(this, n.name), this.activeState = n)
            }
            if ("error" === this.activeState.name)throw new Error(this.activeState.message);
            if (0 !== this.openElements.length)throw new Error("Elements not closed: " + this.openElements.map(function (e) {
                return e.tagName
            }).join());
            return this.root
        }, e
    }(), y = function () {
        function e(e) {
            this.root = e
        }

        return e.prototype.print = function (e) {
            var t = "";
            switch (e.nodeType) {
                case e.ELEMENT_NODE:
                    t += this.printElement(e);
                    break;
                case e.TEXT_NODE:
                    t += this.printText(e)
            }
            return t
        }, e.prototype.printChildren = function (e) {
            var t = "";
            if (e.hasChildNodes())for (var n = 0; n < e.childNodes.length; n++)t += this.print(e.childNodes.item(n));
            return t
        }, e.prototype.printElement = function (e) {
            var t = ["<"];
            return t.push(e.tagName), e.hasAttributes() && t.push(e.attributes.reduce(function (e, t) {
                var n = [e, t.name];
                return t.value && n.push('="', t.value, '"'), n.join("")
            }, " ")), t.push(">"), t.push(this.printChildren(e)), t.push("</"), t.push(e.tagName), t.push(">"), t.join("")
        }, e.prototype.printText = function (e) {
            return e.wholeText
        }, e.prototype.toString = function (e) {
            return e ? this.print(this.root) : this.printChildren(this.root)
        }, e
    }()
}), define("vs/base/eventEmitter", ["require", "exports", "vs/base/errors"], function (e, t, n) {
    "use strict";
    var i = n, o = function () {
        function e(e, t, n) {
            "undefined" == typeof n && (n = null), this._type = e, this._data = t, this._emitterType = n
        }

        return e.prototype.getType = function () {
            return this._type
        }, e.prototype.getData = function () {
            return this._data
        }, e.prototype.getEmitterType = function () {
            return this._emitterType
        }, e
    }();
    t.EmitterEvent = o;
    var r = function () {
        function e() {
            this._listeners = {}, this._bulkListeners = [], this._collectedEvents = [], this._deferredCnt = 0
        }

        return e.prototype.addListener = function (e, t) {
            if ("*" === e)throw new Error("Use addBulkListener(listener) to register your listener!");
            this._listeners.hasOwnProperty(e) ? this._listeners[e].push(t) : this._listeners[e] = [t];
            var n = this;
            return function () {
                n && (n._removeListener(e, t), n = null, t = null)
            }
        }, e.prototype.addListener2 = function (e, t) {
            var n = this.addListener(e, t);
            return{dispose: n}
        }, e.prototype.on = function (e, t) {
            return this.addListener(e, t)
        }, e.prototype.addOneTimeListener = function (e, t) {
            var n = this.addListener(e, function (e) {
                n(), t(e)
            });
            return n
        }, e.prototype.addOneTimeDisposableListener = function (e, t) {
            var n = this.addOneTimeListener(e, t);
            return{dispose: n}
        }, e.prototype.addBulkListener = function (e) {
            var t = this;
            return this._bulkListeners.push(e), function () {
                t._removeBulkListener(e)
            }
        }, e.prototype.addEmitter = function (e, t) {
            "undefined" == typeof t && (t = null);
            var n = this;
            return e.addBulkListener(function (e) {
                var i = e;
                if (t) {
                    i = [];
                    for (var r = 0, s = e.length; s > r; r++)i.push(new o(e[r].getType(), e[r].getData(), t))
                }
                0 === n._deferredCnt ? n._emitEvents(i) : n._collectedEvents.push.apply(n._collectedEvents, i)
            })
        }, e.prototype.addEmitterTypeListener = function (e, t, n) {
            if (t) {
                if ("*" === e)throw new Error("Bulk listeners cannot specify an emitter type");
                return this.addListener(e + "/" + t, n)
            }
            return this.addListener(e, n)
        }, e.prototype._removeListener = function (e, t) {
            if (this._listeners.hasOwnProperty(e))for (var n = this._listeners[e], i = 0, o = n.length; o > i; i++)if (n[i] === t) {
                n.splice(i, 1);
                break
            }
        }, e.prototype._removeBulkListener = function (e) {
            for (var t = 0, n = this._bulkListeners.length; n > t; t++)if (this._bulkListeners[t] === e) {
                this._bulkListeners.splice(t, 1);
                break
            }
        }, e.prototype._emitToSpecificTypeListeners = function (e, t) {
            if (this._listeners.hasOwnProperty(e))for (var n = this._listeners[e].slice(0), o = 0, r = n.length; r > o; o++)try {
                n[o](t)
            } catch (s) {
                i.onUnexpectedError(s)
            }
        }, e.prototype._emitToBulkListeners = function (e) {
            for (var t = this._bulkListeners.slice(0), n = 0, o = t.length; o > n; n++)try {
                t[n](e)
            } catch (r) {
                i.onUnexpectedError(r)
            }
        }, e.prototype._emitEvents = function (e) {
            this._bulkListeners.length > 0 && this._emitToBulkListeners(e);
            for (var t = 0, n = e.length; n > t; t++) {
                var i = e[t];
                this._emitToSpecificTypeListeners(i.getType(), i.getData()), i.getEmitterType() && this._emitToSpecificTypeListeners(i.getType() + "/" + i.getEmitterType(), i.getData())
            }
        }, e.prototype.emit = function (e, t) {
            if ("undefined" == typeof t && (t = {}), this._listeners.hasOwnProperty(e) || 0 !== this._bulkListeners.length) {
                var n = new o(e, t);
                0 === this._deferredCnt ? this._emitEvents([n]) : this._collectedEvents.push(n)
            }
        }, e.prototype.deferredEmit = function (e) {
            this._deferredCnt = this._deferredCnt + 1;
            var t = e();
            return this._deferredCnt = this._deferredCnt - 1, 0 === this._deferredCnt && this._emitCollected(), t
        }, e.prototype._emitCollected = function () {
            var e = this._collectedEvents;
            this._collectedEvents = [], e.length > 0 && this._emitEvents(e)
        }, e.prototype.dispose = function () {
            this._listeners = {}, this._bulkListeners = [], this._collectedEvents = [], this._deferredCnt = 0
        }, e
    }();
    t.EventEmitter = r
}), define("vs/base/dom/dom", ["require", "exports", "vs/base/env", "vs/base/types", "vs/base/eventEmitter", "vs/base/dom/mockDom"], function (e, t, n, i, o, r) {
    "use strict";
    function s(e) {
        for (; e.firstChild;)e.removeChild(e.firstChild)
    }

    function a(e) {
        for (; e;) {
            if (e === document.body)return!0;
            e = e.parentNode
        }
        return!1
    }

    function u(e, t, n, i) {
        var o = function (e) {
            e = e || window.event, n(e)
        };
        return P.isFunction(e.addEventListener) ? (e.addEventListener(t, o, i || !1), function () {
            o && (e.removeEventListener(t, o, i || !1), o = null, e = null, n = null)
        }) : (e.attachEvent("on" + t, o), function () {
            e.detachEvent("on" + t, o)
        })
    }

    function l(e, n, i, o) {
        var r = t.addListener(e, n, i, o);
        return{dispose: r}
    }

    function d(e, n) {
        return t.addListener(e, "mouseout", function (t) {
            for (var i = t.relatedTarget || t.toElement; i && i !== e;)i = i.parentNode;
            i !== e && n(t)
        })
    }

    function c(e, n) {
        var i = t.addNonBubblingMouseOutListener(e, n);
        return{dispose: i}
    }

    function h(e, n, i, o, r) {
        "undefined" == typeof o && (o = H), "undefined" == typeof r && (r = 0);
        var s = null, a = 0, u = !1, l = !1, d = function () {
            a = (new Date).getTime(), i(s), s = null
        }, c = function () {
            if (l = !1, !u) {
                var e = (new Date).getTime() - a;
                e >= r ? d() : l || (l = !0, t.scheduleAtNextAnimationFrame(c))
            }
        }, h = t.addListener(e, n, function (e) {
            s = o(s, e), l || (l = !0, t.scheduleAtNextAnimationFrame(c))
        });
        return function () {
            u = !0, h()
        }
    }

    function p(e, n, i, o, r) {
        "undefined" == typeof o && (o = H), "undefined" == typeof r && (r = A);
        var s = null, a = 0, u = -1, l = function () {
            u = -1, a = (new Date).getTime(), i(s), s = null
        }, d = t.addListener(e, n, function (e) {
            s = o(s, e);
            var t = (new Date).getTime() - a;
            t >= r ? (-1 !== u && window.clearTimeout(u), l()) : -1 === u && (u = window.setTimeout(l, r - t))
        });
        return function () {
            -1 !== u && window.clearTimeout(u), d()
        }
    }

    function f(e, n, i, o, r) {
        return t.animationFrame.isNative ? h(e, n, i, o, r) : p(e, n, i, o, r)
    }

    function g(e, n, i, o, r) {
        var s = t.addThrottledListener(e, n, i, o, r);
        return{dispose: s}
    }

    function m(e) {
        return document.defaultView && P.isFunction(document.defaultView.getComputedStyle) ? document.defaultView.getComputedStyle(e, null) : e.currentStyle
    }

    function v(e, n, i) {
        var o = t.getComputedStyle(e), r = "0";
        return r = o.getPropertyValue ? o.getPropertyValue(n) : o.getAttribute(i), W(e, r)
    }

    function y(e) {
        for (var n = e.offsetParent, i = e.offsetTop, o = e.offsetLeft; null !== (e = e.parentNode) && e !== document.body && e !== document.documentElement;) {
            i -= e.scrollTop;
            var r = t.getComputedStyle(e);
            r && (o -= "rtl" !== r.direction ? e.scrollLeft : -e.scrollLeft), e === n && (o += V.getBorderLeftWidth(e), i += V.getBorderTopWidth(e), i += e.offsetTop, o += e.offsetLeft, n = e.offsetParent)
        }
        return{left: o, top: i}
    }

    function b(e) {
        var n = t.getTopLeftOffset(e);
        return{left: n.left, top: n.top, width: e.clientWidth, height: e.clientHeight}
    }

    function C(e) {
        var t = V.getBorderLeftWidth(e) + V.getBorderRightWidth(e), n = V.getPaddingLeft(e) + V.getPaddingRight(e);
        return e.offsetWidth - t - n
    }

    function E(e) {
        var t = V.getMarginLeft(e) + V.getMarginRight(e);
        return e.offsetWidth + t
    }

    function w(e) {
        var t = V.getBorderTopWidth(e) + V.getBorderBottomWidth(e), n = V.getPaddingTop(e) + V.getPaddingBottom(e);
        return e.offsetHeight - t - n
    }

    function _(e) {
        var t = V.getMarginTop(e) + V.getMarginBottom(e);
        return e.offsetHeight + t
    }

    function S(e, t) {
        if (null === e)return 0;
        for (var n = e.offsetLeft, i = e.parentNode; null !== i && (n -= i.offsetLeft, i !== t);)i = i.parentNode;
        return n
    }

    function T(e, t) {
        if (null === e)return 0;
        for (var n = e.offsetTop, i = e.parentNode; null !== i && (n -= i.offsetTop, i !== t);)i = i.parentNode;
        return n
    }

    function L(e, t) {
        for (; e;) {
            if (e === t)return!0;
            e = e.parentNode
        }
        return!1
    }

    function N() {
        F = document.createElement("style"), F.type = "text/css", F.media = "screen", document.getElementsByTagName("head")[0].appendChild(F)
    }

    function x(e, t) {
        D.isTesting() || t && (F || N(), F.sheet ? F.sheet.insertRule(e + "{" + t + "}", 0) : F.styleSheet.addRule(e, t))
    }

    function M(e) {
        return"object" == typeof HTMLElement ? e instanceof HTMLElement || e instanceof k.MockElement : e && "object" == typeof e && 1 === e.nodeType && "string" == typeof e.nodeName
    }

    function I(e) {
        e.select(), e.setSelectionRange && e.setSelectionRange(0, 9999)
    }

    function R(e) {
        var n = !1, i = !1, o = new O.EventEmitter, r = [], s = null;
        s = {addFocusListener: function (e) {
            var t = o.addListener("focus", e);
            return r.push(t), t
        }, addBlurListener: function (e) {
            var t = o.addListener("blur", e);
            return r.push(t), t
        }, dispose: function () {
            for (; r.length > 0;)r.pop()()
        }};
        var a = function () {
            i = !1, n || (n = !0, o.emit("focus", {}))
        }, u = function () {
            n && (i = !0, window.setTimeout(function () {
                i && (i = !1, n = !1, o.emit("blur", {}))
            }, 0))
        };
        return r.push(t.addListener(e, t.EventType.FOCUS, a, !0)), r.push(t.addListener(e, t.EventType.BLUR, u, !0)), s
    }

    var D = n, P = i, O = o, k = r;
    t.clearNode = s, t.isInDOM = a, t.hasClass, t.addClass, t.removeClass, t.toggleClass, function () {
        function e(e, t) {
            var r = e.className;
            if (!r)return n = -1, void 0;
            t = t.trim();
            var s = r.length, a = t.length;
            if (0 === a)return n = -1, void 0;
            if (a > s)return n = -1, void 0;
            if (r === t)return n = 0, i = s, void 0;
            for (var u, l = -1; (l = r.indexOf(t, l + 1)) >= 0;) {
                if (u = l + a, (0 === l || r.charCodeAt(l - 1) === o) && r.charCodeAt(u) === o)return n = l, i = u + 1, void 0;
                if (l > 0 && r.charCodeAt(l - 1) === o && u === s)return n = l - 1, i = u, void 0;
                if (0 === l && u === s)return n = 0, i = u, void 0
            }
            n = -1
        }

        var n, i, o = " ".charCodeAt(0);
        t.hasClass = function (t, i) {
            return e(t, i), -1 !== n
        }, t.addClass = function (t, i) {
            t.className ? (e(t, i), -1 === n && (t.className = t.className + " " + i)) : t.className = i
        }, t.removeClass = function (t, o) {
            e(t, o), -1 !== n && (t.className = t.className.substring(0, n) + t.className.substring(i))
        }, t.toggleClass = function (i, o, r) {
            e(i, o), -1 === n || r || t.removeClass(i, o), -1 === n && r && t.addClass(i, o)
        }
    }(), t.addListener = u, t.addDisposableListener = l, t.addNonBubblingMouseOutListener = d, t.addDisposableNonBubblingMouseOutListener = c, t.animationFrame = function () {
        var e = function (e) {
            return e((new Date).getTime()), 0
        }, t = self.requestAnimationFrame || self.msRequestAnimationFrame || self.webkitRequestAnimationFrame || self.mozRequestAnimationFrame || self.oRequestAnimationFrame, n = self.cancelAnimationFrame || self.cancelRequestAnimationFrame || self.msCancelAnimationFrame || self.msCancelRequestAnimationFrame || self.webkitCancelAnimationFrame || self.webkitCancelRequestAnimationFrame || self.mozCancelAnimationFrame || self.mozCancelRequestAnimationFrame || self.oCancelAnimationFrame || self.oCancelRequestAnimationFrame, i = !!t, o = t || e, r = n || n;
        return{isNative: i, request: function (e) {
            return o(e)
        }, cancel: function (e) {
            return r(e)
        }}
    }(), t.scheduleAtNextAnimationFrame = function () {
        var e = [], n = !1, i = function () {
            n = !1;
            var t = e;
            e = [];
            for (var i = 0; i < t.length; i++)t[i]()
        };
        return function (o) {
            e.push(o), n || (n = !0, t.animationFrame.request(i))
        }
    }();
    var A = 16, H = function (e, t) {
        return t
    };
    t.addThrottledListener = f, t.addDisposableThrottledListener = g, t.getComputedStyle = m;
    var W = function () {
        var e = /^-?\d+(px)?$/i, t = /^-?\d+/i;
        return function (n, i) {
            if (!e.test(i) && t.test(i)) {
                var o = n.style.left;
                n.style.left = i;
                var r = n.style.pixelLeft;
                return n.style.left = o, r
            }
            return parseInt(i, 10) || 0
        }
    }(), V = {getBorderLeftWidth: function (e) {
        return v(e, "border-left-width", "borderLeftWidth")
    }, getBorderTopWidth: function (e) {
        return v(e, "border-top-width", "borderTopWidth")
    }, getBorderRightWidth: function (e) {
        return v(e, "border-right-width", "borderRightWidth")
    }, getBorderBottomWidth: function (e) {
        return v(e, "border-bottom-width", "borderBottomWidth")
    }, getPaddingLeft: function (e) {
        return v(e, "padding-left", "paddingLeft")
    }, getPaddingTop: function (e) {
        return v(e, "padding-top", "paddingTop")
    }, getPaddingRight: function (e) {
        return v(e, "padding-right", "paddingRight")
    }, getPaddingBottom: function (e) {
        return v(e, "padding-bottom", "paddingBottom")
    }, getMarginLeft: function (e) {
        return v(e, "margin-left", "marginLeft")
    }, getMarginTop: function (e) {
        return v(e, "margin-top", "marginTop")
    }, getMarginRight: function (e) {
        return v(e, "margin-right", "marginRight")
    }, getMarginBottom: function (e) {
        return v(e, "margin-bottom", "marginBottom")
    }, __commaSentinel: !1};
    t.getTopLeftOffset = y, t.getDomNodePosition = b, t.getContentWidth = C, t.getTotalWidth = E, t.getContentHeight = w, t.getTotalHeight = _, t.getRelativeLeft = S, t.getRelativeTop = T, t.isAncestor = L;
    var F = null;
    t.createCSSRule = x, t.isHTMLElement = M, t.EventType = {CLICK: "click", DBLCLICK: "dblclick", MOUSE_UP: "mouseup", MOUSE_DOWN: "mousedown", MOUSE_OVER: "mouseover", MOUSE_MOVE: "mousemove", MOUSE_OUT: "mouseout", CONTEXT_MENU: "contextmenu", KEY_DOWN: "keydown", KEY_PRESS: "keypress", KEY_UP: "keyup", LOAD: "load", UNLOAD: "unload", ABORT: "abort", ERROR: "error", RESIZE: "resize", SCROLL: "scroll", SELECT: "select", CHANGE: "change", SUBMIT: "submit", RESET: "reset", FOCUS: "focus", BLUR: "blur", INPUT: "input", STORAGE: "storage", DRAG_START: "dragstart", DRAG: "drag", DRAG_ENTER: "dragenter", DRAG_LEAVE: "dragleave", DRAG_OVER: "dragover", DROP: "drop", DRAG_END: "dragend", ANIMATION_START: D.browser.isWebKit ? "webkitAnimationStart" : "animationstart", ANIMATION_END: D.browser.isWebKit ? "webkitAnimationEnd" : "animationend", ANIMATION_ITERATION: D.browser.isWebKit ? "webkitAnimationIteration" : "animationiteration"}, t.EventHelper = {stop: function (e, t) {
        e.preventDefault ? e.preventDefault() : e.returnValue = !1, t && (e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0)
    }}, t.selectTextInInputElement = I, t.trackFocus = R, t.UnitConverter = {_emInPx: -1, emToPixel: function (e) {
        if (this._emInPx < 0) {
            var n = document.createElement("div");
            n.style.position = "absolute", n.style.top = "10000px", n.style.left = "10000px", n.style.fontSize = "1em", n.innerHTML = "AbcDef", document.body.appendChild(n);
            var i = t.getTotalHeight(n);
            document.body.removeChild(n), this._emInPx = i
        }
        var o = e * this._emInPx, r = Math.round(o);
        return r
    }}
}), define("vs/editor/core/config", ["require", "exports", "vs/base/env", "vs/editor/core/constants"], function (e, t, n, i) {
    "use strict";
    function o(e, t) {
        return r.browser.isMacintosh ? {shift: e, alt: !0, key: t} : {ctrlCmd: !0, shift: e, key: t}
    }

    var r = n, s = i, a = function () {
        function e() {
            this.editor = {lineHeight: 20, lineNumbers: !0, selectOnLineNumbers: !0, lineNumbersMinChars: 5, glyphMargin: !1, tabSize: 4, insertSpaces: !1, roundedSelection: !0, theme: "vs", pageSize: 1, readOnly: !1, scrollbar: {vertical: "auto", horizontal: "auto", useShadows: !0, verticalHasArrows: !1, horizontalHasArrows: !1}, scrollBeyondLastLine: !0, automaticLayout: !1, wrappingColumn: 300, wordWrapBreakBeforeCharacters: "{([+", wordWrapBreakAfterCharacters: " 	})]?|&,;", wordWrapBreakObtrusiveCharacters: ".", tabFocusMode: !1, stopLineTokenizationAfter: 1e3, stopRenderingLineAfter: 1e4, longLineBoundary: 300, isDominatedByLongLines: !1, hover: !0, quickSuggestions: !0, quickSuggestionsDelay: 500, iconsInSuggestions: !0, autoClosingBrackets: !0, formatOnType: !1, suggestOnTriggerCharacters: !0, gotoDefinitionWithMouse: !0}, this.keyBindings = {}
        }

        return e.prototype.addKeyBinding = function (e, t) {
            this.keyBindings[e] = this.keyBindings[e] || [], this.keyBindings[e].push(t)
        }, e
    }();
    t.ConfigClass = a, t.Config = new a, t.Config.addKeyBinding(s.Handler.CursorLeft, {key: "LeftArrow"}), t.Config.addKeyBinding(s.Handler.CursorLeftSelect, {shift: !0, key: "LeftArrow"}), t.Config.addKeyBinding(s.Handler.CursorRight, {key: "RightArrow"}), t.Config.addKeyBinding(s.Handler.CursorRightSelect, {shift: !0, key: "RightArrow"}), t.Config.addKeyBinding(s.Handler.CursorUp, {key: "UpArrow"}), t.Config.addKeyBinding(s.Handler.CursorUpSelect, {shift: !0, key: "UpArrow"}), t.Config.addKeyBinding(s.Handler.CursorDown, {key: "DownArrow"}), t.Config.addKeyBinding(s.Handler.CursorDownSelect, {shift: !0, key: "DownArrow"}), t.Config.addKeyBinding(s.Handler.CursorPageUp, {key: "PageUp"}), t.Config.addKeyBinding(s.Handler.CursorPageUpSelect, {shift: !0, key: "PageUp"}), t.Config.addKeyBinding(s.Handler.CursorPageDown, {key: "PageDown"}), t.Config.addKeyBinding(s.Handler.CursorPageDownSelect, {shift: !0, key: "PageDown"}), t.Config.addKeyBinding(s.Handler.CursorHome, {key: "Home"}), t.Config.addKeyBinding(s.Handler.CursorHomeSelect, {shift: !0, key: "Home"}), t.Config.addKeyBinding(s.Handler.CursorEnd, {key: "End"}), t.Config.addKeyBinding(s.Handler.CursorEndSelect, {shift: !0, key: "End"}), t.Config.addKeyBinding(s.Handler.Tab, {key: "Tab"}), t.Config.addKeyBinding(s.Handler.Outdent, {shift: !0, key: "Tab"}), t.Config.addKeyBinding(s.Handler.DeleteLeft, {key: "Backspace"}), t.Config.addKeyBinding(s.Handler.DeleteLeft, {shift: !0, key: "Backspace"}), t.Config.addKeyBinding(s.Handler.DeleteRight, {key: "Delete"}), t.Config.addKeyBinding(s.Handler.DeleteRight, {shift: !0, key: "Delete"}), t.Config.addKeyBinding(s.Handler.Indent, {ctrlCmd: !0, key: "]"}), t.Config.addKeyBinding(s.Handler.Outdent, {ctrlCmd: !0, key: "["}), t.Config.addKeyBinding(s.Handler.SelectAll, {ctrlCmd: !0, key: "A"}), t.Config.addKeyBinding(s.Handler.Escape, {key: "Escape"}), t.Config.addKeyBinding(s.Handler.LineInsertBefore, {ctrlCmd: !0, shift: !0, key: "Enter"}), t.Config.addKeyBinding(s.Handler.LineInsertAfter, {ctrlCmd: !0, key: "Enter"}), t.Config.addKeyBinding(s.Handler.AddCursorUp, {ctrlCmd: !0, alt: !0, key: "UpArrow"}), t.Config.addKeyBinding(s.Handler.AddCursorDown, {ctrlCmd: !0, alt: !0, key: "DownArrow"}), t.Config.addKeyBinding(s.Handler.CursorWordLeft, o(!1, "LeftArrow")), t.Config.addKeyBinding(s.Handler.CursorWordLeftSelect, o(!0, "LeftArrow")), t.Config.addKeyBinding(s.Handler.CursorWordRight, o(!1, "RightArrow")), t.Config.addKeyBinding(s.Handler.CursorWordRightSelect, o(!0, "RightArrow")), t.Config.addKeyBinding(s.Handler.CursorDownSelect, o(!0, "DownArrow")), t.Config.addKeyBinding(s.Handler.CursorUpSelect, o(!0, "UpArrow")), t.Config.addKeyBinding(s.Handler.DeleteWordLeft, o(!1, "Backspace")), t.Config.addKeyBinding(s.Handler.DeleteWordRight, o(!1, "Delete")), r.browser.isMacintosh ? (t.Config.addKeyBinding(s.Handler.CursorTop, {ctrlCmd: !0, key: "UpArrow"}), t.Config.addKeyBinding(s.Handler.CursorTopSelect, {ctrlCmd: !0, shift: !0, key: "UpArrow"}), t.Config.addKeyBinding(s.Handler.CursorBottom, {ctrlCmd: !0, key: "DownArrow"}), t.Config.addKeyBinding(s.Handler.CursorBottomSelect, {ctrlCmd: !0, shift: !0, key: "DownArrow"}), r.browser.isOpera ? (t.Config.addKeyBinding(s.Handler.Undo, {winCtrl: !0, key: "Z"}), t.Config.addKeyBinding(s.Handler.Redo, {winCtrl: !0, key: "Y"})) : (t.Config.addKeyBinding(s.Handler.Undo, {ctrlCmd: !0, key: "Z"}), t.Config.addKeyBinding(s.Handler.Redo, {ctrlCmd: !0, shift: !0, key: "Z"})), t.Config.addKeyBinding(s.Handler.CursorHome, {ctrlCmd: !0, key: "LeftArrow"}), t.Config.addKeyBinding(s.Handler.CursorHomeSelect, {ctrlCmd: !0, shift: !0, key: "LeftArrow"}), t.Config.addKeyBinding(s.Handler.CursorEnd, {ctrlCmd: !0, key: "RightArrow"}), t.Config.addKeyBinding(s.Handler.CursorEndSelect, {ctrlCmd: !0, shift: !0, key: "RightArrow"}), t.Config.addKeyBinding(s.Handler.CursorHome, {winCtrl: !0, key: "A"}), t.Config.addKeyBinding(s.Handler.CursorLeft, {winCtrl: !0, key: "B"}), t.Config.addKeyBinding(s.Handler.DeleteRight, {winCtrl: !0, key: "D"}), t.Config.addKeyBinding(s.Handler.CursorEnd, {winCtrl: !0, key: "E"}), t.Config.addKeyBinding(s.Handler.CursorRight, {winCtrl: !0, key: "F"}), t.Config.addKeyBinding(s.Handler.DeleteLeft, {winCtrl: !0, key: "H"}), t.Config.addKeyBinding(s.Handler.DeleteAllRight, {winCtrl: !0, key: "K"}), t.Config.addKeyBinding(s.Handler.CursorDown, {winCtrl: !0, key: "N"}), t.Config.addKeyBinding(s.Handler.LineBreakInsert, {winCtrl: !0, key: "O"}), t.Config.addKeyBinding(s.Handler.CursorUp, {winCtrl: !0, key: "P"}), t.Config.addKeyBinding(s.Handler.CursorPageDown, {winCtrl: !0, key: "V"})) : (t.Config.addKeyBinding(s.Handler.CursorTop, {ctrlCmd: !0, key: "Home"}), t.Config.addKeyBinding(s.Handler.CursorTopSelect, {ctrlCmd: !0, shift: !0, key: "Home"}), t.Config.addKeyBinding(s.Handler.CursorBottom, {ctrlCmd: !0, key: "End"}), t.Config.addKeyBinding(s.Handler.CursorBottomSelect, {ctrlCmd: !0, shift: !0, key: "End"}), t.Config.addKeyBinding(s.Handler.Undo, {ctrlCmd: !0, key: "Z"}), t.Config.addKeyBinding(s.Handler.Redo, {ctrlCmd: !0, key: "Y"}), t.Config.addKeyBinding(s.Handler.Redo, {ctrlCmd: !0, shift: !0, key: "Z"}))
}), define("vs/editor/core/handlerDispatcher", ["require", "exports"], function (e, t) {
    "use strict";
    var n = function () {
        function e(e, t) {
            this.source = e, this.data = t
        }

        return e.prototype.getSource = function () {
            return this.source
        }, e.prototype.getData = function () {
            return this.data
        }, e
    }();
    t.DispatcherEvent = n;
    var i = function () {
        function e() {
            this.registry = {}
        }

        return e.prototype.setHandler = function (e, t) {
            this.registry[e] = t
        }, e.prototype.clearHandlers = function () {
            this.registry = {}
        }, e.prototype.getHandler = function (e) {
            return this.registry.hasOwnProperty(e) ? this.registry[e] : null
        }, e.prototype.trigger = function (e, t, i) {
            var o = this.getHandler(t), r = !1;
            if (o) {
                var s = new n(e, i);
                r = o(s)
            }
            return r
        }, e
    }();
    t.HandlerDispatcher = i
}), define("vs/base/dom/measurementHelper", ["require", "exports", "./dom"], function (e, t, n) {
    "use strict";
    function i(e) {
        if ("%" === e[e.length - 1])throw new Error("Relative dimensions not supported");
        return parseInt(e, 10)
    }

    var o = n, r = function () {
        function e() {
            this.measurements = []
        }

        return e.prototype.measure = function (e) {
            var t = this;
            this.measurements = [];
            var n = {create: function (e, t, n) {
                var i = document.createElement(e);
                return i.className = t, i.textContent = n, i
            }, measure: function (e, n) {
                t.measurements.push({domNode: e, measureFunc: n, container: null})
            }};
            e(n), this._doMeasurements()
        }, e.prototype._doMeasurements = function () {
            var e, t, n = this.measurements.length;
            for (e = 0; n > e; e++)t = this.measurements[e], t.container = document.createElement("div"), t.container.style.position = "absolute", t.container.style.top = "-5000px", t.container.appendChild(t.domNode);
            for (e = 0; n > e; e++)document.body.appendChild(this.measurements[e].container);
            for (e = 0; n > e; e++) {
                t = this.measurements[e];
                try {
                    t.measureFunc(t.domNode, o.getComputedStyle(t.domNode))
                } catch (i) {
                    console.error("Measurement failed"), console.error(i)
                }
            }
            for (e = 0; n > e; e++)document.body.removeChild(this.measurements[e].container)
        }, e
    }();
    t.MeasurementHelper = r;
    var s = function () {
        function e(e) {
            this._computedStyle = o.getComputedStyle(e), this._dimensions = {width: this._computedStyle.getPropertyValue("width"), height: this._computedStyle.getPropertyValue("height")}, this._margin = {top: this._computedStyle.getPropertyValue("margin-top"), bottom: this._computedStyle.getPropertyValue("margin-bottom"), left: this._computedStyle.getPropertyValue("margin-left"), right: this._computedStyle.getPropertyValue("margin-right")}, this._padding = {top: this._computedStyle.getPropertyValue("padding-top"), bottom: this._computedStyle.getPropertyValue("padding-bottom"), left: this._computedStyle.getPropertyValue("padding-left"), right: this._computedStyle.getPropertyValue("padding-right")}, this._border = {top: this._computedStyle.getPropertyValue("border-top-width"), bottom: this._computedStyle.getPropertyValue("border-bottom-width"), left: this._computedStyle.getPropertyValue("border-left-width"), right: this._computedStyle.getPropertyValue("border-right-width")}
        }

        return e.prototype.getComputedStyle = function () {
            return this._computedStyle
        }, e.prototype.getDimensions = function () {
            return this._dimensions
        }, e.prototype.getMargin = function () {
            return this._margin
        }, e.prototype.getPadding = function () {
            return this._padding
        }, e.prototype.getBorder = function () {
            return this._border
        }, e.prototype.getTotalWidth = function () {
            return i(this._margin.left) + i(this._border.left) + i(this._padding.left) + i(this._dimensions.width) + i(this._padding.right) + i(this._border.right) + i(this._margin.right)
        }, e.prototype.getTotalHeight = function () {
            return i(this._margin.top) + i(this._border.top) + i(this._padding.top) + i(this._dimensions.height) + i(this._padding.bottom) + i(this._border.bottom) + i(this._margin.bottom)
        }, e
    }();
    t.ComputedDimensions = s
}), define("vs/base/filters", ["require", "exports"], function (e, t) {
    "use strict";
    function n() {
        for (var e = [], t = 0; t < arguments.length - 0; t++)e[t] = arguments[t + 0];
        return function (t, n) {
            for (var i = 0, o = e.length; o > i; i++) {
                var r = e[i](t, n);
                if (r)return r
            }
            return null
        }
    }

    function i() {
        for (var e = [], t = 0; t < arguments.length - 0; t++)e[t] = arguments[t + 0];
        return function (t, n) {
            for (var i = [], o = 0, r = e.length; r > o; o++) {
                var s = e[o](t, n);
                if (!s)return null;
                i = i.concat(s)
            }
            return i
        }
    }

    function o(e, t, n) {
        if (0 === n.length || n.length < t.length)return null;
        e && (t = t.toLowerCase(), n = n.toLowerCase());
        for (var i = 0; i < t.length; i++)if (t[i] !== n[i])return null;
        return t.length > 0 ? [
            {start: 0, end: t.length}
        ] : []
    }

    function r(e, t) {
        var n = t.toLowerCase().indexOf(e.toLowerCase());
        return-1 === n ? null : [
            {start: n, end: n + e.length}
        ]
    }

    function s(e, t) {
        return a(e.toLowerCase(), t.toLowerCase(), 0, 0)
    }

    function a(e, t, n, i) {
        if (n === e.length)return[];
        if (i === t.length)return null;
        if (e[n] === t[i]) {
            var o = null;
            if (o = a(e, t, n + 1, i + 1))return c({start: i, end: i + 1}, o)
        }
        return a(e, t, n, i + 1)
    }

    function u(e, t) {
        if (0 === t.length)return null;
        for (var n = null, i = 0; i < t.length && null === (n = p(e.toLowerCase(), t, 0, i));)i = h(t, i + 1);
        return n
    }

    function l(e) {
        var t = e.charCodeAt(0);
        return t >= 65 && 90 >= t
    }

    function d(e) {
        var t = e.charCodeAt(0);
        return t >= 48 && 57 >= t
    }

    function c(e, t) {
        return 0 === t.length ? t = [e] : e.end === t[0].start ? t[0].start = e.start : t.unshift(e), t
    }

    function h(e, t) {
        for (var n = t; n < e.length; n++) {
            var i = e[n];
            if (l(i) || d(i))return n
        }
        return e.length
    }

    function p(e, t, n, i) {
        if (n === e.length)return[];
        if (i === t.length)return null;
        if (e[n] !== t[i].toLowerCase())return null;
        var o = null, r = i + 1;
        for (o = p(e, t, n + 1, i + 1); !o && (r = h(t, r)) < t.length;)o = p(e, t, n + 1, r), r++;
        return null === o ? null : c({start: i, end: i + 1}, o)
    }

    t.or = n, t.and = i, t.matchesStrictPrefix = function (e, t) {
        return o(!1, e, t)
    }, t.matchesPrefix = function (e, t) {
        return o(!0, e, t)
    }, t.matchesContiguousSubString = r, t.matchesSubString = s, t.matchesCamelCase = u
}), define("vs/editor/modes/modesFilters", ["require", "exports", "vs/base/filters"], function (e, t, n) {
    "use strict";
    function i(e) {
        return function (t, n) {
            var i = e(t, n.label);
            return n.highlights = i || [], !!i
        }
    }

    function o(e, t) {
        return function (n, i) {
            return e(n, i) || t(n, i)
        }
    }

    function r(e, t) {
        return function (n, i) {
            return e(n, i) && t(n, i)
        }
    }

    function s(e) {
        var t = {};
        return function (n, i) {
            var o = e(i);
            return t[o] ? !1 : (t[o] = !0, !0)
        }
    }

    var a = n;
    t.StrictPrefix = i(a.matchesStrictPrefix), t.Prefix = i(a.matchesPrefix), t.CamelCase = i(a.matchesCamelCase), t.ContiguousSubString = i(a.matchesContiguousSubString), t.or = o, t.and = r, t.newDuplicateFilter = s, t.DefaultFilter = t.or(t.or(t.Prefix, t.CamelCase), t.ContiguousSubString)
}), define("vs/editor/modes/stream", ["require", "exports"], function (e, t) {
    "use strict";
    var n = function () {
        function e(e) {
            this._source = e, this.sourceLength = e.length, this._pos = 0, this.whitespace = "	 Â ", this.whitespaceArr = this.stringToArray(this.whitespace), this.separators = "", this.separatorsArr = this.stringToArray(this.separators), this.tokenStart = -1, this.tokenEnd = -1
        }

        return e.prototype.stringToArray = function (t) {
            return e.STRING_TO_ARRAY_CACHE.hasOwnProperty(t) || (e.STRING_TO_ARRAY_CACHE[t] = this.actualStringToArray(t)), e.STRING_TO_ARRAY_CACHE[t]
        }, e.prototype.actualStringToArray = function (e) {
            for (var t = 0, n = 0; n < e.length; n++)t = e.charCodeAt(n);
            var i = [];
            for (n = 0; t > n; n++)i[n] = !1;
            for (n = 0; n < e.length; n++)i[e.charCodeAt(n)] = !0;
            return i
        }, e.prototype.pos = function () {
            return this._pos
        }, e.prototype.eos = function () {
            return this._pos >= this.sourceLength
        }, e.prototype.peek = function () {
            if (this._pos >= this.sourceLength)throw new Error("Stream is at the end");
            return this._source[this._pos]
        }, e.prototype.next = function () {
            if (this._pos >= this.sourceLength)throw new Error("Stream is at the end");
            return this.tokenStart = -1, this.tokenEnd = -1, this._source[this._pos++]
        }, e.prototype.advance = function (e) {
            var t = this._pos;
            return this._pos += e, this.resetPeekedToken(), this._source.substring(t, this._pos)
        }, e.prototype.advanceToEOS = function () {
            var e = this._pos;
            return this._pos = this.sourceLength, this.resetPeekedToken(), this._source.substring(e, this._pos)
        }, e.prototype.goBack = function (e) {
            this._pos -= e, this.resetPeekedToken()
        }, e.prototype.createPeeker = function (e) {
            var t = this;
            if (e instanceof RegExp)return function () {
                var n = e.exec(t._source.substr(t._pos));
                if (null === n)return 0;
                if (0 !== n.index)throw new Error('Regular expression must begin with the character "^"');
                return n[0].length
            };
            if ((e instanceof String || "string" == typeof e) && e)return function () {
                for (var n = e.length, i = t._pos + n <= t.sourceLength, o = 0; i && n > o; o++)i = t._source.charCodeAt(t._pos + o) === e.charCodeAt(o);
                return i ? n : 0
            };
            throw new Error("Condition must be either a regular expression, function or a non-empty string")
        }, e.prototype.advanceIfStringCaseInsensitive = function (e) {
            var t, n = this._pos, i = this._source, o = e.length;
            if (1 > o || n + o > this.sourceLength)return"";
            for (t = 0; o > t; t++)if (i.charAt(n + t).toLowerCase() !== e.charAt(t).toLowerCase())return"";
            return this.advance(o)
        }, e.prototype.advanceIfString = function (e) {
            var t, n = this._pos, i = this._source, o = e.length;
            if (1 > o || n + o > this.sourceLength)return"";
            for (t = 0; o > t; t++)if (i.charCodeAt(n + t) !== e.charCodeAt(t))return"";
            return this.advance(o)
        }, e.prototype.advanceIfCharCode = function (e) {
            return this._pos < this.sourceLength && this._source.charCodeAt(this._pos) === e ? this.advance(1) : ""
        }, e.prototype.advanceIfRegExp = function (e) {
            if (this._pos >= this.sourceLength)return"";
            var t = e.exec(this._source.substr(this._pos));
            if (t) {
                if (0 === t.index)return this.advance(t[0].length);
                throw new Error('Regular expression must begin with the character "^"')
            }
            return""
        }, e.prototype.advanceLoop = function (e, t, n) {
            if (this.eos())return"";
            var i = this.createPeeker(e), o = this._pos, r = 0, s = null;
            for (s = t ? function (e) {
                return e > 0
            } : function (e) {
                return 0 === e
            }; !this.eos() && s(r = i());)r > 0 ? this.advance(r) : this.next();
            return n && !this.eos() && this.advance(r), this._source.substring(o, this._pos)
        }, e.prototype.advanceWhile = function (e) {
            return this.advanceLoop(e, !0, !1)
        }, e.prototype.advanceUntil = function (e, t) {
            return this.advanceLoop(e, !1, t)
        }, e.prototype.resetPeekedToken = function () {
            this.tokenStart = -1, this.tokenEnd = -1
        }, e.prototype.setTokenRules = function (e, t) {
            (this.separators !== e || this.whitespace !== t) && (this.separators = e, this.separatorsArr = this.stringToArray(this.separators), this.whitespace = t, this.whitespaceArr = this.stringToArray(this.whitespace), this.resetPeekedToken())
        }, e.prototype.peekToken = function () {
            if (-1 !== this.tokenStart)return this._source.substring(this.tokenStart, this.tokenEnd);
            var e = this._source, t = this.sourceLength, n = this.whitespaceArr, i = this.separatorsArr, o = this._pos;
            if (o >= t)throw new Error("Stream is at the end");
            for (; n[e.charCodeAt(o)] && t > o;)o++;
            var r = o;
            if (i[e.charCodeAt(r)] && t > r)r++; else for (; !i[e.charCodeAt(r)] && !n[e.charCodeAt(r)] && t > r;)r++;
            return this.tokenStart = o, this.tokenEnd = r, e.substring(o, r)
        }, e.prototype.nextToken = function () {
            if (this._pos >= this.sourceLength)throw new Error("Stream is at the end");
            var e;
            return e = -1 === this.tokenStart ? this.peekToken() : this._source.substring(this.tokenStart, this.tokenEnd), this._pos = this.tokenEnd, this.tokenStart = -1, this.tokenEnd = -1, e
        }, e.prototype.peekWhitespace = function () {
            for (var e = this._source, t = this.sourceLength, n = this.whitespaceArr, i = this._pos; n[e.charCodeAt(i)] && t > i;)i++;
            return e.substring(this._pos, i)
        }, e.prototype.skipWhitespace = function () {
            for (var e = this._source, t = this.sourceLength, n = this.whitespaceArr, i = this._pos, o = this._pos; n[e.charCodeAt(o)] && t > o;)o++;
            return i !== o ? (this._pos = o, this.tokenStart = -1, this.tokenEnd = -1, e.substring(i, o)) : ""
        }, e.STRING_TO_ARRAY_CACHE = {}, e
    }();
    t.LineStream = n
}), define("vs/editor/modes/modes", ["require", "exports", "vs/base/types"], function (e, t, n) {
    "use strict";
    function i(e) {
        return null === e || "object" != typeof e ? !1 : "string" != typeof e.label || "string" != typeof e.codeSnippet || "string" != typeof e.type ? !1 : o.isUndefinedOrNull(e.highlights) || o.isArray(e.highlights) ? o.isUndefinedOrNull(e.typeLabel) || "string" == typeof e.typeLabel ? o.isUndefinedOrNull(e.documentationLabel) || "string" == typeof e.documentationLabel ? !0 : !1 : !1 : !1
    }

    var o = n;
    !function (e) {
        e[e.None = 0] = "None", e[e.Open = 1] = "Open", e[e.Close = -1] = "Close"
    }(t.Bracket || (t.Bracket = {})), t.Bracket, t.isISuggestion = i, function (e) {
        e[e.None = 0] = "None", e[e.Indent = 1] = "Indent", e[e.IndentOutdent = 2] = "IndentOutdent"
    }(t.IndentAction || (t.IndentAction = {})), t.IndentAction
}), define("vs/editor/modes/nullMode", ["require", "exports", "vs/editor/modes/modes"], function (e, t, n) {
    "use strict";
    function i(e, t, n, i) {
        "undefined" == typeof i && (i = 0);
        var r = [
            {startIndex: i, type: "", bracket: o.Bracket.None}
        ], s = [
            {startIndex: i, mode: e}
        ];
        return{tokens: r, actualStopOffset: i + t.length, endState: n, modeTransitions: s}
    }

    var o = n, r = function () {
        function e(e, t) {
            this.mode = e, this.stateData = t
        }

        return e.prototype.clone = function () {
            var t = this.stateData ? this.stateData.clone() : null;
            return new e(this.mode, t)
        }, e.prototype.equals = function (e) {
            if (this.mode !== e.getMode())return!1;
            var t = e.getStateData();
            return this.stateData || t ? this.stateData && t ? this.stateData.equals(t) : !1 : !0
        }, e.prototype.getMode = function () {
            return this.mode
        }, e.prototype.tokenize = function (e) {
            return e.advanceToEOS(), {type: ""}
        }, e.prototype.getStateData = function () {
            return this.stateData
        }, e.prototype.setStateData = function (e) {
            this.stateData = e
        }, e
    }();
    t.NullState = r;
    var s = function () {
        function e() {
            this.tokenTypeClassificationSupport = this
        }

        return e.prototype.getId = function () {
            return"vs.editor.modes.nullMode"
        }, e.prototype.bindModel = function () {
        }, e.prototype.unbindModel = function () {
        }, e.prototype.getNonWordTokenTypes = function () {
            return[]
        }, e.prototype.getWordDefinition = function () {
            return e.DEFAULT_WORD_REGEXP
        }, e.DEFAULT_WORD_REGEXP = /(-?\d*\.\d\w*)|(\w+)/g, e
    }();
    t.NullMode = s, t.nullTokenize = i
}), define("vs/base/arrays", ["require", "exports"], function (e, t) {
    "use strict";
    function n(e, t) {
        return"undefined" == typeof t && (t = 0), e[e.length - (1 + t)]
    }

    function i(e, t, n) {
        for (var i = 0, o = e.length - 1; o >= i;) {
            var r = Math.floor((i + o) / 2), s = n(e[r], t);
            if (0 > s)i = r + 1; else {
                if (!(s > 0))return r;
                o = r - 1
            }
        }
        return-1
    }

    function o(e) {
        for (var t = [], n = 0, i = e.length; i > n; n++)t.push.apply(t, e[n]);
        return t
    }

    function r(e, t) {
        for (var n, i = 0, o = e.length - 1; o > i;)n = i + Math.ceil((o - i) / 2), e[n].startIndex > t ? o = n - 1 : i = n;
        return i
    }

    function s(e) {
        for (var t = [], n = 0; n < e.length; n++) {
            var i = e[n];
            i && t.push(i)
        }
        return t
    }

    t.tail = n, t.binarySearch = i, t.merge = o, t.findIndexInSegmentsArray = r, t.coalesce = s
}), define("vs/editor/core/controller/cursorMoveHelper", ["require", "exports"], function (e, t) {
    "use strict";
    var n = function () {
        function e(e) {
            this.configuration = e
        }

        return e.prototype.getLeftOfPosition = function (e, t, n) {
            return n > 1 ? n -= 1 : t > 1 && (t -= 1, n = e.getLineMaxColumn(t)), {lineNumber: t, column: n}
        }, e.prototype.getRightOfPosition = function (e, t, n) {
            return n < e.getLineMaxColumn(t) ? n += 1 : t < e.getLineCount() && (t += 1, n = 1), {lineNumber: t, column: n}
        }, e.prototype.getPositionUp = function (e, t, n, i, o) {
            var r = this.visibleColumnFromColumn(e, t, n) + i;
            return t -= o, 1 > t && (t = 1), n = this.columnFromVisibleColumn(e, t, r), i = r - this.visibleColumnFromColumn(e, t, n), {lineNumber: t, column: n, leftoverVisibleColumns: i}
        }, e.prototype.getPositionDown = function (e, t, n, i, o) {
            var r = this.visibleColumnFromColumn(e, t, n) + i;
            t += o;
            var s = e.getLineCount();
            return t > s && (t = s), n = this.columnFromVisibleColumn(e, t, r), i = r - this.visibleColumnFromColumn(e, t, n), {lineNumber: t, column: n, leftoverVisibleColumns: i}
        }, e.prototype.getColumnAtBeginningOfLine = function (e, t, n) {
            var i = e.getLineFirstNonWhitespaceColumn(t) || 1;
            return n = 1 !== n && i >= n ? 1 : i
        }, e.prototype.getColumnAtEndOfLine = function (e, t, n) {
            var i = e.getLineMaxColumn(t), o = e.getLineLastNonWhitespaceColumn(t) || i;
            return n = n !== i && n >= o ? i : o
        }, e.prototype.visibleColumnFromColumn = function (e, t, n) {
            for (var i = e.getLineContent(t), o = 0, r = 0; n - 1 > r; r++)o = "	" === i.charAt(r) ? this.nextTabColumn(o) : o + 1;
            return o
        }, e.prototype.columnFromVisibleColumn = function (e, t, n) {
            for (var i = e.getLineContent(t), o = -1, r = 0, s = 0; s < i.length && n >= r; s++)o = r, r = "	" === i.charAt(s) ? this.nextTabColumn(r) : r + 1;
            return r = Math.abs(n - r), o = Math.abs(n - o), o > r ? s + 1 : s
        }, e.prototype.nextTabColumn = function (e) {
            return e + this.configuration.editor.tabSize - e % this.configuration.editor.tabSize
        }, e
    }();
    t.ModelCursorMoveHelper = n
}), define("vs/editor/core/view/viewContext", ["require", "exports"], function (e, t) {
    "use strict";
    t.ClassNames = {TEXTAREA_COVER: "textAreaCover", TEXTAREA: "inputarea", VIEW_LINES: "view-lines", VIEW_LINE: "view-line", SCROLLABLE_ELEMENT: "editor-scrollable", CONTENT_WIDGETS: "contentWidgets", OVERLAY_WIDGETS: "overlayWidgets", LINES_DECORATIONS: "lines-decorations", LINE_NUMBERS: "line-numbers", GLYPH_MARGIN: "glyph-margin"}, t.EventNames = {ModelFlushedEvent: "modelFlushedEvent", LinesDeletedEvent: "linesDeletedEvent", LinesInsertedEvent: "linesInsertedEvent", LineChangedEvent: "lineChangedEvent", TokensChangedEvent: "tokensChangedEvent", DecorationsChangedEvent: "decorationsChangedEvent", CursorPositionChangedEvent: "cursorPositionChangedEvent", CursorSelectionChangedEvent: "cursorSelectionChangedEvent", RevealRangeEvent: "revealRangeEvent", LineMappingChangedEvent: "lineMappingChangedEvent"};
    var n = function () {
        function e(e, t, n, i, o, r) {
            this.editorId = e, this.configuration = t, this.model = n, this.privateViewEventBus = i, this.addEventHandler = o, this.removeEventHandler = r
        }

        return e
    }();
    t.ViewContext = n
}), define("vs/base/dom/keyboardEvent", ["require", "vs/base/lib/winjs.base", "vs/base/env", "vs/base/dom/dom"], function (e, t, n, i) {
    "use strict";
    var o = function () {
        var e = {Backspace: 8, Tab: 9, Enter: 13, Shift: 16, Ctrl: 17, Alt: 18, PauseBreak: 19, CapsLock: 20, Escape: 27, Space: 32, PageUp: 33, PageDown: 34, End: 35, Home: 36, LeftArrow: 37, UpArrow: 38, RightArrow: 39, DownArrow: 40, Insert: 45, Delete: 46, 0: 48, 1: 49, 2: 50, 3: 51, 4: 52, 5: 53, 6: 54, 7: 55, 8: 56, 9: 57, A: 65, B: 66, C: 67, D: 68, E: 69, F: 70, G: 71, H: 72, I: 73, J: 74, K: 75, L: 76, M: 77, N: 78, O: 79, P: 80, Q: 81, R: 82, S: 83, T: 84, U: 85, V: 86, W: 87, X: 88, Y: 89, Z: 90, F1: 112, F2: 113, F3: 114, F4: 115, F5: 116, F6: 117, F7: 118, F8: 119, F9: 120, F10: 121, F11: 122, F12: 123, NumLock: 144, ScrollLock: 145, ";": 186, "=": 187, ",": 188, "-": 189, ".": 190, "/": 191, "`": 192, "[": 219, "\\": 220, "]": 221, "'": 222};
        n.browser.isIE10 ? e.Meta = 91 : n.browser.isFirefox ? (e["-"] = 109, e["="] = 107, e[";"] = 59, n.browser.isMacintosh && (e.Meta = 224)) : n.browser.isOpera ? (e["-"] = 109, e["="] = 61, e[";"] = 59, n.browser.isMacintosh && (e.Meta = 57392)) : n.browser.isWebKit && n.browser.isMacintosh && (e.Meta = 91);
        var t = {};
        !function () {
            for (var n in e)e.hasOwnProperty(n) && (t[e[n]] = n)
        }(), n.browser.isOpera ? (t[189] = "-", t[187] = "=", t[186] = ";") : n.browser.isWebKit && n.browser.isMacintosh && (t[93] = "Meta");
        var i = function (e, n) {
            return t.hasOwnProperty(e) ? t[e] : n
        }, o = null;
        return o = n.browser.isOpera ? function (e) {
            return"keypress" === e.type ? e.which <= 32 ? i(e.keyCode, String.fromCharCode(e.keyCode).toUpperCase()) : String.fromCharCode(e.which).toUpperCase() : i(e.keyCode, "unknown")
        } : function (e) {
            return e.charCode ? String.fromCharCode(e.charCode).toUpperCase() : i(e.keyCode, "unknown")
        }, {CHAR_TO_CODE: e, CODE_TO_CHAR: t, extractKey: o}
    }(), r = t.Class.define(function (e) {
        if (this.browserEvent = e, this.ctrlKey = e.ctrlKey, this.shiftKey = e.shiftKey, this.altKey = e.altKey, this.metaKey = e.metaKey, this.target = e.target || e.targetNode, this.key = o.extractKey(e), this.ctrlKey = this.ctrlKey || "Ctrl" === this.key, this.altKey = this.altKey || "Alt" === this.key, this.shiftKey = this.shiftKey || "Shift" === this.key, this.metaKey = this.metaKey || "Meta" === this.key, n.browser.isOpera && n.browser.isMacintosh) {
            var t = this.metaKey;
            this.metaKey = this.ctrlKey, this.ctrlKey = t, "Ctrl" === this.key ? this.key = "Meta" : "Meta" === this.key && (this.key = "Ctrl")
        }
    }, {preventDefault: function () {
        this.browserEvent.preventDefault ? this.browserEvent.preventDefault() : this.browserEvent.returnValue = !1
    }, stopPropagation: function () {
        this.browserEvent.stopPropagation ? this.browserEvent.stopPropagation() : this.browserEvent.cancelBubble = !0
    }, clone: function () {
        var e = this.asString();
        return{ctrlKey: this.ctrlKey, shiftKey: this.shiftKey, altKey: this.altKey, metaKey: this.metaKey, target: this.target, key: this.key, preventDefault: function () {
        }, stopPropagation: function () {
        }, asString: function () {
            return e
        }}
    }, asString: function () {
        var e = "";
        return this.ctrlKey && (e += "Ctrl"), this.shiftKey && (e += ("" === e ? "" : "-") + "Shift"), this.altKey && (e += ("" === e ? "" : "-") + "Alt"), this.metaKey && (e += ("" === e ? "" : "-") + "Meta"), this.key && "Ctrl" !== this.key && "Shift" !== this.key && "Alt" !== this.key && "Meta" !== this.key && (e += ("" === e ? "" : "-") + this.key), e
    }}), s = t.Class.define(function (e) {
        this._listeners = {}, this._previousKeyDown = null, this._previousEventType = null, this.listenersToRemove = [], this.listenersToRemove.push(i.addListener(e, "keydown", this._onKeyDown.bind(this))), this.listenersToRemove.push(i.addListener(e, "keypress", this._onKeyPress.bind(this))), this.listenersToRemove.push(i.addListener(e, "keyup", this._onKeyUp.bind(this)))
    }, {destroy: function () {
        this.listenersToRemove.forEach(function (e) {
            e()
        }), this.listenersToRemove = []
    }, addListener: function (e, t) {
        return this._listeners[e] = t, function () {
            this._listeners[e] = null
        }.bind(this)
    }, _fire: function (e, t) {
        this._listeners.hasOwnProperty(e) && this._listeners[e](t)
    }, _onKeyDown: function (e) {
        var t = new r(e);
        this._previousKeyDown = t.clone(), this._previousEventType = "keydown", this._fire("keydown", t)
    }, _onKeyPress: function (e) {
        var t = new r(e);
        this._previousKeyDown && (t.shiftKey && this._previousKeyDown.asString() !== t.asString() && (t.shiftKey = !1), "keypress" === this._previousEventType && this._fire("keydown", this._previousKeyDown)), this._previousEventType = "keypress", this._fire("keypress", t)
    }, _onKeyUp: function (e) {
        this._fire("keyup", new r(e))
    }});
    return{KEYS: o.CHAR_TO_CODE, KeyboardEvent: r, KeyboardController: s}
}), define("vs/base/time/schedulers", ["require", "exports"], function (e, t) {
    "use strict";
    var n = function () {
        function e(e, t) {
            this.timeoutToken = -1, this.runner = e, this.timeout = t, this.timeoutHandler = this.onTimeout.bind(this)
        }

        return e.prototype.dispose = function () {
            this.cancel(), this.runner = null
        }, e.prototype.cancel = function () {
            -1 !== this.timeoutToken && (clearTimeout(this.timeoutToken), this.timeoutToken = -1)
        }, e.prototype.setRunner = function (e) {
            this.runner = e
        }, e.prototype.setTimeout = function (e) {
            this.timeout = e
        }, e.prototype.schedule = function () {
            this.cancel(), this.timeoutToken = setTimeout(this.timeoutHandler, this.timeout)
        }, e.prototype.onTimeout = function () {
            this.timeoutToken = -1, this.runner && this.runner()
        }, e
    }();
    t.RunOnceScheduler = n
}), define("vs/base/dom/iframe", ["require", "exports"], function (e, t) {
    "use strict";
    function n(e) {
        if (!e.parent || e.parent === e)return null;
        try {
            var t = e.location, n = e.parent.location;
            if (t.protocol !== n.protocol || t.hostname !== n.hostname || t.port !== n.port)return a = !0, null
        } catch (i) {
            return a = !0, null
        }
        return e.parent
    }

    function i(e, t) {
        for (var n, i = e.document.getElementsByTagName("iframe"), o = 0, r = i.length; r > o; o++)if (n = i[o], n.contentWindow === t)return n;
        return null
    }

    function o() {
        if (!u) {
            u = [];
            var e, t = window;
            do e = n(t), e ? u.push({window: t, iframeElement: i(e, t)}) : u.push({window: t, iframeElement: null}), t = e; while (t)
        }
        return u.slice(0)
    }

    function r() {
        return u || t.getSameOriginWindowChain(), a
    }

    function s(e, n) {
        if (!n || e === n)return{top: 0, left: 0};
        for (var i = 0, o = 0, r = t.getSameOriginWindowChain(), s = 0; s < r.length; s++) {
            var a = r[s];
            if (a.window === n)break;
            if (!a.iframeElement)break;
            var u = a.iframeElement.getBoundingClientRect();
            i += u.top, o += u.left
        }
        return{top: i, left: o}
    }

    var a = !1, u = null;
    t.getSameOriginWindowChain = o, t.hasDifferentOriginAncestor = r, t.getPositionOfChildWindowRelativeToAncestorWindow = s
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/base/dom/mouseEvent", ["require", "exports", "vs/base/env", "vs/base/dom/iframe"], function (e, t, n, i) {
    "use strict";
    function o(e) {
        var t = window.MonacoScrollDivisor || 120;
        return e / t
    }

    var r = n, s = i, a = function () {
        function e(e, t) {
            "undefined" == typeof t && (t = null), this.browserEvent = e, this.extraData = t, this.leftButton = 0 === e.button, this.middleButton = 1 === e.button, this.rightButton = 2 === e.button, this.target = e.target || e.targetNode || e.srcElement, this.detail = e.detail || 1, "dblclick" === e.type && (this.detail = 2), this.posx = 0, this.posy = 0, this.ctrlKey = e.ctrlKey, this.shiftKey = e.shiftKey, this.altKey = e.altKey, this.metaKey = e.metaKey, e.clientX || e.clientY ? (this.posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft, this.posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop) : (e.pageX || e.pageY) && (this.posx = e.pageX, this.posy = e.pageY);
            var n = s.getPositionOfChildWindowRelativeToAncestorWindow(self, e.view);
            this.posx -= n.left, this.posy -= n.top
        }

        return e.prototype.preventDefault = function () {
            this.browserEvent.preventDefault ? this.browserEvent.preventDefault() : this.browserEvent.returnValue = !1
        }, e.prototype.stopPropagation = function () {
            this.browserEvent.stopPropagation ? this.browserEvent.stopPropagation() : this.browserEvent.cancelBubble = !0
        }, e
    }();
    t.StandardMouseEvent = a;
    var u = function (e) {
        function t(t) {
            e.call(this, t), this.dataTransfer = t.dataTransfer
        }

        return __extends(t, e), t
    }(a);
    t.DragMouseEvent = u;
    var l = function (e) {
        function t(t) {
            e.call(this, t)
        }

        return __extends(t, e), t
    }(u);
    t.DropMouseEvent = l;
    var d = function () {
        function e(e, t, n) {
            if ("undefined" == typeof t && (t = 0), "undefined" == typeof n && (n = 0), this.browserEvent = e || null, this.target = e ? e.target || e.targetNode || e.srcElement : null, this.deltaY = n, this.deltaX = t, e) {
                var i = e, s = e;
                "undefined" != typeof i.wheelDeltaY ? this.deltaY = o(i.wheelDeltaY) : "undefined" != typeof s.VERTICAL_AXIS && s.axis === s.VERTICAL_AXIS && (this.deltaY = -s.detail / 3), "undefined" != typeof i.wheelDeltaX ? this.deltaX = r.browser.isSafari && r.browser.isWindows ? -o(i.wheelDeltaX) : o(i.wheelDeltaX) : "undefined" != typeof s.HORIZONTAL_AXIS && s.axis === s.HORIZONTAL_AXIS && (this.deltaX = -e.detail / 3), 0 === this.deltaY && 0 === this.deltaX && e.wheelDelta && (this.deltaY = o(e.wheelDelta))
            }
        }

        return e.prototype.preventDefault = function () {
            this.browserEvent && (this.browserEvent.preventDefault ? this.browserEvent.preventDefault() : this.browserEvent.returnValue = !1)
        }, e.prototype.stopPropagation = function () {
            this.browserEvent && (this.browserEvent.stopPropagation ? this.browserEvent.stopPropagation() : this.browserEvent.cancelBubble = !0)
        }, e
    }();
    t.StandardMouseWheelEvent = d
}), define("vs/editor/core/view/lines/viewLineParts", ["require", "exports", "vs/base/arrays"], function (e, t, n) {
    "use strict";
    function i(e, t, n) {
        return n.length > 0 ? new a(e, t, n) : new s(t)
    }

    var o = n, r = 1e6;
    t.createLineParts = i;
    var s = function () {
        function e(e) {
            this.lineTokens = e
        }

        return e.prototype.getParts = function () {
            return this.lineTokens.getTokens()
        }, e.prototype.equals = function (t) {
            if (t instanceof e) {
                var n = t;
                return this.lineTokens.equals(n.lineTokens)
            }
            return!1
        }, e.prototype.findIndexOfOffset = function (e) {
            return this.lineTokens.findIndexOfOffset(e)
        }, e
    }();
    t.FastViewLineParts = s;
    var a = function () {
        function e(e, t, n) {
            for (var i, o, r, s = c.normalize(e, n), a = 0, l = s.length, d = t.getTokens(), h = [], p = 0, f = d.length; f > p; p++) {
                for (i = d[p].startIndex, o = f > p + 1 ? d[p + 1].startIndex : t.getTextLength(), r = d[p].type; l > a && s[a].startOffset < o;) {
                    if (s[a].startOffset > i && (h.push(new u(i, r)), i = s[a].startOffset), h.push(new u(i, r + " " + s[a].className)), s[a].endOffset >= o) {
                        i = o;
                        break
                    }
                    i = s[a].endOffset + 1, a++
                }
                o > i && h.push(new u(i, r))
            }
            this.parts = h, this.lastPartIndex = h.length - 1, this.lastEndOffset = o
        }

        return e.prototype.getParts = function () {
            return this.parts
        }, e.prototype.equals = function (t) {
            if (t instanceof e) {
                var n = t;
                if (this.lastPartIndex !== n.lastPartIndex)return!1;
                if (this.lastEndOffset !== n.lastEndOffset)return!1;
                for (var i = 0, o = this.parts.length; o > i; i++) {
                    if (this.parts[i].startIndex !== n.parts[i].startIndex)return!1;
                    if (this.parts[i].type !== n.parts[i].type)return!1
                }
                return!0
            }
            return!1
        }, e.prototype.findIndexOfOffset = function (e) {
            return o.findIndexInSegmentsArray(this.parts, e)
        }, e
    }();
    t.ViewLineParts = a;
    var u = function () {
        function e(e, t) {
            this.startIndex = e, this.type = t
        }

        return e
    }(), l = function () {
        function e(e, t, n) {
            this.startOffset = e, this.endOffset = t, this.className = n
        }

        return e
    }(), d = function () {
        function e() {
            this.stopOffsets = [], this.classNames = [], this.count = 0
        }

        return e.prototype.consumeLowerThan = function (e, t, n) {
            for (; this.count > 0 && this.stopOffsets[0] < e;) {
                for (var i = 0; i + 1 < this.count && this.stopOffsets[i] === this.stopOffsets[i + 1];)i++;
                n.push(new l(t, this.stopOffsets[i], this.classNames.join(" "))), t = this.stopOffsets[i] + 1, this.stopOffsets.splice(0, i + 1), this.classNames.splice(0, i + 1), this.count -= i + 1
            }
            return t
        }, e.prototype.insert = function (e, t) {
            if (0 === this.count || this.stopOffsets[this.count - 1] <= e)this.stopOffsets.push(e), this.classNames.push(t); else for (var n = 0; n < this.count; n++)if (this.stopOffsets[n] >= e) {
                this.stopOffsets.splice(n, 0, e), this.classNames.splice(n, 0, t);
                break
            }
            this.count++
        }, e
    }(), c = function () {
        function e() {
        }

        return e.normalize = function (e, t) {
            var n = [];
            if (0 === t.length)return n;
            var i, o, s, a, u, l = new d, c = 0;
            for (a = 0, u = t.length; u > a; a++)i = t[a], o = i.range.startLineNumber === e ? i.range.startColumn - 1 : 0, s = i.range.endLineNumber === e ? i.range.endColumn - 2 : r - 1, 0 > s || (c = l.consumeLowerThan(o, c, n), 0 === l.count && (c = o), l.insert(s, i.options.inlineClassName));
            return l.consumeLowerThan(r, c, n), n
        }, e
    }()
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/lines/viewLine", ["require", "exports", "vs/base/env", "vs/editor/core/view/viewContext", "vs/editor/core/view/lines/viewLineParts"], function (e, t, n, i, o) {
    "use strict";
    function r(e, t) {
        return e.top === t.top ? e.left - t.left : e.top - t.top
    }

    function s(e, t, n) {
        var i = e.findIndexOfOffset(t);
        return n >= i ? i : n
    }

    function a(e, t) {
        return window.screen && window.screen.deviceXDPI && (u.browser.isIE9 || u.browser.isIE10) ? new b(e, t) : u.browser.isWebKit ? new C(e, t) : new y(e, t)
    }

    var u = n, l = i, d = o, c = " ".charCodeAt(0), h = "	".charCodeAt(0), p = "<".charCodeAt(0), f = ">".charCodeAt(0), g = "&".charCodeAt(0), m = "\r".charCodeAt(0), v = function () {
        function e(e, t, n, i) {
            this.top = e, this.left = t, this.width = n, this.height = i
        }

        return e
    }(), y = function () {
        function e(e, t) {
            this.context = e, t && (this.domNode = document.createElement("div"), this.domNode.className = l.ClassNames.VIEW_LINE), this.isInvalid = !0, this.isMaybeInvalid = !1, this.lineParts = null, this.html = null, this.charOffsetInPart = [], this.hasOverflowed = !1, this.lastRenderedPartIndex = 0
        }

        return e.prototype.getDomNode = function () {
            return this.domNode
        }, e.prototype.setDomNode = function (e) {
            this.domNode = e
        }, e.prototype.onContentChanged = function () {
            this.isInvalid = !0
        }, e.prototype.onLinesInsertedAbove = function () {
            this.isMaybeInvalid = !0
        }, e.prototype.onLinesDeletedAbove = function () {
            this.isMaybeInvalid = !0
        }, e.prototype.onLineChangedAbove = function () {
            this.isMaybeInvalid = !0
        }, e.prototype.onTokensChanged = function () {
            this.isMaybeInvalid = !0
        }, e.prototype.onModelDecorationsChanged = function () {
            this.isMaybeInvalid = !0
        }, e.prototype.onConfigurationChanged = function () {
            this.isInvalid = !0
        }, e.prototype.shouldUpdateHTML = function (e) {
            var t = null;
            return(this.isMaybeInvalid || this.isInvalid) && (t = this.computeLineParts(e)), this.isMaybeInvalid && (this.isInvalid || this.lineParts && this.lineParts.equals(t) || (this.isInvalid = !0), this.isMaybeInvalid = !1), this.isInvalid && (this.lineParts = t), this.isInvalid
        }, e.prototype.getLineOuterHTML = function (e, t, n) {
            var i = [];
            return i.push('<div lineNumber="'), i.push(t.toString()), i.push('" style="top:'), i.push(n.toString()), i.push("px;height:"), i.push(this.context.configuration.editor.lineHeight.toString()), i.push('px;" class="'), i.push(l.ClassNames.VIEW_LINE), i.push('">'), i = i.concat(this.getLineInnerHTML(e, t)), i.push("</div>"), i
        }, e.prototype.getLineStatistics = function () {
            return{partsCount: this.partsCount, charactersCount: this.charOffsetInPart.length}
        }, e.prototype.getLineInnerHTML = function (e, t) {
            return this.isInvalid && (this.html = this.renderLine(t, this.lineParts), this.isInvalid = !1), this.html
        }, e.prototype.layoutLine = function (e, t) {
            var n = this.domNode.getAttribute("lineNumber");
            n !== e.toString() && this.domNode.setAttribute("lineNumber", e.toString());
            var i = this.domNode.style.top;
            i !== t + "px" && (this.domNode.style.top = t + "px");
            var o = this.domNode.style.height;
            o !== this.context.configuration.editor.lineHeight + "px" && (this.domNode.style.height = this.context.configuration.editor.lineHeight + "px")
        }, e.prototype.computeLineParts = function (e) {
            return d.createLineParts(e, this.context.model.getLineTokens(e), this.context.model.getInlineDecorations(e))
        }, e.prototype.renderLine = function (e) {
            var t = [], n = this.context.model.getLineContent(e);
            this.charOffsetInPart = [], this.hasOverflowed = !1, this.bustReadingCache();
            var i = 0;
            if (t.push("<span>"), n.length > 0) {
                var o, r, s, a, u = n.length, l = -1, d = 0, v = 0, y = 0, b = !0, C = "", E = this.context.configuration.editor.tabSize, w = this.context.configuration.editor.stopRenderingLineAfter, _ = this.lineParts.getParts();
                for (-1 !== w && u > w - 1 && (C = n.substr(w - 1, 1), u = w - 1, this.hasOverflowed = !0), r = 0; u > r; r++) {
                    switch (r === d && (l++, d = l + 1 < _.length ? _[l + 1].startIndex : Number.MAX_VALUE, r > 0 && t.push("</span>"), i++, t.push('<span class="'), s = "token " + _[l].type.replace(/[^a-z0-9\-]/gi, " "), t.push(s), t.push('">'), y = 0), this.charOffsetInPart[r] = y, o = n.charCodeAt(r)) {
                        case h:
                            for (a = E - (r + v) % E, v += a - 1, y += a - 1; a > 0;)t.push(" "), a--;
                            break;
                        case c:
                            t.push(" ");
                            break;
                        case p:
                            b = !1, t.push("&lt;");
                            break;
                        case f:
                            b = !1, t.push("&gt;");
                            break;
                        case g:
                            b = !1, t.push("&amp;");
                            break;
                        case 0:
                            t.push("&#00;");
                            break;
                        case m:
                            y--;
                            break;
                        default:
                            b = !1, t.push(n.charAt(r))
                    }
                    y++
                }
                t.push("</span>"), this.charOffsetInPart[u] = y, this.lastRenderedPartIndex = l, C.length > 0 && (t.push('<span class="'), t.push(s), t.push('" style="color:grey">'), t.push(C), t.push("&hellip;</span>"))
            } else t.push("<span>&nbsp;</span>");
            return t.push("</span>"), this.partsCount = i, t
        }, e.prototype.getReadingTarget = function () {
            return this.domNode.firstChild
        }, e.prototype.bustReadingCache = function () {
            this.cachedWidth = -1
        }, e.prototype.getHeight = function () {
            return this.domNode.offsetHeight
        }, e.prototype.getWidth = function () {
            return-1 === this.cachedWidth && (this.cachedWidth = this.getReadingTarget().offsetWidth), this.cachedWidth
        }, e.prototype.getVisibleRangesForRange = function (e, t, n, i, o, r, s) {
            var a = this.context.configuration.editor.stopRenderingLineAfter;
            return-1 !== a && t > a && n > a ? null : (-1 !== a && t > a && (t = a), -1 !== a && n > a && (n = a), this.readVisibleRangesForRange(e, t, n, i, o, r, s))
        }, e.prototype.readVisibleRangesForRange = function (e, t, n, i, o, s, a) {
            var u;
            if (u = t === n ? this.readRawVisibleRangesForPosition(e, t, i, o, s, a) : this.readRawVisibleRangesForRange(e, t, n, i, o, s, a), !u || 0 === u.length)return u;
            u.sort(r);
            for (var l, d = [], c = u[0], h = 1, p = u.length; p > h; h++)l = u[h], c.top === l.top && c.height === l.height && c.left + c.width + .001 >= l.left ? c.width = Math.max(c.width, l.left + l.width - c.left) : (d.push(c), c = l);
            return d.push(c), d
        }, e.prototype.readRawVisibleRangesForPosition = function (e, t, n, i, o, r) {
            if (0 === this.charOffsetInPart.length) {
                var a = this.readRawVisibleRangesForEntireLine(n, i, o);
                return a[0].width = 0, a
            }
            var u = this.lineParts, l = s(u, t - 1, this.lastRenderedPartIndex), d = this.charOffsetInPart[t - 1], c = this.getReadingTarget();
            return this.readRawVisibleRangesFrom(c, l, d, l, d, n, i, o, r)
        }, e.prototype.readRawVisibleRangesForRange = function (e, t, n, i, o, r, a) {
            if (1 === t && n === this.charOffsetInPart.length)return this.readRawVisibleRangesForEntireLine(i, o, r);
            var u = this.lineParts, l = s(u, t - 1, this.lastRenderedPartIndex), d = this.charOffsetInPart[t - 1], c = s(u, n - 1, this.lastRenderedPartIndex), h = this.charOffsetInPart[n - 1], p = this.getReadingTarget();
            return this.readRawVisibleRangesFrom(p, l, d, c, h, i, o, r, a)
        }, e.prototype.readRawVisibleRangesForEntireLine = function (e) {
            var t = this.domNode.getBoundingClientRect();
            return[new v(t.top - e, 0, this.getReadingTarget().offsetWidth, t.height)]
        }, e.prototype.readRawVisibleRangesFrom = function (e, t, n, i, o, r, s, a, u) {
            var l = w.createRange();
            l.setStart(e.children[t].firstChild, n), l.setEnd(e.children[i].firstChild, o);
            var d = l.getClientRects(), c = null;
            return d.length > 0 && (c = this.createRawVisibleRangesFromClientRects(d, r + s, a)), w.detachRange(l, u), c
        }, e.prototype.createRawVisibleRangesFromClientRects = function (e, t, n) {
            var i, o, r = e.length, s = [];
            for (s = new Array(r), o = 0; r > o; o++)i = e[o], s[o] = new v(i.top - t, i.left - n, i.width, i.height);
            return s
        }, e.prototype.getColumnOfNodeOffset = function (e, t, n) {
            for (var i = -1; t;)t = t.previousSibling, i++;
            var o = this.lineParts.getParts();
            if (i >= o.length)return this.context.configuration.editor.stopRenderingLineAfter;
            if (0 === n)return o[i].startIndex + 1;
            var r, s, a = o[i].startIndex;
            i + 1 < o.length ? (r = o[i + 1].startIndex, s = this.charOffsetInPart[r - 1] + this.charOffsetInPart[r]) : (r = this.context.model.getLineMaxColumn(e) - 1, s = this.charOffsetInPart[r]);
            var u, l = a, d = r;
            -1 !== this.context.configuration.editor.stopRenderingLineAfter && (d = Math.min(this.context.configuration.editor.stopRenderingLineAfter - 1, r));
            for (var c, h, p, f, g; d > l;) {
                if (u = Math.floor((l + d) / 2), c = this.charOffsetInPart[u], h = u === r ? Number.MAX_VALUE : u + 1 === r ? s : this.charOffsetInPart[u + 1], p = u === a ? Number.MIN_VALUE : this.charOffsetInPart[u - 1], f = (p + c) / 2, g = (c + h) / 2, n > f && g >= n)return u + 1;
                f >= n ? d = u - 1 : l = u + 1
            }
            return l + 1
        }, e.prototype.getInnerSpansTopOffset = function () {
            return this.getReadingTarget().offsetTop
        }, e
    }(), b = function (e) {
        function t(t, n) {
            e.call(this, t, n)
        }

        return __extends(t, e), t.prototype.createRawVisibleRangesFromClientRects = function (e, t, n) {
            var i, o, r = e.length, s = [], a = screen.logicalYDPI / screen.deviceYDPI, u = screen.logicalXDPI / screen.deviceXDPI;
            for (s = new Array(r), o = 0; r > o; o++)i = e[o], s[o] = new v(i.top * a - t, i.left * u - n, i.width * u, i.height * a);
            return s
        }, t
    }(y), C = function (e) {
        function t(t, n) {
            e.call(this, t, n)
        }

        return __extends(t, e), t.prototype.readVisibleRangesForRange = function (t, n, i, o, r, s, a) {
            var u = e.prototype.readVisibleRangesForRange.call(this, t, n, i, o, r, s, a);
            if (!u || 0 === u.length || n === i || 1 === n && i === this.charOffsetInPart.length)return u;
            var l = this.readRawVisibleRangesForPosition(t, i - 1, o, r, s, a), d = this.readRawVisibleRangesForPosition(t, i, o, r, s, a);
            if (l && l.length > 0 && d && d.length > 0) {
                var c = l[0], h = d[0], p = !0;
                c.top === h.top && (p = c.left <= h.left);
                var f = u[u.length - 1];
                p && f.top === h.top && f.left < h.left ? f.width = h.left - f.left : f.top > h.top && u.splice(u.length - 1, 1)
            }
            return u
        }, t
    }(y), E = function () {
        function e() {
            this._handyReadyRange = document.createRange()
        }

        return e.prototype.createRange = function () {
            return this._handyReadyRange
        }, e.prototype.detachRange = function (e, t) {
            e.selectNodeContents(t)
        }, e
    }(), w = new E;
    t.createLine = a
}), define("vs/editor/core/view/overviewRuler/overviewRulerImpl", ["require", "exports"], function (e, t) {
    "use strict";
    t.hasCanvas = -1 === window.navigator.userAgent.indexOf("MSIE 8");
    var n = function () {
        function e(e, t, n, i, o, r) {
            this.minimumHeight = i, this.maximumHeight = o, this.getVerticalOffsetForLine = r, this.zones = [], this.domNode = document.createElement("canvas"), this.domNode.className = e, this.domNode.style.position = "absolute", this.width = 0, this.height = 0, this.outerHeight = t, this.lineHeight = n
        }

        return e.prototype.dispose = function () {
            this.zones = []
        }, e.prototype.setLayout = function (e, t) {
            this.domNode.style.top = e.top + "px", this.domNode.style.right = e.right + "px", (this.width !== e.width || this.height !== e.height) && (this.width = e.width, this.height = e.height, this.domNode.width = this.width, this.domNode.height = this.height, t && this.render())
        }, e.prototype.getDomNode = function () {
            return this.domNode
        }, e.prototype.getWidth = function () {
            return this.width
        }, e.prototype.getHeight = function () {
            return this.height
        }, e.prototype.setScrollHeight = function (e, t) {
            this.outerHeight = e, t && this.render()
        }, e.prototype.setLineHeight = function (e, t) {
            this.lineHeight = e, t && this.render()
        }, e.prototype.setZones = function (e, t) {
            this.zones = e, t && this.render()
        }, e.prototype._insertZone = function (e, t, n, i, o) {
            var r = Math.floor((t + n) / 2), s = n - r;
            s > i / 2 && (s = i / 2), s < this.minimumHeight / 2 && (s = this.minimumHeight / 2), 0 > r - s && (r = s), r + s > this.height && (r = this.height - s), e[o] = e[o] || [], e[o].push({from: r - s, to: r + s})
        }, e.prototype.render = function () {
            if (0 !== this.outerHeight && t.hasCanvas) {
                var e = this.height / this.outerHeight, n = this.domNode.getContext("2d");
                n.clearRect(0, 0, this.width, this.height);
                var i, o, r, s, a, u, l, d = {};
                for (i = 0, o = this.zones.length; o > i; i++)if (r = this.zones[i], s = this.getVerticalOffsetForLine(r.startLineNumber), a = this.getVerticalOffsetForLine(r.endLineNumber) + this.lineHeight, s *= e, a *= e, u = r.endLineNumber - r.startLineNumber + 1, l = u * this.maximumHeight, a - s > l)for (var c = r.startLineNumber; c <= r.endLineNumber; c++)s = this.getVerticalOffsetForLine(c), a = s + this.lineHeight, s *= e, a *= e, this._insertZone(d, s, a, this.maximumHeight, r.color); else this._insertZone(d, s, a, l, r.color);
                var h, p, f, g, m = function (e, t) {
                    return e.from - t.from
                };
                for (h in d)if (d.hasOwnProperty(h)) {
                    for (p = d[h], p.sort(m), f = p[0].from, g = p[0].to, n.fillStyle = h, i = 1, o = p.length; o > i; i++)g >= p[i].from ? g = Math.max(g, p[i].to) : (n.fillRect(0, f, this.width, g - f), f = p[i].from, g = p[i].to);
                    n.fillRect(0, f, this.width, g - f)
                }
            }
        }, e
    }();
    t.OverviewRulerImpl = n
}), define("vs/editor/core/view/viewCursors/viewCursor", ["require", "exports"], function (e, t) {
    "use strict";
    var n = function () {
        function e(e, t) {
            this.context = e, this.isInEditableRange = !0, this.domNode = this._createCursorDomNode(t), this.isVisible = !0, this.updatePosition({lineNumber: 1, column: 1})
        }

        return e.prototype._createCursorDomNode = function (e) {
            var t = document.createElement("div");
            return t.className = "cursor", e && (t.className += " secondary"), t.style.height = this.context.configuration.editor.lineHeight + "px", t.style.top = "0px", t.style.left = "0px", t.setAttribute("role", "presentation"), t.setAttribute("aria-hidden", "true"), t
        }, e.prototype.getDomNode = function () {
            return this.domNode
        }, e.prototype.getIsInEditableRange = function () {
            return this.isInEditableRange
        }, e.prototype.getPositionTop = function () {
            return this.positionTop
        }, e.prototype.getPosition = function () {
            return this.position
        }, e.prototype.show = function () {
            this.isVisible || (this.domNode.style.display = "block", this.isVisible = !0)
        }, e.prototype.hide = function () {
            this.isVisible && (this.domNode.style.display = "none", this.isVisible = !1)
        }, e.prototype.onConfigurationLineHeightChanged = function () {
            return this.domNode.style.height = this.context.configuration.editor.lineHeight + "px", !0
        }, e.prototype.onModelFlushed = function () {
            return this.updatePosition({lineNumber: 1, column: 1}), this.isInEditableRange = !0, !0
        }, e.prototype.onCursorPositionChanged = function (e, t) {
            return this.updatePosition(e), this.isInEditableRange = t, !0
        }, e.prototype.onConfigurationChanged = function () {
            return!0
        }, e.prototype.prepareRender = function (e) {
            var t = e.visibleRangeForPosition(this.position);
            t ? (this.positionTop = t.top, this.positionLeft = t.left) : this.positionTop = -1e3
        }, e.prototype.render = function (e) {
            this.domNode.style.left = this.positionLeft - e.viewportLeft + "px", this.domNode.style.top = this.positionTop + "px"
        }, e.prototype.updatePosition = function (e) {
            this.position = e, this.domNode.setAttribute("lineNumber", this.position.lineNumber.toString()), this.domNode.setAttribute("column", this.position.column.toString()), this.positionTop = -1e3, this.positionLeft = -1e3
        }, e
    }();
    t.ViewCursor = n
}), define("vs/editor/core/view/layout/lines/whitespaceComputer", ["require", "exports"], function (e, t) {
    "use strict";
    var n = function () {
        function e() {
            this.heights = [], this.ids = [], this.afterLineNumbers = [], this.prefixSum = [], this.prefixSumValidIndex = -1, this.whitespaceId2Index = {}, this.lastWhitespaceId = 0
        }

        return e.findInsertionIndex = function (e, t) {
            for (var n, i = 0, o = e.length; o > i;)n = Math.floor((i + o) / 2), t < e[n] ? o = n : i = n + 1;
            return i
        }, e.prototype.insertWhitespace = function (t, n) {
            var i = ++this.lastWhitespaceId, o = e.findInsertionIndex(this.afterLineNumbers, t);
            return this.insertWhitespaceAtIndex(i, o, t, n), i
        }, e.prototype.insertWhitespaceAtIndex = function (e, t, n, i) {
            this.heights.splice(t, 0, i), this.ids.splice(t, 0, e), this.afterLineNumbers.splice(t, 0, n), this.prefixSum.splice(t, 0, 0);
            var o, r;
            for (o in this.whitespaceId2Index)this.whitespaceId2Index.hasOwnProperty(o) && (r = this.whitespaceId2Index[o], r >= t && (this.whitespaceId2Index[o] = r + 1));
            this.whitespaceId2Index[e.toString()] = t, this.prefixSumValidIndex = Math.min(this.prefixSumValidIndex, t - 1)
        }, e.prototype.changeWhitespace = function (e, t) {
            var n = e.toString();
            if (this.whitespaceId2Index.hasOwnProperty(n)) {
                var i = this.whitespaceId2Index[n];
                if (this.heights[i] !== t)return this.heights[i] = t, this.prefixSumValidIndex = Math.min(this.prefixSumValidIndex, i - 1), !0
            }
            return!1
        }, e.prototype.changeAfterLineNumberForWhitespace = function (t, n) {
            var i = t.toString();
            if (this.whitespaceId2Index.hasOwnProperty(i)) {
                var o = this.whitespaceId2Index[i];
                if (this.afterLineNumbers[o] !== n) {
                    var r = this.heights[o];
                    this.removeWhitespace(t);
                    var s = e.findInsertionIndex(this.afterLineNumbers, n);
                    return this.insertWhitespaceAtIndex(t, s, n, r), !0
                }
            }
            return!1
        }, e.prototype.removeWhitespace = function (e) {
            var t = e.toString();
            if (this.whitespaceId2Index.hasOwnProperty(t)) {
                var n = this.whitespaceId2Index[t];
                return delete this.whitespaceId2Index[t], this.removeWhitespaceAtIndex(n), !0
            }
            return!1
        }, e.prototype.removeWhitespaceAtIndex = function (e) {
            this.heights.splice(e, 1), this.ids.splice(e, 1), this.afterLineNumbers.splice(e, 1), this.prefixSum.splice(e, 1), this.prefixSumValidIndex = Math.min(this.prefixSumValidIndex, e - 1);
            var t, n;
            for (t in this.whitespaceId2Index)this.whitespaceId2Index.hasOwnProperty(t) && (n = this.whitespaceId2Index[t], n >= e && (this.whitespaceId2Index[t] = n - 1))
        }, e.prototype.onModelLinesDeleted = function (e, t) {
            var n, i, o;
            for (i = 0, o = this.afterLineNumbers.length; o > i; i++)n = this.afterLineNumbers[i], n >= e && t >= n ? this.afterLineNumbers[i] = e - 1 : n > t && (this.afterLineNumbers[i] -= t - e + 1)
        }, e.prototype.onModelLinesInserted = function (e, t) {
            var n, i, o;
            for (i = 0, o = this.afterLineNumbers.length; o > i; i++)n = this.afterLineNumbers[i], n >= e && (this.afterLineNumbers[i] += t - e + 1)
        }, e.prototype.getTotalHeight = function () {
            return 0 === this.heights.length ? 0 : this.getAccumulatedHeight(this.heights.length - 1)
        }, e.prototype.getAccumulatedHeight = function (e) {
            var t = Math.max(0, this.prefixSumValidIndex + 1);
            0 === t && (this.prefixSum[0] = this.heights[0], t++);
            for (var n = t; e >= n; n++)this.prefixSum[n] = this.prefixSum[n - 1] + this.heights[n];
            return this.prefixSumValidIndex = Math.max(this.prefixSumValidIndex, e), this.prefixSum[e]
        }, e.prototype.getAccumulatedHeightBeforeLineNumber = function (e) {
            var t = this.findLastWhitespaceBeforeLineNumber(e);
            return-1 === t ? 0 : this.getAccumulatedHeight(t)
        }, e.prototype.findLastWhitespaceBeforeLineNumber = function (e) {
            for (var t, n = this.afterLineNumbers, i = 0, o = n.length - 1; o >= i;)if (t = Math.floor((i + o) / 2), n[t] < e) {
                if (t + 1 >= n.length || n[t + 1] >= e)return t;
                i = t + 1
            } else o = t - 1;
            return-1
        }, e.prototype.findFirstWhitespaceAfterLineNumber = function (e) {
            var t = this.findLastWhitespaceBeforeLineNumber(e), n = t + 1;
            return n < this.heights.length ? n : -1
        }, e.prototype.getFirstWhitespaceIndexAfterLineNumber = function (e) {
            return this.findFirstWhitespaceAfterLineNumber(e)
        }, e.prototype.getCount = function () {
            return this.heights.length
        }, e.prototype.getAfterLineNumberForWhitespaceIndex = function (e) {
            return this.afterLineNumbers[e]
        }, e.prototype.getIdForWhitespaceIndex = function (e) {
            return this.ids[e]
        }, e.prototype.getHeightForWhitespaceIndex = function (e) {
            return this.heights[e]
        }, e
    }();
    t.WhitespaceComputer = n
}), define("vs/editor/core/view/layout/lines/verticalObjects", ["require", "exports", "vs/editor/core/view/layout/lines/whitespaceComputer"], function (e, t, n) {
    "use strict";
    var i = n, o = function () {
        function e() {
            this.whitespaces = new i.WhitespaceComputer
        }

        return e.prototype.replaceLines = function (e) {
            this.linesCount = e
        }, e.prototype.insertWhitespace = function (e, t) {
            return this.whitespaces.insertWhitespace(e, t)
        }, e.prototype.changeWhitespace = function (e, t) {
            return this.whitespaces.changeWhitespace(e, t)
        }, e.prototype.changeAfterLineNumberForWhitespace = function (e, t) {
            return this.whitespaces.changeAfterLineNumberForWhitespace(e, t)
        }, e.prototype.removeWhitespace = function (e) {
            return this.whitespaces.removeWhitespace(e)
        }, e.prototype.onModelLinesDeleted = function (e, t) {
            this.linesCount -= t - e + 1, this.whitespaces.onModelLinesDeleted(e, t)
        }, e.prototype.onModelLinesInserted = function (e, t) {
            this.linesCount += t - e + 1, this.whitespaces.onModelLinesInserted(e, t)
        }, e.prototype.getTotalHeight = function (e) {
            var t = e * this.linesCount, n = this.whitespaces.getTotalHeight();
            return t + n
        }, e.prototype.getVerticalOffsetForLineNumber = function (e, t) {
            var n;
            n = e > 1 ? t * (e - 1) : 0;
            var i = this.whitespaces.getAccumulatedHeightBeforeLineNumber(e);
            return n + i
        }, e.prototype.getHeightForLineNumber = function (e, t) {
            return t
        }, e.prototype.getLineNumberAtOrAfterVerticalOffset = function (e, t) {
            if (0 > e)return 1;
            for (var n, i, o, r = 1, s = this.linesCount; s > r;)if (n = Math.floor((r + s) / 2), i = this.getVerticalOffsetForLineNumber(n, t), o = this.getHeightForLineNumber(n, t), e >= i + o)r = n + 1; else {
                if (e >= i)return n;
                s = n
            }
            return r > this.linesCount ? this.linesCount : r
        }, e.prototype.getCenteredLineInViewport = function (e, t, n) {
            for (var i, o, r = this.getLinesViewportData(e, t, n), s = (t - e) / 2, a = r.visibleRangesDeltaTop, u = r.startLineNumber; u <= r.endLineNumber; u++)if (i = a + r.relativeVerticalOffset[u - r.startLineNumber], o = i + this.getHeightForLineNumber(u, n), a += this.getHeightForLineNumber(u, n), s >= i && o > s || i > s)return u;
            return r.endLineNumber
        }, e.prototype.getLinesViewportData = function (e, t, n) {
            var i, o, r = this.getLineNumberAtOrAfterVerticalOffset(e, n), s = this.linesCount, a = this.getVerticalOffsetForLineNumber(r, n), u = this.whitespaces.getFirstWhitespaceIndexAfterLineNumber(r), l = this.whitespaces.getCount();
            -1 === u ? (u = l, o = s + 1) : (o = this.whitespaces.getAfterLineNumberForWhitespaceIndex(u), i = this.whitespaces.getHeightForWhitespaceIndex(u));
            for (var d = a, c = 0, h = [], p = r; s >= p; p++) {
                for (d += this.getHeightForLineNumber(p, n), h.push(c), c = 0; o === p;)c += i, d += i, u++, u >= l ? o = s + 1 : (o = this.whitespaces.getAfterLineNumberForWhitespaceIndex(u), i = this.whitespaces.getHeightForWhitespaceIndex(u));
                if (d > t) {
                    s = p;
                    break
                }
            }
            for (var f = 1; f < h.length; f++)h[f] += h[f - 1];
            return{startLineNumber: r, endLineNumber: s, visibleRangesDeltaTop: a - e, relativeVerticalOffset: h, visibleRange: null}
        }, e.prototype.getVerticalOffsetForWhitespaceIndex = function (e, t) {
            var n, n, i = this.whitespaces.getAfterLineNumberForWhitespaceIndex(e);
            n = i >= 1 ? t * i : 0;
            var o;
            return o = e > 0 ? this.whitespaces.getAccumulatedHeight(e - 1) : 0, n + o
        }, e.prototype.getWhitespaceIndexAtOrAfterVerticallOffset = function (e, t) {
            var n, i, o, r = 0, s = this.whitespaces.getCount() - 1;
            if (0 > s)return-1;
            var a = this.getVerticalOffsetForWhitespaceIndex(s, t), u = this.whitespaces.getHeightForWhitespaceIndex(s);
            if (e >= a + u)return-1;
            for (; s > r;)if (n = Math.floor((r + s) / 2), i = this.getVerticalOffsetForWhitespaceIndex(n, t), o = this.whitespaces.getHeightForWhitespaceIndex(n), e >= i + o)r = n + 1; else {
                if (e >= i)return n;
                s = n
            }
            return r
        }, e.prototype.getWhitespaceAtVerticalOffset = function (e, t) {
            var n = this.getWhitespaceIndexAtOrAfterVerticallOffset(e, t);
            if (0 > n)return null;
            if (n >= this.whitespaces.getCount())return null;
            var i = this.getVerticalOffsetForWhitespaceIndex(n, t);
            if (i > e)return null;
            var o = this.whitespaces.getHeightForWhitespaceIndex(n), r = this.whitespaces.getIdForWhitespaceIndex(n), s = this.whitespaces.getAfterLineNumberForWhitespaceIndex(n);
            return{id: r, afterLineNumber: s, verticalOffset: i, height: o}
        }, e.prototype.getWhitespaceViewportData = function (e, t, n) {
            var i = this.getWhitespaceIndexAtOrAfterVerticallOffset(e, n), o = this.whitespaces.getCount() - 1;
            if (0 > i)return[];
            var r, s, a, u = [];
            for (r = i; o >= r && (s = this.getVerticalOffsetForWhitespaceIndex(r, n), a = this.whitespaces.getHeightForWhitespaceIndex(r), !(s >= t)); r++)u.push({id: this.whitespaces.getIdForWhitespaceIndex(r), afterLineNumber: this.whitespaces.getAfterLineNumberForWhitespaceIndex(r), verticalOffset: s, height: a});
            return u
        }, e
    }();
    t.VerticalObjects = o
}), define("vs/editor/core/view/layout/lines/linesLayout", ["require", "exports", "vs/editor/core/view/layout/lines/verticalObjects"], function (e, t, n) {
    "use strict";
    var i = n, o = function () {
        function e(e, t) {
            this.configuration = e, this.model = t, this.verticalObjects = new i.VerticalObjects, this.verticalObjects.replaceLines(t.getLineCount())
        }

        return e.prototype.insertWhitespace = function (e, t) {
            return this.verticalObjects.insertWhitespace(e, t)
        }, e.prototype.changeWhitespace = function (e, t) {
            return this.verticalObjects.changeWhitespace(e, t)
        }, e.prototype.changeAfterLineNumberForWhitespace = function (e, t) {
            return this.verticalObjects.changeAfterLineNumberForWhitespace(e, t)
        }, e.prototype.removeWhitespace = function (e) {
            return this.verticalObjects.removeWhitespace(e)
        }, e.prototype.onModelFlushed = function () {
            this.verticalObjects.replaceLines(this.model.getLineCount())
        }, e.prototype.onModelLinesDeleted = function (e) {
            this.verticalObjects.onModelLinesDeleted(e.fromLineNumber, e.toLineNumber)
        }, e.prototype.onModelLinesInserted = function (e) {
            this.verticalObjects.onModelLinesInserted(e.fromLineNumber, e.toLineNumber)
        }, e.prototype.getVerticalOffsetForLineNumber = function (e) {
            return this.verticalObjects.getVerticalOffsetForLineNumber(e, this.configuration.editor.lineHeight)
        }, e.prototype.getLinesTotalHeight = function () {
            return this.verticalObjects.getTotalHeight(this.configuration.editor.lineHeight)
        }, e.prototype.getTotalHeight = function (e, t) {
            var n = this.getLinesTotalHeight();
            return n += this.configuration.editor.scrollBeyondLastLine ? e.height - this.configuration.editor.lineHeight : t, Math.max(e.height, n)
        }, e.prototype.getLineNumberAtOrAfterVerticalOffset = function (e) {
            return this.verticalObjects.getLineNumberAtOrAfterVerticalOffset(e, this.configuration.editor.lineHeight)
        }, e.prototype.getHeightForLineNumber = function (e) {
            return this.verticalObjects.getHeightForLineNumber(e, this.configuration.editor.lineHeight)
        }, e.prototype.getWhitespaceViewportData = function (e) {
            return this.verticalObjects.getWhitespaceViewportData(e.top, e.top + e.height, this.configuration.editor.lineHeight)
        }, e.prototype.getWhitespaceAtVerticalOffset = function (e) {
            return this.verticalObjects.getWhitespaceAtVerticalOffset(e, this.configuration.editor.lineHeight)
        }, e.prototype.getLinesViewportData = function (e) {
            return this.verticalObjects.getLinesViewportData(e.top, e.top + e.height, this.configuration.editor.lineHeight)
        }, e.prototype.getCenteredLineInViewport = function (e) {
            return this.verticalObjects.getCenteredLineInViewport(e.top, e.top + e.height, this.configuration.editor.lineHeight)
        }, e.VIRTUAL_LINES_AROUND = 0, e
    }();
    t.LinesLayout = o
}), define("vs/editor/core/view/layout/elementSizeObserver", ["require", "exports"], function (e, t) {
    "use strict";
    var n = function () {
        function e(e, t) {
            this.referenceDomElement = e, this.changeCallback = t, this.measureReferenceDomElementToken = -1, this.width = -1, this.height = -1, this.measureReferenceDomElement()
        }

        return e.prototype.dispose = function () {
            this.stopObserving()
        }, e.prototype.startObserving = function () {
            var e = this;
            -1 === this.measureReferenceDomElementToken && (this.measureReferenceDomElementToken = window.setInterval(function () {
                return e.measureReferenceDomElement()
            }, 100))
        }, e.prototype.stopObserving = function () {
            -1 !== this.measureReferenceDomElementToken && (window.clearInterval(this.measureReferenceDomElementToken), this.measureReferenceDomElementToken = -1)
        }, e.prototype.observe = function () {
            this.measureReferenceDomElement()
        }, e.prototype.measureReferenceDomElement = function () {
            var e = Math.max(5, this.referenceDomElement.clientWidth), t = Math.max(5, this.referenceDomElement.clientHeight);
            (this.width !== e || this.height !== t) && (this.width = e, this.height = t, this.changeCallback(this.width, this.height))
        }, e.prototype.getReferenceElementWidth = function () {
        }, e
    }();
    t.ElementSizeObserver = n
}), define("vs/editor/core/view/layout/characterSizeProvider", ["require", "exports", "vs/base/env"], function (e, t, n) {
    "use strict";
    var i = n, o = function () {
        function e(t) {
            this.configuration = t, this.charactersToMeasure = e.USUAL_CHARS, this.defaultCharWidth = 7.69921875, this.charWidths = {};
            var n = this._configurationHash();
            e.CHAR_MEASUREMENTS_CACHE.hasOwnProperty(n) ? (this.charWidths = e.CHAR_MEASUREMENTS_CACHE[n], this.defaultCharWidth = this.charWidths[e.REFERENCE_CHARACTER]) : i.isTesting() || this.doMeasurements()
        }

        return e.prototype.doMeasurements = function () {
            var e = this._measureCharSizePart2(this._measureCharSizePart1());
            return e
        }, e.prototype.getCharWidth = function (e) {
            return this.charWidths.hasOwnProperty(e) ? this.charWidths[e] : this.defaultCharWidth
        }, e.prototype._configurationHash = function () {
            return this.configuration.editor.font
        }, e.prototype.maxDigitWidth = function () {
            for (var e = 0, t = 0; 9 >= t; t++)e = Math.max(e, this.getCharWidth(t.toString()));
            return e
        }, e.prototype._testElementId = function (e) {
            return"editorSizeProvider" + e
        }, e.prototype._createTestElement = function (e, t) {
            var n = document.createElement("span");
            n.id = this._testElementId(e);
            for (var i = " " === t ? "&nbsp;" : t, o = 0; 8 > o; o++)i += i;
            return n.textContent = i, n
        }, e.prototype._measureTestElementWidth = function (e) {
            return document.getElementById(this._testElementId(e)).offsetWidth / 256
        }, e.prototype._measureTestElementHeight = function (e) {
            return document.getElementById(this._testElementId(e)).offsetHeight
        }, e.prototype._createTestElements = function () {
            var e = document.createElement("div");
            e.className = this.configuration.getEditorClassName(), e.style.width = "50000px";
            for (var t = 0, n = this.charactersToMeasure.length; n > t; t++)e.appendChild(document.createElement("br")), e.appendChild(this._createTestElement(t, this.charactersToMeasure[t]));
            return e
        }, e.prototype._measureCharSizePart1 = function () {
            var e = this._createTestElements();
            return document.body.appendChild(e), e
        }, e.prototype._measureCharSizePart2 = function (t) {
            var n, i, o, r, s, a = !1;
            for (n = 0, i = this.charactersToMeasure.length; i > n; n++)o = this.charactersToMeasure[n], r = this.charWidths.hasOwnProperty(o) ? this.charWidths[o] : 0, s = this._measureTestElementWidth(n), r !== s && (this.charWidths[o] = s, a = !0);
            return document.body.removeChild(t), a && (e.CHAR_MEASUREMENTS_CACHE[this._configurationHash()] = this.charWidths, this.defaultCharWidth = this.charWidths[e.REFERENCE_CHARACTER]), a
        }, e.USUAL_CHARS = "1234567890", e.REFERENCE_CHARACTER = "0", e.CHAR_MEASUREMENTS_CACHE = {}, e
    }();
    t.CharacterSizeProvider = o
}), define("vs/editor/core/view/layout/editorLayoutProvider", ["require", "exports"], function (e, t) {
    "use strict";
    var n = function () {
        function e(e, t, n, i, o, r, s) {
            this.verticalScrollbarWidth = 10, this.horizontalScrollbarHeight = 10, this.outerWidth = e, this.outerHeight = t, this.lineHeight = n, this.showGlyphMargin = i, this.glyphMarginWidth = this.computeGlyphMarginWidth(), this.showLineNumbers = o, this.lineNumbersMinChars = r, this.lineCount = 0, this.maxDigitWidth = s, this.lineNumbersWidth = this.computeLineNumbersWidth(), this.layoutInfo = this.layout()
        }

        return e.prototype.setDimensions = function (e, t) {
            return this.outerWidth !== e || this.outerHeight !== t ? (this.outerWidth = e, this.outerHeight = t, this.layoutInfo = this.layout(), !0) : !1
        }, e.prototype.setScrollbarSize = function (e, t) {
            return this.verticalScrollbarWidth !== e || this.horizontalScrollbarHeight !== t ? (this.verticalScrollbarWidth = e, this.horizontalScrollbarHeight = t, this.layoutInfo = this.layout(), !0) : !1
        }, e.prototype.setGlyphMargin = function (e) {
            return this.showGlyphMargin = e, this.setGlyphMarginWidth(this.computeGlyphMarginWidth())
        }, e.prototype.setLineHeight = function (e) {
            return this.lineHeight = e, this.setGlyphMarginWidth(this.computeGlyphMarginWidth())
        }, e.prototype.computeGlyphMarginWidth = function () {
            return this.showGlyphMargin ? this.lineHeight : 0
        }, e.prototype.setGlyphMarginWidth = function (e) {
            return this.glyphMarginWidth !== e ? (this.glyphMarginWidth = e, this.layoutInfo = this.layout(), !0) : !1
        }, e.prototype.setShowLineNumbers = function (e) {
            return this.showLineNumbers = e, this.setLineNumbersWidth(this.computeLineNumbersWidth())
        }, e.prototype.setLineNumbersMinChars = function (e) {
            return this.lineNumbersMinChars = e, this.setLineNumbersWidth(this.computeLineNumbersWidth())
        }, e.prototype.setLineCount = function (e) {
            return this.lineCount = e, this.setLineNumbersWidth(this.computeLineNumbersWidth())
        }, e.prototype.setMaxDigitWidth = function (e) {
            return this.maxDigitWidth = e, this.setLineNumbersWidth(this.computeLineNumbersWidth())
        }, e.prototype.setLineNumbersWidth = function (e) {
            return this.lineNumbersWidth !== e ? (this.lineNumbersWidth = e, this.layoutInfo = this.layout(), !0) : !1
        }, e.prototype.getLayoutInfo = function () {
            return this.layoutInfo
        }, e.prototype.layout = function () {
            var t = this.outerWidth, n = this.outerHeight, i = this.lineNumbersWidth, o = this.glyphMarginWidth, r = n, s = n, a = e.DECORATIONS_WIDTH, u = n, l = t - o - i - a, d = n, c = this.verticalScrollbarWidth, h = this.horizontalScrollbarHeight, p = 0, f = p + o, g = f + i, m = g + a;
            return{width: t, height: n, glyphMarginLeft: p, glyphMarginWidth: o, glyphMarginHeight: s, lineNumbersLeft: f, lineNumbersWidth: i, lineNumbersHeight: r, decorationsLeft: g, decorationsWidth: a, decorationsHeight: u, contentLeft: m, contentWidth: l, contentHeight: d, verticalScrollbarWidth: c, horizontalScrollbarHeight: h}
        }, e.prototype.digitCount = function (e) {
            for (var t = 0; e;)e = Math.floor(e / 10), t++;
            return t ? t : 1
        }, e.prototype.computeLineNumbersWidth = function () {
            if (this.showLineNumbers) {
                var e = Math.max(this.digitCount(this.lineCount), this.lineNumbersMinChars);
                return e * this.maxDigitWidth
            }
            return 0
        }, e.DECORATIONS_WIDTH = 10, e
    }();
    t.EditorLayoutProvider = n
}), define("vs/base/ui/scrollbar/impl/common", ["require", "exports"], function (e, t) {
    "use strict";
    function n(e) {
        switch (e) {
            case"hidden":
                return i.Hidden;
            case"visible":
                return i.Visible;
            default:
                return i.Auto
        }
    }

    !function (e) {
        e[e.Auto = 0] = "Auto", e[e.Hidden = 1] = "Hidden", e[e.Visible = 2] = "Visible"
    }(t.Visibility || (t.Visibility = {}));
    var i = t.Visibility;
    t.visibilityFromString = n
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/layout/scroll/editorScrollable", ["require", "exports", "vs/base/eventEmitter"], function (e, t, n) {
    "use strict";
    var i = n, o = function (e) {
        function t(t) {
            e.call(this), this.linesContent = t, this.scrollTop = 0, this.scrollLeft = 0, this.scrollWidth = 0, this.scrollHeight = 0, this.width = 0, this.height = 0
        }

        return __extends(t, e), t.prototype.dispose = function () {
            e.prototype.dispose.call(this)
        }, t.prototype.getWidth = function () {
            return this.width
        }, t.prototype.setWidth = function (e) {
            0 > e && (e = 0), this.width !== e && (this.width = e, this.setScrollWidth(this.scrollWidth), this.setScrollLeft(this.scrollLeft))
        }, t.prototype.getScrollWidth = function () {
            return this.scrollWidth
        }, t.prototype.setScrollWidth = function (e) {
            e < this.width && (e = this.width), this.scrollWidth !== e && (this.scrollWidth = e, this.setScrollLeft(this.scrollLeft), this._emitInternalSizeEvent())
        }, t.prototype.getScrollLeft = function () {
            return this.scrollLeft
        }, t.prototype.setScrollLeft = function (e) {
            0 > e && (e = 0), e + this.width > this.scrollWidth && (e = this.scrollWidth - this.width), this.scrollLeft !== e && (this.scrollLeft = e, this.linesContent.scrollLeft = e, this._emitScrollEvent(!1, !0))
        }, t.prototype.getHeight = function () {
            return this.height
        }, t.prototype.setHeight = function (e) {
            0 > e && (e = 0), this.height !== e && (this.height = e, this.setScrollHeight(this.scrollHeight), this.setScrollTop(this.scrollTop))
        }, t.prototype.getScrollHeight = function () {
            return this.scrollHeight
        }, t.prototype.setScrollHeight = function (e) {
            e < this.height && (e = this.height), this.scrollHeight !== e && (this.scrollHeight = e, this.setScrollTop(this.scrollTop), this._emitInternalSizeEvent())
        }, t.prototype.getScrollTop = function () {
            return this.scrollTop
        }, t.prototype.setScrollTop = function (e) {
            0 > e && (e = 0), e + this.height > this.scrollHeight && (e = this.scrollHeight - this.height), this.scrollTop !== e && (this.scrollTop = e, this._emitScrollEvent(!0, !1))
        }, t.prototype._emitScrollEvent = function (e, n) {
            var i = {vertical: e, horizontal: n};
            this.emit(t._SCROLL_EVENT, i)
        }, t.prototype.addScrollListener = function (e) {
            return this.addListener2(t._SCROLL_EVENT, e)
        }, t.prototype._emitInternalSizeEvent = function () {
            this.emit(t._INTERNAL_SIZE_CHANGED_EVENT)
        }, t.prototype.addInternalSizeChangeListener = function (e) {
            return this.addListener2(t._INTERNAL_SIZE_CHANGED_EVENT, e)
        }, t._SCROLL_EVENT = "scroll", t._INTERNAL_SIZE_CHANGED_EVENT = "internalSizeChanged", t
    }(i.EventEmitter);
    t.EditorScrollable = o
}), define("vs/editor/core/view/viewEventHandler", ["require", "exports", "vs/editor/core/constants", "vs/editor/core/view/viewContext"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function () {
        function e() {
            this.shouldRender = !0
        }

        return e.prototype.onLineMappingChanged = function () {
            return!1
        }, e.prototype.onModelFlushed = function () {
            return!1
        }, e.prototype.onModelDecorationsChanged = function () {
            return!1
        }, e.prototype.onModelLinesDeleted = function () {
            return!1
        }, e.prototype.onModelLineChanged = function () {
            return!1
        }, e.prototype.onModelLinesInserted = function () {
            return!1
        }, e.prototype.onModelTokensChanged = function () {
            return!1
        }, e.prototype.onCursorPositionChanged = function () {
            return!1
        }, e.prototype.onCursorSelectionChanged = function () {
            return!1
        }, e.prototype.onCursorRevealRange = function () {
            return!1
        }, e.prototype.onConfigurationChanged = function () {
            return!1
        }, e.prototype.onConfigurationFontChanged = function () {
            return!1
        }, e.prototype.onConfigurationLineHeightChanged = function () {
            return!1
        }, e.prototype.onLayoutChanged = function () {
            return!1
        }, e.prototype.onScrollChanged = function () {
            return!1
        }, e.prototype.onZonesChanged = function () {
            return!1
        }, e.prototype.onScrollWidthChanged = function () {
            return!1
        }, e.prototype.onScrollHeightChanged = function () {
            return!1
        }, e.prototype.onViewFocusChanged = function () {
            return!1
        }, e.prototype.handleEvents = function (e) {
            var t, n, i, s;
            for (t = 0, n = e.length; n > t; t++)switch (i = e[t], s = i.getData(), i.getType()) {
                case r.EventNames.LineMappingChangedEvent:
                    this.shouldRender = this.onLineMappingChanged() || this.shouldRender;
                    break;
                case r.EventNames.ModelFlushedEvent:
                    this.shouldRender = this.onModelFlushed() || this.shouldRender;
                    break;
                case r.EventNames.LinesDeletedEvent:
                    this.shouldRender = this.onModelLinesDeleted(s) || this.shouldRender;
                    break;
                case r.EventNames.LinesInsertedEvent:
                    this.shouldRender = this.onModelLinesInserted(s) || this.shouldRender;
                    break;
                case r.EventNames.LineChangedEvent:
                    this.shouldRender = this.onModelLineChanged(s) || this.shouldRender;
                    break;
                case r.EventNames.TokensChangedEvent:
                    this.shouldRender = this.onModelTokensChanged(s) || this.shouldRender;
                    break;
                case r.EventNames.DecorationsChangedEvent:
                    this.shouldRender = this.onModelDecorationsChanged(s) || this.shouldRender;
                    break;
                case r.EventNames.CursorPositionChangedEvent:
                    this.shouldRender = this.onCursorPositionChanged(s) || this.shouldRender;
                    break;
                case r.EventNames.CursorSelectionChangedEvent:
                    this.shouldRender = this.onCursorSelectionChanged(s) || this.shouldRender;
                    break;
                case r.EventNames.RevealRangeEvent:
                    this.shouldRender = this.onCursorRevealRange(s) || this.shouldRender;
                    break;
                case o.EventType.ConfigurationChanged:
                    this.shouldRender = this.onConfigurationChanged(s) || this.shouldRender;
                    break;
                case o.EventType.ConfigurationLineHeightChanged:
                    this.shouldRender = this.onConfigurationLineHeightChanged() || this.shouldRender;
                    break;
                case o.EventType.ConfigurationFontChanged:
                    this.shouldRender = this.onConfigurationFontChanged() || this.shouldRender;
                    break;
                case o.EventType.ViewLayoutChanged:
                    this.shouldRender = this.onLayoutChanged(s) || this.shouldRender;
                    break;
                case o.EventType.ViewScrollChanged:
                    this.shouldRender = this.onScrollChanged(s) || this.shouldRender;
                    break;
                case o.EventType.ViewZonesChanged:
                    this.shouldRender = this.onZonesChanged() || this.shouldRender;
                    break;
                case o.EventType.ViewScrollWidthChanged:
                    this.shouldRender = this.onScrollWidthChanged() || this.shouldRender;
                    break;
                case o.EventType.ViewScrollHeightChanged:
                    this.shouldRender = this.onScrollHeightChanged(s) || this.shouldRender;
                    break;
                case o.EventType.ViewFocusChanged:
                    this.shouldRender = this.onViewFocusChanged(s) || this.shouldRender;
                    break;
                default:
                    console.info("View received unkown event: "), console.info(i)
            }
        }, e
    }();
    t.ViewEventHandler = s
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/zones/zones", ["require", "exports", "vs/base/types", "vs/editor/core/view/viewEventHandler"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function (e) {
        function t(t, n) {
            e.call(this), this.context = t, this.whitespaceManager = n, this.domNode = document.createElement("div"), this.domNode.className = "view-zones", this.domNode.style.position = "absolute", this.domNode.setAttribute("role", "presentation"), this.domNode.setAttribute("aria-hidden", "true"), this.zones = {}, this.context.addEventHandler(this)
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this.context.removeEventHandler(this), this.context = null, this.whitespaceManager = null, this.zones = {}
        }, t.prototype.onConfigurationLineHeightChanged = function () {
            var e, t, n;
            for (e in this.zones)this.zones.hasOwnProperty(e) && (t = this.zones[e], n = this.heightInLinesToPixels(t.delegate.heightInLines), o.isFunction(t.delegate.onComputedHeight) && t.delegate.onComputedHeight(n), t.delegate.domNode.style.height = n + "px", this.whitespaceManager.changeWhitespace(parseInt(e, 10), n));
            return!0
        }, t.prototype.onLineMappingChanged = function () {
            var e, t, n = !1;
            for (t in this.zones)if (this.zones.hasOwnProperty(t)) {
                e = this.zones[t];
                var i = this.computeWhitespaceAfterLineNumber(e.delegate);
                n = this.whitespaceManager.changeAfterLineNumberForWhitespace(parseInt(t, 10), i) || n
            }
            return n
        }, t.prototype.onLayoutChanged = function () {
            return!0
        }, t.prototype.onScrollChanged = function (e) {
            return e.vertical
        }, t.prototype.onZonesChanged = function () {
            return!0
        }, t.prototype.onModelLinesDeleted = function () {
            return!0
        }, t.prototype.onModelLinesInserted = function () {
            return!0
        }, t.prototype.computeWhitespaceAfterLineNumber = function (e) {
            if (0 === e.afterLineNumber)return 0;
            var t;
            if ("undefined" != typeof e.afterColumn)t = this.context.model.validateModelPosition({lineNumber: e.afterLineNumber, column: e.afterColumn}); else {
                var n = this.context.model.validateModelPosition({lineNumber: e.afterLineNumber, column: 1}).lineNumber;
                t = {lineNumber: n, column: this.context.model.getModelLineMaxColumn(n)}
            }
            var i = this.context.model.convertModelPositionToViewPosition(t.lineNumber, t.column);
            return i.lineNumber
        }, t.prototype.addZone = function (e) {
            var t = this.heightInLinesToPixels(e.heightInLines), n = this.whitespaceManager.addWhitespace(this.computeWhitespaceAfterLineNumber(e), t), i = {whitespaceId: n, delegate: e, isVisible: !1};
            return o.isFunction(i.delegate.onComputedHeight) && i.delegate.onComputedHeight(t), i.delegate.domNode.style.position = "absolute", i.delegate.domNode.style.height = t + "px", i.delegate.domNode.style.width = "100%", i.delegate.domNode.style.display = "none", this.zones[i.whitespaceId.toString()] = i, this.domNode.appendChild(i.delegate.domNode), i.whitespaceId
        }, t.prototype.removeZone = function (e) {
            if (this.zones.hasOwnProperty(e.toString())) {
                var t = this.zones[e.toString()];
                return delete this.zones[e.toString()], t.delegate.domNode.parentNode && t.delegate.domNode.parentNode.removeChild(t.delegate.domNode), this.whitespaceManager.removeWhitespace(t.whitespaceId), !0
            }
            return!1
        }, t.prototype.heightInLinesToPixels = function (e) {
            return this.context.configuration.editor.lineHeight * e
        }, t.prototype.prepareRender = function (e, t) {
            var n = this.whitespaceManager.getWhitespaceViewportData();
            return t && (t.renderedViewZones += n.length), {data: n}
        }, t.prototype.render = function (e, t) {
            var n, i, r = {}, s = !1;
            for (n = 0, i = e.data.length; i > n; n++)r[e.data[n].id.toString()] = e.data[n], s = !0;
            var a, u;
            for (a in this.zones)this.zones.hasOwnProperty(a) && (u = this.zones[a], r.hasOwnProperty(a) ? (u.delegate.domNode.style.top = t.getScrolledTopFromAbsoluteTop(r[a].verticalOffset) + "px", u.delegate.domNode.style.height = r[a].height + "px", u.isVisible || (u.delegate.domNode.style.display = "block", u.isVisible = !0), o.isFunction(u.delegate.onDomNodeTop) && u.delegate.onDomNodeTop(t.getScrolledTopFromAbsoluteTop(r[a].verticalOffset))) : (u.isVisible && (u.delegate.domNode.style.display = "none", u.isVisible = !1), o.isFunction(u.delegate.onDomNodeTop) && u.delegate.onDomNodeTop(t.getScrolledTopFromAbsoluteTop(-1e6))));
            s && (this.domNode.style.width = t.scrollWidth + "px")
        }, t
    }(r.ViewEventHandler);
    t.ViewZones = s
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/lines/viewLayer", ["require", "exports", "vs/base/dom/dom", "vs/editor/core/view/viewEventHandler"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function (e) {
        function t(t, n) {
            var i = this;
            e.call(this), this._context = t, this._layoutProvider = n, this.domNode = this._createDomNode(), this._guardElement = this._createGuard(), this.domNode.appendChild(this._guardElement), this._lines = [], this._rendLineNumberStart = 1;
            var o = function (e) {
                return i._createLine(e)
            };
            this._manyUpdatesRenderer = new a(o)
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this._context = null, this._layoutProvider = null, this._lines = null
        }, t.prototype.onConfigurationLineHeightChanged = function () {
            return!0
        }, t.prototype.onLayoutChanged = function () {
            return!0
        }, t.prototype.onScrollChanged = function (e) {
            return e.vertical
        }, t.prototype.onZonesChanged = function () {
            return!0
        }, t.prototype.onModelFlushed = function () {
            return this._lines = [], this._rendLineNumberStart = 1, o.clearNode(this.domNode), this.domNode.appendChild(this._guardElement), !0
        }, t.prototype.onModelLinesDeleted = function (e) {
            var t, n = Math.max(e.fromLineNumber - this._rendLineNumberStart, 0), i = Math.min(e.toLineNumber - this._rendLineNumberStart, this._lines.length - 1);
            if (e.fromLineNumber < this._rendLineNumberStart && (e.toLineNumber < this._rendLineNumberStart ? this._rendLineNumberStart -= e.toLineNumber - e.fromLineNumber + 1 : this._rendLineNumberStart = e.fromLineNumber), i >= n) {
                for (t = n; i >= t; t++)this.domNode.removeChild(this._lines[t].getDomNode());
                this._lines.splice(n, i - n + 1)
            }
            for (t = n; t < this._lines.length; t++)this._lines[t].onLinesDeletedAbove();
            return!0
        }, t.prototype.onModelLineChanged = function (e) {
            var t = e.lineNumber - this._rendLineNumberStart, n = !1;
            t >= 0 && t < this._lines.length && (this._lines[t].onContentChanged(), n = !0);
            for (var i = Math.max(t, 0); i < this._lines.length; i++)this._lines[i].onLineChangedAbove(), n = !0;
            return n
        }, t.prototype.onModelLinesInserted = function (e) {
            var t;
            if (e.fromLineNumber <= this._rendLineNumberStart) {
                for (this._rendLineNumberStart += e.toLineNumber - e.fromLineNumber + 1, t = 0; t < this._lines.length; t++)this._lines[t].onLinesInsertedAbove();
                return!0
            }
            if (e.fromLineNumber >= this._rendLineNumberStart + this._lines.length)return!1;
            var n = Math.min(e.fromLineNumber - this._rendLineNumberStart, this._lines.length - 1), i = Math.min(e.toLineNumber - this._rendLineNumberStart, this._lines.length - 1);
            if (i >= n) {
                var o = this._lines[n].getDomNode();
                for (t = n; i >= t; t++) {
                    var r = this._createLine(!0);
                    this.domNode.insertBefore(r.getDomNode(), o), this._lines.splice(t, 0, r)
                }
                for (var s = i - n + 1, t = this._lines.length - s; t < this._lines.length; t++)this.domNode.removeChild(this._lines[t].getDomNode());
                this._lines.splice(this._lines.length - s, s)
            }
            for (t = i; t < this._lines.length; t++)this._lines[t].onLinesInsertedAbove();
            return!0
        }, t.prototype.onModelTokensChanged = function (e) {
            var t = e.fromLineNumber - this._rendLineNumberStart, n = e.toLineNumber - this._rendLineNumberStart;
            if (0 > n || t >= this._lines.length)return!1;
            for (var i = Math.min(Math.max(t, 0), this._lines.length - 1), o = Math.min(Math.max(n, 0), this._lines.length - 1), r = !1, s = i; o >= s; s++)r = !0, this._lines[s].onTokensChanged();
            return r
        }, t.prototype.onConfigurationChanged = function (e) {
            for (var t = 0; t < this._lines.length; t++)this._lines[t].onConfigurationChanged(e);
            return!0
        }, t.prototype._renderLines = function (e, t) {
            var n = {domNode: this.domNode, guardElement: this._guardElement, rendLineNumberStart: this._rendLineNumberStart, lines: this._lines, linesLength: this._lines.length, renderData: null, frameData: t}, i = this._manyUpdatesRenderer.renderWithManyUpdates(n, e.startLineNumber, e.endLineNumber, e.relativeVerticalOffset);
            this._guardElement = i.guardElement, this._rendLineNumberStart = i.rendLineNumberStart, this._lines = i.lines
        }, t.prototype._createDomNode = function () {
            var e = document.createElement("div");
            return e.className = "view-layer", e.style.position = "absolute", e.style.width = "1000000px", e.style.height = "1000000px", e.setAttribute("role", "presentation"), e.setAttribute("aria-hidden", "true"), e
        }, t.prototype._createGuard = function () {
            return document.createElement("div")
        }, t.prototype._createLine = function () {
            throw new Error("Implement me!")
        }, t
    }(r.ViewEventHandler);
    t.ViewLayer = s;
    var a = function () {
        function e(e) {
            this._createLine = e
        }

        return e.prototype.renderWithManyUpdates = function (e, t, n, i) {
            return this._render(e, t, n, i)
        }, e.prototype._render = function (e, t, n, i) {
            var o = {domNode: e.domNode, guardElement: e.guardElement, rendLineNumberStart: e.rendLineNumberStart, lines: e.lines.slice(0), linesLength: e.linesLength, renderData: e.renderData, frameData: e.frameData};
            this._renderUntouchedLines(o, Math.max(t - o.rendLineNumberStart, 0), Math.min(n - o.rendLineNumberStart, o.linesLength - 1), i, t);
            var r, s, a;
            return o.rendLineNumberStart > t ? (r = t, s = Math.min(n, o.rendLineNumberStart - 1), s >= r && (this._insertLinesBefore(o, r, s, i, t), o.linesLength += s - r + 1)) : o.rendLineNumberStart < t && (a = Math.min(o.linesLength, t - o.rendLineNumberStart), a > 0 && (this._removeLinesBefore(o, a), o.linesLength -= a)), o.rendLineNumberStart = t, o.rendLineNumberStart + o.linesLength - 1 < n ? (r = o.rendLineNumberStart + o.linesLength, s = n, s >= r && (this._insertLinesAfter(o, r, s, i, t), o.linesLength += s - r + 1)) : o.rendLineNumberStart + o.linesLength - 1 > n && (r = Math.max(0, n - o.rendLineNumberStart + 1), s = o.linesLength - 1, a = s - r + 1, a > 0 && (this._removeLinesAfter(o, a), o.linesLength -= a)), this._finishRendering(o, i), o
        }, e.prototype._renderUntouchedLines = function (e, t, n, i, o) {
            var r, s;
            for (r = t; n >= r; r++)s = e.rendLineNumberStart + r, e.lines[r].layoutLine(s, i[s - o])
        }, e.prototype._insertLinesBefore = function (e, t, n) {
            var i, o, r = e.linesLength > 0 ? e.lines[0].getDomNode() : e.guardElement, s = [];
            for (o = t; n >= o; o++)i = this._createLine(!0), s.push(i), e.domNode.insertBefore(i.getDomNode(), r);
            e.lines = s.concat(e.lines)
        }, e.prototype._removeLinesBefore = function (e, t) {
            var n;
            for (n = 0; t > n; n++)e.domNode.removeChild(e.lines[n].getDomNode());
            e.lines.splice(0, t)
        }, e.prototype._insertLinesAfter = function (e, t, n) {
            var i, o, r = e.guardElement, s = [];
            for (o = t; n >= o; o++)i = this._createLine(!0), s.push(i), e.domNode.insertBefore(i.getDomNode(), r);
            e.lines = e.lines.concat(s)
        }, e.prototype._removeLinesAfter = function (e, t) {
            var n, i = e.linesLength - t;
            for (n = 0; t > n; n++)e.domNode.removeChild(e.lines[i + n].getDomNode());
            e.lines.splice(i, t)
        }, e.prototype._finishRendering = function (e, t) {
            var n, i, o, r = !1, s = [], a = [], u = 0, l = 0, d = 0, c = 0, h = 0, p = 0;
            for (n = 0; n < e.linesLength; n++)i = e.lines[n], i.shouldUpdateHTML(n + e.rendLineNumberStart) ? (a = a.concat(i.getLineOuterHTML(e.renderData, n + e.rendLineNumberStart, t[n])), s[n] = !0, r = !0, e.frameData && (o = i.getLineStatistics(), l++, c += o.partsCount, p += o.charactersCount)) : e.frameData && (o = i.getLineStatistics(), u++, d += o.partsCount, h += o.charactersCount);
            if (e.frameData && (e.frameData.renderedVisibleLinesCount += l, e.frameData.totalVisibleLinesCount += l + u, e.frameData.renderedVisiblePartsCount += c, e.frameData.totalVisiblePartsCount += c + d, e.frameData.renderedVisibleCharactersCount += p, e.frameData.totalVisibleCharactersCount += p + h), r) {
                var f = document.createElement("div");
                f.innerHTML = a.join("");
                var g, m;
                for (n = 0; n < e.linesLength; n++)i = e.lines[n], s[n] && (m = f.firstChild, g = i.getDomNode(), g.parentNode.replaceChild(m, g), i.setDomNode(m))
            }
        }, e
    }()
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/overviewRuler/overviewRuler", ["require", "exports", "vs/editor/core/view/overviewRuler/overviewRulerImpl", "vs/editor/core/view/viewEventHandler"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function (e) {
        function t(t, n, i, r, s, a) {
            e.call(this), this.context = t, this.overviewRuler = new o.OverviewRulerImpl(n, i, this.context.configuration.editor.lineHeight, r, s, a), this.context.addEventHandler(this)
        }

        return __extends(t, e), t.prototype.destroy = function () {
            this.context.removeEventHandler(this), this.overviewRuler.dispose()
        }, t.prototype.onConfigurationLineHeightChanged = function () {
            return this.overviewRuler.setLineHeight(this.context.configuration.editor.lineHeight, !0), !0
        }, t.prototype.onZonesChanged = function () {
            return!0
        }, t.prototype.onModelFlushed = function () {
            return!0
        }, t.prototype.onScrollHeightChanged = function (e) {
            return this.overviewRuler.setScrollHeight(e, !0), !0
        }, t.prototype.getDomNode = function () {
            return this.overviewRuler.getDomNode()
        }, t.prototype.setLayout = function (e) {
            this.overviewRuler.setLayout(e, !0)
        }, t.prototype.setZones = function (e) {
            this.overviewRuler.setZones(e, !0)
        }, t
    }(r.ViewEventHandler);
    t.OverviewRuler = s
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/overviewRuler/decorationsOverviewRuler", ["require", "exports", "vs/editor/core/view/overviewRuler/overviewRulerImpl", "vs/editor/core/view/viewEventHandler"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function (e) {
        function t(n, i, r) {
            e.call(this), this.context = n, this.overviewRuler = new o.OverviewRulerImpl("decorationsOverviewRuler", i, this.context.configuration.editor.lineHeight, t.DECORATION_HEIGHT, t.DECORATION_HEIGHT, r), this.shouldUpdateDecorations = !0, this.hasDecorations = !1, this.context.addEventHandler(this)
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this.context.removeEventHandler(this), this.overviewRuler.dispose()
        }, t.prototype.onConfigurationLineHeightChanged = function () {
            return this.overviewRuler.setLineHeight(this.context.configuration.editor.lineHeight, !1), !0
        }, t.prototype.onLayoutChanged = function (e) {
            return this.overviewRuler.setLayout(e.overviewRuler, !1), !0
        }, t.prototype.onZonesChanged = function () {
            return!0
        }, t.prototype.onModelFlushed = function () {
            return!0
        }, t.prototype.onModelDecorationsChanged = function () {
            return this.shouldUpdateDecorations = !0, !0
        }, t.prototype.onScrollHeightChanged = function (e) {
            return this.overviewRuler.setScrollHeight(e, !1), !0
        }, t.prototype.getDomNode = function () {
            return this.overviewRuler.getDomNode()
        }, t.prototype.prepareRender = function () {
            if (this.shouldUpdateDecorations) {
                this.shouldUpdateDecorations = !1;
                var e, t, n, i = this.context.model.getAllDecorations(), o = [];
                for (e = 0, t = i.length; t > e; e++)n = i[e], n.options.showInOverviewRuler && o.push({startLineNumber: n.range.startLineNumber, endLineNumber: n.range.endLineNumber, color: n.options.showInOverviewRuler});
                this.hasDecorations = o.length > 0, this.overviewRuler.setZones(o, !1)
            }
            return null
        }, t.prototype.render = function () {
            if (this.shouldRender && (this.shouldRender = !1, this.overviewRuler.render(), this.hasDecorations && o.hasCanvas)) {
                var e = this.overviewRuler.getDomNode().getContext("2d");
                e.fillStyle = "rgba(197,197,197,0.4)", e.fillRect(0, 0, this.overviewRuler.getWidth(), 1), e.fillRect(0, 0, 1, this.overviewRuler.getHeight()), e.fillRect(0, this.overviewRuler.getHeight() - 1, this.overviewRuler.getWidth(), 1)
            }
        }, t.DECORATION_HEIGHT = 4, t
    }(r.ViewEventHandler);
    t.DecorationsOverviewRuler = s
}), define("vs/editor/core/view/viewEventDispatcher", ["require", "exports", "vs/base/eventEmitter"], function (e, t, n) {
    "use strict";
    var i = n, o = function () {
        function e(e) {
            this.eventHandlerGateKeeper = e, this.eventHandlers = [], this.eventQueue = [], this.isConsumingQueue = !1
        }

        return e.prototype.addEventHandler = function (e) {
            this.eventHandlers.push(e)
        }, e.prototype.removeEventHandler = function (e) {
            for (var t = 0; t < this.eventHandlers.length; t++)if (this.eventHandlers[t] === e) {
                this.eventHandlers.splice(t, 1);
                break
            }
        }, e.prototype.emit = function (e, t) {
            this.eventQueue.push(new i.EmitterEvent(e, t)), this.isConsumingQueue || this.consumeQueue()
        }, e.prototype.emitMany = function (e) {
            this.eventQueue = this.eventQueue.concat(e), this.isConsumingQueue || this.consumeQueue()
        }, e.prototype.consumeQueue = function () {
            var e = this;
            this.eventHandlerGateKeeper(function () {
                try {
                    e.isConsumingQueue = !0;
                    for (var t, n, i, o; e.eventQueue.length > 0;)for (o = e.eventQueue, e.eventQueue = [], i = e.eventHandlers.slice(0), t = 0, n = i.length; n > t; t++)i[t].handleEvents(o)
                } finally {
                    e.isConsumingQueue = !1
                }
            })
        }, e
    }();
    t.ViewEventDispatcher = o
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/viewOverlays", ["require", "exports", "vs/base/dom/dom", "vs/editor/core/view/viewEventHandler"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function (e) {
        function t(t) {
            e.call(this), this.context = t, this.dynamicOverlays = [], this.overlays = [], this.domNode = document.createElement("div"), this.domNode.className = "view-overlays", this.domNode.style.position = "absolute", this.domNode.setAttribute("role", "presentation"), this.domNode.setAttribute("aria-hidden", "true"), this.backgroundDomNode = document.createElement("div"), this.backgroundDomNode.className = "background", this.domNode.appendChild(this.backgroundDomNode), this.staticDomNode = document.createElement("div"), this.staticDomNode.className = "static", this.domNode.appendChild(this.staticDomNode), this.dynamicDomNode = document.createElement("div"), this.dynamicDomNode.className = "dynamic", this.domNode.appendChild(this.dynamicDomNode), this.scrollHeight = 0, this.context.addEventHandler(this)
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this.context.removeEventHandler(this), this.context = null;
            for (var e = 0; e < this.dynamicOverlays.length; e++)this.dynamicOverlays[e].dispose();
            this.dynamicOverlays = null;
            for (var e = 0; e < this.overlays.length; e++)this.overlays[e].dispose();
            this.overlays = null
        }, t.prototype.onViewFocusChanged = function (e) {
            return o.toggleClass(this.dynamicDomNode, "focused", e), !1
        }, t.prototype.onLayoutChanged = function (e) {
            return this.backgroundDomNode.style.width = e.width + "px", !1
        }, t.prototype.addDynamicOverlay = function (e) {
            this.dynamicOverlays.push(e)
        }, t.prototype.addOverlay = function (e) {
            this.overlays.push(e), this.staticDomNode.appendChild(e.getDomNode())
        }, t.prototype.prepareRender = function (e, t) {
            for (var n = !1, i = 0; !n && i < this.dynamicOverlays.length; i++)n = this.dynamicOverlays[i].shouldCallRender() || n;
            var o = null;
            if (n) {
                o = [];
                for (var i = 0; i < this.dynamicOverlays.length; i++)o = o.concat(this.dynamicOverlays[i].render(e, t))
            }
            for (var i = 0; i < this.overlays.length; i++)this.overlays[i].prepareRender(e);
            return{pieces: o}
        }, t.prototype.render = function (e, t) {
            e.pieces && (this.dynamicDomNode.innerHTML = e.pieces.join(""));
            for (var n = 0; n < this.overlays.length; n++)this.overlays[n].render(t);
            this.scrollHeight !== t.scrollHeight && (this.scrollHeight = t.scrollHeight, this.backgroundDomNode.style.height = this.scrollHeight + "px");
            var i = t.getViewportVerticalOffsetForLineNumber(t.visibleRange.startLineNumber) + "px";
            this.backgroundDomNode.style.top !== i && (this.backgroundDomNode.style.top = i)
        }, t
    }(r.ViewEventHandler);
    t.ViewOverlays = s
}), define("vs/base/lifecycle", ["require", "exports"], function (e, t) {
    "use strict";
    function n(e) {
        for (var t = 0, n = e.length; n > t; t++)e[t].dispose();
        return[]
    }

    function i() {
        for (var e = [], n = 0; n < arguments.length - 0; n++)e[n] = arguments[n + 0];
        return{dispose: function () {
            return t.disposeAll(e)
        }}
    }

    function o(e) {
        for (; e.length > 0;)e.pop()()
    }

    t.disposeAll = n, t.combinedDispose = i, t.cAll = o
}), define("vs/base/dom/touch", ["require", "exports", "vs/base/arrays", "vs/base/lifecycle", "vs/base/dom/dom"], function (e, t, n, i, o) {
    "use strict";
    var r = n, s = i, a = o;
    !function (e) {
        e.Tap = "-monaco-gesturetap", e.Change = "-monaco-gesturechange", e.Start = "-monaco-gesturestart", e.End = "-monaco-gesturesend"
    }(t.EventType || (t.EventType = {}));
    var u = t.EventType, l = function () {
        function e(e) {
            this.callOnTarget = [], this.activeTouches = {}, this.target = e
        }

        return e.prototype.dispose = function () {
            this.target = null
        }, Object.defineProperty(e.prototype, "target", {set: function (e) {
            var t = this;
            s.cAll(this.callOnTarget), this.activeTouches = {}, this._target = e, this._target && (this.callOnTarget.push(a.addListener(this._target, "touchstart", function (e) {
                return t.onTouchStart(e)
            })), this.callOnTarget.push(a.addListener(this._target, "touchend", function (e) {
                return t.onTouchEnd(e)
            })), this.callOnTarget.push(a.addListener(this._target, "touchmove", function (e) {
                return t.onTouchMove(e)
            })))
        }, enumerable: !0, configurable: !0}), e.newGestureEvent = function (e) {
            var t = document.createEvent("CustomEvent");
            return t.initEvent(e, !1, !0), t
        }, e.prototype.onTouchStart = function (t) {
            t.preventDefault(), a.animationFrame.cancel(this.handle);
            for (var n = 0, i = t.targetTouches.length; i > n; n++) {
                var o = t.targetTouches.item(n);
                this.activeTouches[o.identifier] = {id: o.identifier, initialTarget: o.target, initialTimeStamp: t.timeStamp, initialPageX: o.pageX, initialPageY: o.pageY, rollingTimestamps: [t.timeStamp], rollingPageX: [o.pageX], rollingPageY: [o.pageY]};
                var r = e.newGestureEvent(u.Start);
                this._target.dispatchEvent(r)
            }
        }, e.prototype.onTouchEnd = function (t) {
            var n = this;
            t.preventDefault();
            for (var i = Object.keys(this.activeTouches).length, o = 0, s = t.changedTouches.length; s > o; o++) {
                var l = t.changedTouches.item(o);
                if (this.activeTouches.hasOwnProperty(String(l.identifier))) {
                    var d = this.activeTouches[l.identifier], c = Date.now() - d.initialTimeStamp;
                    if (c < e.HOLD_DELAY && Math.abs(d.initialPageX - r.tail(d.rollingPageX)) < 30 && Math.abs(d.initialPageY - r.tail(d.rollingPageY)) < 30) {
                        var h = e.newGestureEvent(u.Tap);
                        h.initialTarget = d.initialTarget, h.pageX = r.tail(d.rollingPageX), h.pageY = r.tail(d.rollingPageY), this._target.dispatchEvent(h)
                    } else if (1 === i) {
                        var p = r.tail(d.rollingPageX), f = r.tail(d.rollingPageY), g = r.tail(d.rollingTimestamps) - d.rollingTimestamps[0], m = p - d.rollingPageX[0], v = f - d.rollingPageY[0], y = m > 0 ? 1 : -1, b = v > 0 ? 1 : -1, C = function (t, i, o, r, s) {
                            n.handle = a.animationFrame.request(function () {
                                var a = Date.now(), l = a - t, d = 0, c = 0, h = !0;
                                i += e.SCROLL_FRICTION * l, r += e.SCROLL_FRICTION * l, i > 0 && (h = !1, d = y * i * l), r > 0 && (h = !1, c = b * r * l);
                                var p = e.newGestureEvent(u.Change);
                                p.translationX = d, p.translationY = c, n._target.dispatchEvent(p), h || C(a, i, o + d, r, s + c)
                            })
                        };
                        C(t.timeStamp, Math.abs(m) / g, p, Math.abs(v) / g, f)
                    }
                    delete this.activeTouches[l.identifier]
                } else console.warn("end of an UNKNOWN touch", l)
            }
        }, e.prototype.onTouchMove = function (t) {
            t.preventDefault();
            for (var n = 0, i = t.changedTouches.length; i > n; n++) {
                var o = t.changedTouches.item(n);
                if (this.activeTouches.hasOwnProperty(String(o.identifier))) {
                    var s = this.activeTouches[o.identifier];
                    Date.now() - s.initialTimeStamp;
                    var a = e.newGestureEvent(u.Change);
                    a.translationX = o.pageX - r.tail(s.rollingPageX), a.translationY = o.pageY - r.tail(s.rollingPageY), this._target.dispatchEvent(a), s.rollingPageX.length > 3 && (s.rollingPageX.shift(), s.rollingPageY.shift(), s.rollingTimestamps.shift()), s.rollingPageX.push(o.pageX), s.rollingPageY.push(o.pageY), s.rollingTimestamps.push(t.timeStamp)
                } else console.warn("end of an UNKNOWN touch", o)
            }
        }, e.TAP_DELAY = 500, e.HOLD_DELAY = 2e3, e.SCROLL_FRICTION = -.005, e
    }();
    t.Gesture = l
}), define("vs/base/ui/scrollbar/impl/domNodeScrollable", ["require", "exports", "vs/base/dom/dom", "vs/base/dom/touch", "vs/base/eventEmitter"], function (e, t, n, i, o) {
    "use strict";
    var r = n, s = i, a = o, u = function () {
        function e(e) {
            this.eventEmitterHelper = new a.EventEmitter, this.domNode = e, this.gestureHandler = new s.Gesture(this.domNode)
        }

        return e.prototype.getScrollHeight = function () {
            return this.domNode.scrollHeight
        }, e.prototype.getScrollWidth = function () {
            return this.domNode.scrollWidth
        }, e.prototype.getScrollLeft = function () {
            return this.domNode.scrollLeft
        }, e.prototype.setScrollLeft = function (e) {
            this.domNode.scrollLeft = e
        }, e.prototype.getScrollTop = function () {
            return this.domNode.scrollTop
        }, e.prototype.setScrollTop = function (e) {
            this.domNode.scrollTop = e
        }, e.prototype.addScrollListener = function (e) {
            var t = this, n = this.eventEmitterHelper.addListener2("scroll", e), i = r.addDisposableListener(this.domNode, "scroll", function (e) {
                t.eventEmitterHelper.emit("scroll", {browserEvent: e})
            });
            return{dispose: function () {
                i.dispose(), n.dispose()
            }}
        }, e.prototype.dispose = function () {
            this.domNode = null, this.eventEmitterHelper.dispose(), this.gestureHandler && (this.gestureHandler.dispose(), this.gestureHandler = null)
        }, e
    }();
    t.DomNodeScrollable = u
}), define("vs/base/dom/globalMouseMoveMonitor", ["require", "exports", "vs/base/lifecycle", "vs/base/dom/dom", "vs/base/dom/mouseEvent", "vs/base/dom/iframe"], function (e, t, n, i, o, r) {
    "use strict";
    function s(e, t) {
        var n = new l.StandardMouseEvent(t);
        return n.preventDefault(), {leftButton: n.leftButton, posx: n.posx, posy: n.posy}
    }

    var a = n, u = i, l = o, d = r;
    t.standardMouseMoveMerger = s;
    var c = function () {
        function e() {
            this.hooks = [], this.mouseMoveEventMerger = null, this.mouseMoveCallback = null, this.onStopCallback = null
        }

        return e.prototype.dispose = function () {
            this.stopMonitoring(!1)
        }, e.prototype.stopMonitoring = function (e) {
            if (this.isMonitoring()) {
                this.hooks = a.disposeAll(this.hooks), this.mouseMoveEventMerger = null, this.mouseMoveCallback = null;
                var t = this.onStopCallback;
                this.onStopCallback = null, e && t()
            }
        }, e.prototype.isMonitoring = function () {
            return this.hooks.length > 0
        }, e.prototype.startMonitoring = function (e, t, n) {
            var i = this;
            if (!this.isMonitoring()) {
                this.mouseMoveEventMerger = e, this.mouseMoveCallback = t, this.onStopCallback = n;
                for (var o = d.getSameOriginWindowChain(), r = 0; r < o.length; r++)this.hooks.push(u.addDisposableThrottledListener(o[r].window.document, "mousemove", function (e) {
                    return i.mouseMoveCallback(e)
                }, function (e, t) {
                    return i.mouseMoveEventMerger(e, t)
                })), this.hooks.push(u.addDisposableListener(o[r].window.document, "mouseup", function () {
                    return i.stopMonitoring(!0)
                }));
                if (d.hasDifferentOriginAncestor()) {
                    var s = o[o.length - 1];
                    this.hooks.push(u.addDisposableListener(s.window.document, "mouseout", function (e) {
                        var t = new l.StandardMouseEvent(e);
                        "html" === t.target.tagName.toLowerCase() && i.stopMonitoring(!0)
                    })), this.hooks.push(u.addDisposableListener(s.window.document, "mouseover", function (e) {
                        var t = new l.StandardMouseEvent(e);
                        "html" === t.target.tagName.toLowerCase() && i.stopMonitoring(!0)
                    })), this.hooks.push(u.addDisposableListener(s.window.document.body, "mouseleave", function () {
                        i.stopMonitoring(!0)
                    }))
                }
            }
        }, e
    }();
    t.GlobalMouseMoveMonitor = c
}), define("vs/base/ui/scrollbar/impl/abstractScrollbar", ["require", "exports", "vs/base/dom/dom", "vs/base/dom/mouseEvent", "vs/base/ui/scrollbar/impl/common", "vs/base/lifecycle", "vs/base/dom/globalMouseMoveMonitor"], function (e, t, n, i, o, r, s) {
    "use strict";
    function a(e) {
        return e + "px"
    }

    function u(e, t, n, i, o) {
        null !== t && (e.style.top = a(t)), null !== n && (e.style.left = a(n)), null !== i && (e.style.bottom = a(i)), null !== o && (e.style.right = a(o))
    }

    function l(e, t, n) {
        null !== t && (e.style.width = a(t)), null !== n && (e.style.height = a(n))
    }

    var d = n, c = i, h = o, p = r, f = s, g = function () {
        function e(e, t, n) {
            this.visibleSize = 0, this.scrollSize = 0, this.scrollPosition = 0, this.scrollbarSize = t, this.oppositeScrollbarSize = n, this.arrowSize = e, this.refreshComputedValues()
        }

        return e.prototype.setVisibleSize = function (e) {
            return this.visibleSize !== e ? (this.visibleSize = e, this.refreshComputedValues(), !0) : !1
        }, e.prototype.setScrollSize = function (e) {
            return this.scrollSize !== e ? (this.scrollSize = e, this.refreshComputedValues(), !0) : !1
        }, e.prototype.setScrollPosition = function (e) {
            return this.scrollPosition !== e ? (this.scrollPosition = e, this.refreshComputedValues(), !0) : !1
        }, e.prototype.refreshComputedValues = function () {
            if (this.computedAvailableSize = Math.max(0, this.visibleSize - this.oppositeScrollbarSize), this.computedRepresentableSize = Math.max(0, this.computedAvailableSize - 2 * this.arrowSize), this.computedRatio = this.scrollSize > 0 ? this.computedRepresentableSize / this.scrollSize : 0, this.computedIsNeeded = this.scrollSize > this.visibleSize, this.computedIsNeeded) {
                if (this.computedSliderSize = Math.floor(this.visibleSize * this.computedRatio), this.computedSliderPosition = Math.floor(this.scrollPosition * this.computedRatio), this.computedSliderSize < e.MINIMUM_SLIDER_SIZE) {
                    var t = (e.MINIMUM_SLIDER_SIZE - this.computedSliderSize) / 2;
                    this.computedSliderSize = e.MINIMUM_SLIDER_SIZE, this.computedSliderPosition -= t, this.computedSliderPosition + this.computedSliderSize > this.computedRepresentableSize && (this.computedSliderPosition = this.computedRepresentableSize - this.computedSliderSize), this.computedSliderPosition < 0 && (this.computedSliderPosition = 0)
                }
            } else this.computedSliderSize = this.computedRepresentableSize, this.computedSliderPosition = 0
        }, e.prototype.getArrowSize = function () {
            return this.arrowSize
        }, e.prototype.getRectangleLargeSize = function () {
            return this.computedAvailableSize
        }, e.prototype.getRectangleSmallSize = function () {
            return this.scrollbarSize
        }, e.prototype.isNeeded = function () {
            return this.computedIsNeeded
        }, e.prototype.getSliderSize = function () {
            return this.computedSliderSize
        }, e.prototype.getSliderPosition = function () {
            return this.computedSliderPosition
        }, e.prototype.convertSliderPositionToScrollPosition = function (e) {
            return e / this.computedRatio
        }, e.prototype.validateScrollPosition = function (e) {
            return e = Math.round(e), e = Math.max(e, 0), e = Math.min(e, this.scrollSize - this.visibleSize)
        }, e.MINIMUM_SLIDER_SIZE = 20, e
    }();
    t.ScrollbarState = g;
    var m = function () {
        function e(e, t, n, i, o, r, s) {
            var a = this;
            this.parent = s, this.mouseWheelEventFactory = r, this.domNode = document.createElement("div"), this.domNode.className = e, this.domNode.style.position = "absolute", l(this.domNode, y.ARROW_IMG_SIZE, y.ARROW_IMG_SIZE), u(this.domNode, t, n, i, o), this.toDispose = [], this.toDispose.push(d.addDisposableListener(this.domNode, "mousedown", function () {
                return a._arrowMouseDown()
            })), this.toDispose.push(d.addDisposableListener(this.domNode, "mouseup", function () {
                return a._arrowMouseUp()
            })), this.interval = -1, this.timeout = -1
        }

        return e.prototype.dispose = function () {
            this.toDispose = p.disposeAll(this.toDispose), this._clearArrowTimers()
        }, e.prototype._arrowMouseDown = function () {
            var e = this, t = function () {
                e.parent.onMouseWheel(e.mouseWheelEventFactory())
            }, n = function () {
                e.interval = window.setInterval(t, 1e3 / 24)
            };
            t(), this._clearArrowTimers(), this.timeout = window.setTimeout(n, 200)
        }, e.prototype._arrowMouseUp = function () {
            this._clearArrowTimers()
        }, e.prototype._clearArrowTimers = function () {
            -1 !== this.interval && (window.clearInterval(this.interval), this.interval = -1), -1 !== this.timeout && (window.clearTimeout(this.timeout), this.timeout = -1)
        }, e
    }(), v = function () {
        function e(e) {
            this.visibility = e, this.domNode = null, this.isVisible = !1, this.isNeeded = !1, this.shouldBeVisible = !1, this.fadeAwayTimeout = -1
        }

        return e.prototype.dispose = function () {
            -1 !== this.fadeAwayTimeout && (window.clearTimeout(this.fadeAwayTimeout), this.fadeAwayTimeout = -1)
        }, e.prototype.applyVisibilitySetting = function (e) {
            return this.visibility === h.Visibility.Hidden ? !1 : this.visibility === h.Visibility.Visible ? !0 : e
        }, e.prototype.setShouldBeVisible = function (e) {
            var t = this.applyVisibilitySetting(e);
            this.shouldBeVisible !== t && (this.shouldBeVisible = t, this.ensureVisibility())
        }, e.prototype.setIsNeeded = function (e) {
            this.isNeeded !== e && (this.isNeeded = e, this.ensureVisibility())
        }, e.prototype.setDomNode = function (e) {
            this.domNode = e, this.domNode.className = "invisible scrollbar", this.domNode.style.display = "none", this.setShouldBeVisible(!1)
        }, e.prototype.ensureVisibility = function () {
            return this.isNeeded ? (this.shouldBeVisible ? this._reveal() : this._hide(!0), void 0) : (this._hide(!1), void 0)
        }, e.prototype._reveal = function () {
            var e = this;
            this.isVisible || (this.isVisible = !0, window.setTimeout(function () {
                e.domNode.className = "visible scrollbar"
            }, 0), this.domNode.style.display = "block", -1 !== this.fadeAwayTimeout && (window.clearTimeout(this.fadeAwayTimeout), this.fadeAwayTimeout = -1))
        }, e.prototype._hide = function (e) {
            var t = this;
            this.isVisible && (this.isVisible = !1, this.domNode.className = "invisible scrollbar", e ? -1 === this.fadeAwayTimeout && (this.fadeAwayTimeout = window.setTimeout(function () {
                t.fadeAwayTimeout = -1, t.domNode.style.display = "none"
            }, 800)) : this.domNode.style.display = "none")
        }, e
    }(), y = function () {
        function e(e, t, n) {
            this.parent = e, this.scrollbarState = t, this.visibilityController = new v(n), this.mouseMoveMonitor = new f.GlobalMouseMoveMonitor, this.toDispose = [], this.toDispose.push(this.visibilityController), this.toDispose.push(this.mouseMoveMonitor)
        }

        return e.prototype._createDomNode = function () {
            var e = this;
            this.domNode = document.createElement("div"), this.visibilityController.setDomNode(this.domNode), this.domNode.style.position = "absolute", this.toDispose.push(d.addDisposableListener(this.domNode, "mousedown", function (t) {
                return e._domNodeMouseDown(t)
            }))
        }, e.prototype._createArrow = function (e, t, n, i, o, r) {
            var s = new m(e, t, n, i, o, r, this.parent);
            this.domNode.appendChild(s.domNode), this.toDispose.push(s)
        }, e.prototype._createSlider = function (e, t) {
            var n = this;
            this.slider = document.createElement("div"), this.slider.className = "slider", this.slider.style.position = "absolute", this.slider.style.left = "0", l(this.slider, e, t), this.domNode.appendChild(this.slider), this.toDispose.push(d.addDisposableListener(this.slider, "mousedown", function (e) {
                return n._sliderMouseDown(e)
            }))
        }, e.prototype.destroy = function () {
            this.toDispose = p.disposeAll(this.toDispose)
        }, e.prototype.onElementSize = function (e) {
            this.scrollbarState.setVisibleSize(e) && (this._renderDomNode(this.scrollbarState.getRectangleLargeSize(), this.scrollbarState.getRectangleSmallSize()), this._renderSlider(), this.visibilityController.setIsNeeded(this.scrollbarState.isNeeded()))
        }, e.prototype.onElementScrollSize = function (e) {
            this.scrollbarState.setScrollSize(e) && (this._renderSlider(), this.visibilityController.setIsNeeded(this.scrollbarState.isNeeded()))
        }, e.prototype.onElementScrollPosition = function (e) {
            this.scrollbarState.setScrollPosition(e) && (this._renderSlider(), this.visibilityController.setIsNeeded(this.scrollbarState.isNeeded()))
        }, e.prototype.beginReveal = function () {
            this.visibilityController.setShouldBeVisible(!0)
        }, e.prototype.beginHide = function () {
            this.visibilityController.setShouldBeVisible(!1)
        }, e.prototype._renderSlider = function () {
            this._updateSlider(this.scrollbarState.getSliderSize(), this.scrollbarState.getArrowSize() + this.scrollbarState.getSliderPosition())
        }, e.prototype._domNodeMouseDown = function (e) {
            var t = new c.StandardMouseEvent(e);
            t.target === this.domNode && this.onMouseDown(e)
        }, e.prototype.onMouseDown = function (e) {
            var t = new c.StandardMouseEvent(e), n = d.getDomNodePosition(this.domNode), i = this._mouseDownRelativePosition(t, n) - this.scrollbarState.getArrowSize() - this.scrollbarState.getSliderSize() / 2;
            this.setDesiredScrollPosition(this.scrollbarState.convertSliderPositionToScrollPosition(i)), this._sliderMouseDown(e)
        }, e.prototype._sliderMouseDown = function (e) {
            var t = this, n = new c.StandardMouseEvent(e);
            if (n.leftButton) {
                var i = this._sliderMousePosition(n) - this.scrollbarState.getSliderPosition();
                d.toggleClass(this.slider, "active", !0), this.mouseMoveMonitor.startMonitoring(f.standardMouseMoveMerger, function (e) {
                    var n = t._sliderMousePosition(e) - i;
                    t.setDesiredScrollPosition(t.scrollbarState.convertSliderPositionToScrollPosition(n))
                }, function () {
                    d.toggleClass(t.slider, "active", !1), t.parent.onDragEnd()
                }), n.preventDefault(), this.parent.onDragStart()
            }
        }, e.prototype.validateScrollPosition = function (e) {
            return this.scrollbarState.validateScrollPosition(e)
        }, e.prototype.setDesiredScrollPosition = function (e) {
            e = this.validateScrollPosition(e), this._setScrollPosition(e), this.onElementScrollPosition(e), this._renderSlider()
        }, e.prototype._renderDomNode = function () {
        }, e.prototype._updateSlider = function () {
        }, e.prototype._mouseDownRelativePosition = function () {
            return 0
        }, e.prototype._sliderMousePosition = function () {
            return 0
        }, e.prototype._setScrollPosition = function () {
        }, e.ARROW_IMG_SIZE = 11, e
    }();
    t.AbstractScrollbar = y
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/base/ui/scrollbar/impl/horizontalScrollbar", ["require", "exports", "vs/base/ui/scrollbar/impl/abstractScrollbar", "vs/base/dom/mouseEvent"], function (e, t, n, i) {
    "use strict";
    function o(e, t, n) {
        e.style[t] !== n && (e.style[t] = n)
    }

    var r = n, s = i, a = function (e) {
        function t(t, n, i) {
            var o = this, s = new r.ScrollbarState(i.horizontalHasArrows ? i.arrowSize : 0, i.horizontalScrollbarSize, i.verticalScrollbarSize);
            if (e.call(this, n, s, i.horizontal), this.scrollable = t, this._createDomNode(), i.horizontalHasArrows) {
                var a = (i.arrowSize - r.AbstractScrollbar.ARROW_IMG_SIZE) / 2, u = (i.horizontalScrollbarSize - r.AbstractScrollbar.ARROW_IMG_SIZE) / 2;
                this._createArrow("left-arrow", u, a, null, null, function () {
                    return o._createMouseWheelEvent(1)
                }), this._createArrow("right-arrow", u, null, null, a, function () {
                    return o._createMouseWheelEvent(-1)
                })
            }
            this._createSlider(null, i.horizontalScrollbarSize)
        }

        return __extends(t, e), t.prototype._createMouseWheelEvent = function (e) {
            return new s.StandardMouseWheelEvent(null, e, 0)
        }, t.prototype._updateSlider = function (e, t) {
            o(this.slider, "width", e + "px"), o(this.slider, "left", t + "px")
        }, t.prototype._renderDomNode = function (e, t) {
            o(this.domNode, "width", e + "px"), o(this.domNode, "height", t + "px"), o(this.domNode, "left", "0"), o(this.domNode, "bottom", "0")
        }, t.prototype._mouseDownRelativePosition = function (e, t) {
            return e.posx - t.left
        }, t.prototype._sliderMousePosition = function (e) {
            return e.posx
        }, t.prototype._setScrollPosition = function (e) {
            this.scrollable.setScrollLeft(e)
        }, t
    }(r.AbstractScrollbar);
    t.HorizontalScrollbar = a
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/base/ui/scrollbar/impl/verticalScrollbar", ["require", "exports", "vs/base/ui/scrollbar/impl/abstractScrollbar", "vs/base/dom/mouseEvent"], function (e, t, n, i) {
    "use strict";
    function o(e, t, n) {
        e.style[t] !== n && (e.style[t] = n)
    }

    var r = n, s = i, a = function (e) {
        function t(t, n, i) {
            var o = this, s = new r.ScrollbarState(i.verticalHasArrows ? i.arrowSize : 0, i.verticalScrollbarSize, i.horizontalScrollbarSize);
            if (e.call(this, n, s, i.vertical), this.scrollable = t, this._createDomNode(), i.verticalHasArrows) {
                var a = (i.arrowSize - r.AbstractScrollbar.ARROW_IMG_SIZE) / 2, u = (i.verticalScrollbarSize - r.AbstractScrollbar.ARROW_IMG_SIZE) / 2;
                this._createArrow("up-arrow", a, u, null, null, function () {
                    return o._createMouseWheelEvent(1)
                }), this._createArrow("down-arrow", null, u, a, null, function () {
                    return o._createMouseWheelEvent(-1)
                })
            }
            this._createSlider(i.verticalScrollbarSize, null)
        }

        return __extends(t, e), t.prototype._createMouseWheelEvent = function (e) {
            return new s.StandardMouseWheelEvent(null, 0, e)
        }, t.prototype._updateSlider = function (e, t) {
            o(this.slider, "height", e + "px"), o(this.slider, "top", t + "px")
        }, t.prototype._renderDomNode = function (e, t) {
            o(this.domNode, "width", t + "px"), o(this.domNode, "height", e + "px"), o(this.domNode, "right", "0"), o(this.domNode, "top", "0")
        }, t.prototype._mouseDownRelativePosition = function (e, t) {
            return e.posy - t.top
        }, t.prototype._sliderMousePosition = function (e) {
            return e.posy
        }, t.prototype._setScrollPosition = function (e) {
            this.scrollable.setScrollTop(e)
        }, t
    }(r.AbstractScrollbar);
    t.VerticalScrollbar = a
}), define("vs/editor/core/view/model/prefixSumComputer", ["require", "exports"], function (e, t) {
    "use strict";
    var n = function () {
        function e(e) {
            this.values = e, this.prefixSum = [];
            for (var t = 0, n = this.values.length; n > t; t++)this.prefixSum[t] = 0;
            this.prefixSumValidIndex = -1
        }

        return e.prototype.getCount = function () {
            return this.values.length
        }, e.prototype.insertValue = function (e, t) {
            this.values.splice(e, 0, t), this.prefixSum.splice(e, 0, 0), e - 1 < this.prefixSumValidIndex && (this.prefixSumValidIndex = e - 1)
        }, e.prototype.changeValue = function (e, t) {
            this.values[e] !== t && (this.values[e] = t, e - 1 < this.prefixSumValidIndex && (this.prefixSumValidIndex = e - 1))
        }, e.prototype.removeValues = function (e, t) {
            this.values.splice(e, t), this.prefixSum.splice(e, t), e - 1 < this.prefixSumValidIndex && (this.prefixSumValidIndex = e - 1)
        }, e.prototype.getTotalValue = function () {
            return 0 === this.values.length ? 0 : this.getAccumulatedValue(this.values.length - 1)
        }, e.prototype.getAccumulatedValue = function (e) {
            if (e <= this.prefixSumValidIndex)return this.prefixSum[e];
            var t = this.prefixSumValidIndex + 1;
            0 === t && (this.prefixSum[0] = this.values[0], t++);
            for (var n = t; e >= n; n++)this.prefixSum[n] = this.prefixSum[n - 1] + this.values[n];
            return this.prefixSumValidIndex = Math.max(this.prefixSumValidIndex, e), this.prefixSum[e]
        }, e.prototype.getIndexOf = function (e, t) {
            for (var n, i, o, r = 0, s = this.values.length - 1; s >= r;)if (n = 0 | r + (s - r) / 2, o = this.getAccumulatedValue(n), i = o - this.values[n], i > e)s = n - 1; else {
                if (!(e >= o))break;
                r = n + 1
            }
            t.index = n, t.remainder = e - i
        }, e
    }();
    t.PrefixSumComputer = n
}), define("vs/editor/core/view/model/characterHardWrappingLineMapper", ["require", "exports", "vs/editor/core/view/model/prefixSumComputer"], function (e, t, n) {
    "use strict";
    function i(e, t, n) {
        var i, o = [], r = 0, l = e + t + n;
        for (i = 0; i < l.length; i++)r = Math.max(r, l.charCodeAt(i));
        for (i = 0; r >= i; i++)o[i] = 0;
        for (i = 0; i < e.length; i++)o[e.charCodeAt(i)] = s;
        for (i = 0; i < t.length; i++)o[t.charCodeAt(i)] = a;
        for (i = 0; i < n.length; i++)o[n.charCodeAt(i)] = u;
        return o
    }

    var o = n, r = {index: -1, remainder: -1};
    "	".charCodeAt(0);
    var s = 1, a = 2, u = 3, l = function () {
        function e(e, t, n, i) {
            this.characterClasses = e, this.lineText = t, this.tabSize = n, this.wrappingColumn = i, this.prefixSums = null, this.computeMapping()
        }

        return e.prototype.setLineText = function (e) {
            this.lineText = e, this.computeMapping()
        }, e.prototype.setWrappingColumn = function (e) {
            this.wrappingColumn = e, this.computeMapping()
        }, e.prototype.setTabSize = function (e) {
            this.tabSize = e, this.computeMapping()
        }, e.nextVisibleColumn = function (e, t, n) {
            return n ? e + (t - e % t) : e + 1
        }, e.prototype.computeMapping = function () {
            if (-1 === this.wrappingColumn)return this.prefixSums = null, void 0;
            var t, n, i, r, l, d, c, h, p = this.characterClasses, f = this.lineText, g = this.tabSize, m = this.wrappingColumn, v = "	".charCodeAt(0), y = 0, b = [], C = 0, E = -1, w = 0, _ = -1, S = 0;
            for (i = 0, t = 0, n = f.length; n > t; t++)r = f.charCodeAt(t), l = r === v, d = r < p.length ? p[r] : 0, d === s && (E = t, w = 0), i = e.nextVisibleColumn(i, g, l), i > m && 0 !== t && (-1 !== E ? (c = E, h = w) : -1 !== _ ? (c = _, h = S) : (c = t, h = 0), b[C++] = c - y, y = c, i = e.nextVisibleColumn(h, g, l), E = -1, w = 0, _ = -1, S = 0), -1 !== E && (w = e.nextVisibleColumn(w, g, l)), -1 !== _ && (S = e.nextVisibleColumn(S, g, l)), d === a && (E = t + 1, w = 0), d === u && (_ = t + 1, S = 0);
            b[C++] = n - y, this.prefixSums = new o.PrefixSumComputer(b)
        }, e.prototype.getOutputLineCount = function () {
            return-1 === this.wrappingColumn ? 1 : this.prefixSums.getCount()
        }, e.prototype.getInputOffsetOfOutputPosition = function (e, t) {
            return-1 === this.wrappingColumn ? t : 0 === e ? t : this.prefixSums.getAccumulatedValue(e - 1) + t
        }, e.prototype.getOutputPositionOfInputOffset = function (e, t) {
            return-1 === this.wrappingColumn ? (t.outputLineIndex = 0, t.outputOffset = e, void 0) : (this.prefixSums.getIndexOf(e, r), t.outputLineIndex = r.index, t.outputOffset = r.remainder, void 0)
        }, e.SEARCH_RANGE_RATIO = .2, e
    }();
    t.CharacterHardWrappingLineMapper = l;
    var d = function () {
        function e(e, t, n) {
            this.characterClasses = i(e, t, n)
        }

        return e.prototype.createLineMapper = function (e, t, n) {
            return new l(this.characterClasses, e, t, n)
        }, e
    }();
    t.CharacterHardWrappingLineMapperFactory = d
}), define("vs/editor/core/view/model/filteredLineTokens", ["require", "exports", "vs/base/arrays"], function (e, t, n) {
    "use strict";
    var i = n, o = function () {
        function e(e, t, n) {
            this._original = e, this._startOffset = t, this._endOffset = n, this.tokens = [];
            var o = e.getTokens();
            if (o.length > 0) {
                var r, s, a, u = i.findIndexInSegmentsArray(o, t);
                for (this.tokens.push({startIndex: 0, type: o[u].type}), s = u + 1, a = o.length; a > s && (r = o[s], !(r.startIndex >= n)); s++)this.tokens.push({startIndex: r.startIndex - t, type: r.type})
            }
        }

        return e.prototype.getTokens = function () {
            return this.tokens
        }, e.prototype.getTextLength = function () {
            return this._endOffset - this._startOffset
        }, e.prototype.equals = function (t) {
            if (t instanceof e) {
                var n = t;
                return this._startOffset !== n._startOffset ? !1 : this._endOffset !== n._endOffset ? !1 : this._original.equals(n._original)
            }
            return!1
        }, e.prototype.findIndexOfOffset = function (e) {
            return i.findIndexInSegmentsArray(this.tokens, e)
        }, e
    }();
    t.FilteredLineTokens = o
}), define("vs/editor/core/position", ["require", "exports"], function (e, t) {
    "use strict";
    function n(e) {
        return e && "number" == typeof e.lineNumber && "number" == typeof e.column
    }

    t.isIPosition = n;
    var i = function () {
        function e(e, t) {
            this.lineNumber = e, this.column = t
        }

        return e.prototype.equals = function (e) {
            return!!e && this.lineNumber === e.lineNumber && this.column === e.column
        }, e.prototype.isBefore = function (e) {
            return this.lineNumber < e.lineNumber ? !0 : e.lineNumber < this.lineNumber ? !1 : this.column < e.column
        }, e.prototype.isBeforeOrEqual = function (e) {
            return this.lineNumber < e.lineNumber ? !0 : e.lineNumber < this.lineNumber ? !1 : this.column <= e.column
        }, e.prototype.clone = function () {
            return new e(this.lineNumber, this.column)
        }, e.prototype.toString = function () {
            return"(" + this.lineNumber + "," + this.column + ")"
        }, e
    }();
    t.Position = i
}), define("vs/editor/core/view/viewController", ["require", "exports", "vs/editor/core/constants", "vs/editor/core/position"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function () {
        function e(e, t, n) {
            this.viewModel = e, this.configuration = t, this.outgoingEventBus = n
        }

        return e.prototype.paste = function (e, t, n) {
            this.configuration.handlerDispatcher.trigger(e, o.Handler.Paste, {text: t, sameSource: n})
        }, e.prototype.type = function (e, t) {
            this.configuration.handlerDispatcher.trigger(e, o.Handler.Type, {text: t})
        }, e.prototype.cut = function (e) {
            this.configuration.handlerDispatcher.trigger(e, o.Handler.Cut, null)
        }, e.prototype.moveTo = function (e, t, n) {
            this.configuration.handlerDispatcher.trigger(e, o.Handler.MoveTo, {position: this.convertViewToModelPosition(t, n), viewPosition: new r.Position(t, n)})
        }, e.prototype.moveToSelect = function (e, t, n) {
            this.configuration.handlerDispatcher.trigger(e, o.Handler.MoveToSelect, {position: this.convertViewToModelPosition(t, n), viewPosition: new r.Position(t, n)})
        }, e.prototype.createCursor = function (e, t, n, i) {
            this.configuration.handlerDispatcher.trigger(e, o.Handler.CreateCursor, {position: this.convertViewToModelPosition(t, n), viewPosition: new r.Position(t, n), wholeLine: i})
        }, e.prototype.lastCursorMoveToSelect = function (e, t, n) {
            this.configuration.handlerDispatcher.trigger(e, o.Handler.LastCursorMoveToSelect, {position: this.convertViewToModelPosition(t, n), viewPosition: new r.Position(t, n)})
        }, e.prototype.wordSelect = function (e, t, n, i) {
            this.configuration.handlerDispatcher.trigger(e, o.Handler.WordSelect, {position: this.convertViewToModelPosition(t, n), preference: i})
        }, e.prototype.wordSelectDrag = function (e, t, n, i) {
            this.configuration.handlerDispatcher.trigger(e, o.Handler.WordSelectDrag, {position: this.convertViewToModelPosition(t, n), preference: i})
        }, e.prototype.lastCursorWordSelect = function (e, t, n, i) {
            this.configuration.handlerDispatcher.trigger(e, o.Handler.LastCursorWordSelect, {position: this.convertViewToModelPosition(t, n), preference: i})
        }, e.prototype.lineSelect = function (e, t, n) {
            this.configuration.handlerDispatcher.trigger(e, o.Handler.LineSelect, {position: this.convertViewToModelPosition(t, n), viewPosition: new r.Position(t, n)})
        }, e.prototype.lineSelectDrag = function (e, t, n) {
            this.configuration.handlerDispatcher.trigger(e, o.Handler.LineSelectDrag, {position: this.convertViewToModelPosition(t, n), viewPosition: new r.Position(t, n)})
        }, e.prototype.lastCursorLineSelect = function (e, t, n) {
            this.configuration.handlerDispatcher.trigger(e, o.Handler.LastCursorLineSelect, {position: this.convertViewToModelPosition(t, n), viewPosition: new r.Position(t, n)})
        }, e.prototype.lastCursorLineSelectDrag = function (e, t, n) {
            this.configuration.handlerDispatcher.trigger(e, o.Handler.LastCursorLineSelectDrag, {position: this.convertViewToModelPosition(t, n), viewPosition: new r.Position(t, n)})
        }, e.prototype.selectAll = function (e) {
            this.configuration.handlerDispatcher.trigger(e, o.Handler.SelectAll, null)
        }, e.prototype.convertViewToModelPosition = function (e, t) {
            return this.viewModel.convertViewPositionToModelPosition(e, t)
        }, e.prototype.convertViewToModelRange = function (e) {
            return this.viewModel.convertViewRangeToModelRange(e)
        }, e.prototype.convertViewToModelMouseEvent = function (e) {
            e.target && (e.target.position && (e.target.position = this.convertViewToModelPosition(e.target.position.lineNumber, e.target.position.column)), e.target.range && (e.target.range = this.convertViewToModelRange(e.target.range)))
        }, e.prototype.emitKeyDown = function (e) {
            this.outgoingEventBus.emit(o.EventType.KeyDown, e)
        }, e.prototype.emitKeyUp = function (e) {
            this.outgoingEventBus.emit(o.EventType.KeyUp, e)
        }, e.prototype.emitContextMenu = function (e) {
            this.convertViewToModelMouseEvent(e), this.outgoingEventBus.emit(o.EventType.ContextMenu, e)
        }, e.prototype.emitMouseMove = function (e) {
            this.convertViewToModelMouseEvent(e), this.outgoingEventBus.emit(o.EventType.MouseMove, e)
        }, e.prototype.emitMouseLeave = function (e) {
            this.convertViewToModelMouseEvent(e), this.outgoingEventBus.emit(o.EventType.MouseLeave, e)
        }, e.prototype.emitMouseUp = function (e) {
            this.convertViewToModelMouseEvent(e), this.outgoingEventBus.emit(o.EventType.MouseUp, e)
        }, e.prototype.emitMouseDown = function (e) {
            this.convertViewToModelMouseEvent(e), this.outgoingEventBus.emit(o.EventType.MouseDown, e)
        }, e
    }();
    t.ViewController = s
}), define("vs/editor/core/view/model/splitLinesCollection", ["require", "exports", "vs/editor/core/view/model/prefixSumComputer", "vs/editor/core/view/model/filteredLineTokens", "vs/editor/core/position", "vs/editor/core/view/viewContext"], function (e, t, n, i, o, r) {
    "use strict";
    var s = n, a = i, u = o, l = r, d = {outputLineIndex: 0, outputOffset: 0}, c = function () {
        function e(e) {
            this.positionMapper = e, this.outputLineCount = this.positionMapper.getOutputLineCount()
        }

        return e.prototype.setLineText = function (e) {
            this.positionMapper.setLineText(e), this.outputLineCount = this.positionMapper.getOutputLineCount()
        }, e.prototype.setTabSize = function (e) {
            this.positionMapper.setTabSize(e), this.outputLineCount = this.positionMapper.getOutputLineCount()
        }, e.prototype.setWrappingColumn = function (e) {
            this.positionMapper.setWrappingColumn(e), this.outputLineCount = this.positionMapper.getOutputLineCount()
        }, e.prototype.getOutputLineCount = function () {
            return this.outputLineCount
        }, e.prototype.getInputStartOffsetOfOutputLineIndex = function (e) {
            return this.positionMapper.getInputOffsetOfOutputPosition(e, 0)
        }, e.prototype.getInputEndOffsetOfOutputLineIndex = function (e, t, n) {
            return n + 1 === this.outputLineCount ? e.getLineMaxColumn(t) - 1 : this.positionMapper.getInputOffsetOfOutputPosition(n + 1, 0)
        }, e.prototype.getOutputLineContent = function (e, t, n) {
            var i = this.getInputStartOffsetOfOutputLineIndex(n), o = this.getInputEndOffsetOfOutputLineIndex(e, t, n);
            return e.getLineContent(t).substring(i, o)
        }, e.prototype.getOutputLineMaxColumn = function (e, t, n) {
            return this.getOutputLineContent(e, t, n).length + 1
        }, e.prototype.getOutputLineTokens = function (e, t, n) {
            var i = this.getInputStartOffsetOfOutputLineIndex(n), o = this.getInputEndOffsetOfOutputLineIndex(e, t, n);
            return new a.FilteredLineTokens(e.getLineTokens(t, !0), i, o)
        }, e.prototype.getInputColumnOfOutputPosition = function (e, t) {
            return this.positionMapper.getInputOffsetOfOutputPosition(e, t - 1) + 1
        }, e.prototype.getOutputPositionOfInputPosition = function (e, t) {
            this.positionMapper.getOutputPositionOfInputOffset(t - 1, d);
            var n = d.outputLineIndex, i = d.outputOffset + 1;
            return new u.Position(e + n, i)
        }, e
    }(), h = function () {
        function e(e, t, n, i) {
            this.model = e, this.tabSize = n, this.wrappingColumn = i, this.linePositionMapperFactory = t, this.constructLines(), this.tmpIndexOfResult = {index: 0, remainder: 0}
        }

        return e.prototype.constructLines = function () {
            this.lines = [];
            for (var e, t, n = [], i = 0, o = this.model.getLineCount(); o > i; i++)t = this.linePositionMapperFactory.createLineMapper(this.model.getLineContent(i + 1), this.tabSize, this.wrappingColumn), e = new c(t), n[i] = e.getOutputLineCount(), this.lines[i] = e;
            this.prefixSumComputer = new s.PrefixSumComputer(n)
        }, e.prototype.setTabSize = function (e, t) {
            if (this.tabSize === e)return!1;
            this.tabSize = e;
            for (var n = 0; n < this.lines.length; n++) {
                this.lines[n].setTabSize(this.tabSize);
                var i = this.lines[n].getOutputLineCount();
                this.prefixSumComputer.changeValue(n, i)
            }
            return t(l.EventNames.ModelFlushedEvent, null), !0
        }, e.prototype.setWrappingColumn = function (e, t) {
            if (this.wrappingColumn === e)return!1;
            this.wrappingColumn = e;
            for (var n = 0; n < this.lines.length; n++) {
                this.lines[n].setWrappingColumn(this.wrappingColumn);
                var i = this.lines[n].getOutputLineCount();
                this.prefixSumComputer.changeValue(n, i)
            }
            return t(l.EventNames.ModelFlushedEvent, null), !0
        }, e.prototype.onModelFlushed = function (e) {
            this.constructLines(), e(l.EventNames.ModelFlushedEvent, null)
        }, e.prototype.onModelLinesDeleted = function (e, t, n) {
            var i = 1 === e ? 1 : this.prefixSumComputer.getAccumulatedValue(e - 2) + 1, o = this.prefixSumComputer.getAccumulatedValue(t - 1);
            this.lines.splice(e - 1, t - e + 1), this.prefixSumComputer.removeValues(e - 1, t - e + 1);
            var r = {fromLineNumber: i, toLineNumber: o};
            n(l.EventNames.LinesDeletedEvent, r)
        }, e.prototype.onModelLinesInserted = function (e, t, n, i) {
            for (var o, r, s, a = 1 === e ? 1 : this.prefixSumComputer.getAccumulatedValue(e - 2) + 1, u = 0, d = n.length - 1; d >= 0; d--)s = this.linePositionMapperFactory.createLineMapper(n[d], this.tabSize, this.wrappingColumn), o = new c(s), this.lines.splice(e - 1, 0, o), r = o.getOutputLineCount(), u += r, this.prefixSumComputer.insertValue(e - 1, r);
            var h = {fromLineNumber: a, toLineNumber: a + u - 1};
            i(l.EventNames.LinesInsertedEvent, h)
        }, e.prototype.onModelLineChanged = function (e, t, n) {
            var i = e - 1, o = this.lines[i].getOutputLineCount();
            this.lines[i].setLineText(t);
            var r = this.lines[i].getOutputLineCount(), s = !1, a = 0, u = -1, d = 0, c = -1, h = 0, p = -1;
            o > r ? (a = 1 === e ? 1 : this.prefixSumComputer.getAccumulatedValue(e - 2) + 1, u = a + r - 1, h = u + 1, p = h + (o - r) - 1, s = !0) : r > o ? (a = 1 === e ? 1 : this.prefixSumComputer.getAccumulatedValue(e - 2) + 1, u = a + o - 1, d = u + 1, c = d + (r - o) - 1, s = !0) : (a = 1 === e ? 1 : this.prefixSumComputer.getAccumulatedValue(e - 2) + 1, u = a + r - 1), this.prefixSumComputer.changeValue(i, r);
            var f, g, m, v;
            if (u >= a)for (var f = a; u >= f; f++)g = {lineNumber: f}, n(l.EventNames.LineChangedEvent, g);
            return c >= d && (m = {fromLineNumber: d, toLineNumber: c}, n(l.EventNames.LinesInsertedEvent, m)), p >= h && (v = {fromLineNumber: h, toLineNumber: p}, n(l.EventNames.LinesDeletedEvent, v)), s
        }, e.prototype.getOutputLineCount = function () {
            return this.prefixSumComputer.getTotalValue()
        }, e.prototype.getOutputLineContent = function (e) {
            this.prefixSumComputer.getIndexOf(e - 1, this.tmpIndexOfResult);
            var t = this.tmpIndexOfResult.index, n = this.tmpIndexOfResult.remainder;
            return this.lines[t].getOutputLineContent(this.model, t + 1, n)
        }, e.prototype.getOutputLineMaxColumn = function (e) {
            this.prefixSumComputer.getIndexOf(e - 1, this.tmpIndexOfResult);
            var t = this.tmpIndexOfResult.index, n = this.tmpIndexOfResult.remainder;
            return this.lines[t].getOutputLineMaxColumn(this.model, t + 1, n)
        }, e.prototype.getOutputLineTokens = function (e) {
            this.prefixSumComputer.getIndexOf(e - 1, this.tmpIndexOfResult);
            var t = this.tmpIndexOfResult.index, n = this.tmpIndexOfResult.remainder;
            return this.lines[t].getOutputLineTokens(this.model, t + 1, n)
        }, e.prototype.convertOutputPositionToInputPosition = function (e, t) {
            this.prefixSumComputer.getIndexOf(e - 1, this.tmpIndexOfResult);
            var n = this.tmpIndexOfResult.index, i = this.tmpIndexOfResult.remainder, o = this.lines[n].getInputColumnOfOutputPosition(i, t);
            return new u.Position(n + 1, o)
        }, e.prototype.convertInputPositionToOutputPosition = function (e, t) {
            var n = 1 + (1 === e ? 0 : this.prefixSumComputer.getAccumulatedValue(e - 2)), i = this.lines[e - 1].getOutputPositionOfInputPosition(n, t);
            return i
        }, e
    }();
    t.SplitLinesCollection = h
}), define("vs/editor/core/range", ["require", "exports", "vs/editor/core/position"], function (e, t, n) {
    "use strict";
    function i(e) {
        return e && "number" == typeof e.startLineNumber && "number" == typeof e.startColumn && "number" == typeof e.endLineNumber && "number" == typeof e.endColumn
    }

    function o(e) {
        return new a(e.startLineNumber, e.startColumn, e.endLineNumber, e.endColumn)
    }

    var r = n;
    t.isIRange = i;
    var s = function () {
        function e() {
        }

        return e.isEmpty = function (e) {
            return e.startLineNumber === e.endLineNumber && e.startColumn === e.endColumn
        }, e.containsPosition = function (e, t) {
            return t.lineNumber < e.startLineNumber || t.lineNumber > e.endLineNumber ? !1 : t.lineNumber === e.startLineNumber && t.column < e.startColumn ? !1 : t.lineNumber === e.endLineNumber && t.column > e.endColumn ? !1 : !0
        }, e.containsRange = function (e, t) {
            return t.startLineNumber < e.startLineNumber || t.endLineNumber < e.startLineNumber ? !1 : t.startLineNumber > e.endLineNumber || t.endLineNumber > e.endLineNumber ? !1 : t.startLineNumber === e.startLineNumber && t.startColumn < e.startColumn ? !1 : t.endLineNumber === e.endLineNumber && t.endColumn > e.endColumn ? !1 : !0
        }, e.intersectRanges = function (e, t) {
            var n = e.startLineNumber, i = e.startColumn, o = e.endLineNumber, r = e.endColumn, s = t.startLineNumber, u = t.startColumn, l = t.endLineNumber, d = t.endColumn;
            return s > n ? (n = s, i = u) : n === s && (i = Math.max(i, u)), o > l ? (o = l, r = d) : o === l && (r = Math.min(r, d)), n > o ? null : n === o && i > r ? null : new a(n, i, o, r)
        }, e.plusRange = function (e, t) {
            var n, i, o, r;
            return t.startLineNumber < e.startLineNumber ? (n = t.startLineNumber, i = t.startColumn) : t.startLineNumber === e.startLineNumber ? (n = t.startLineNumber, i = Math.min(t.startColumn, e.startColumn)) : (n = e.startLineNumber, i = e.startColumn), t.endLineNumber > e.endLineNumber ? (o = t.endLineNumber, r = t.endColumn) : t.endLineNumber === e.endLineNumber ? (o = t.endLineNumber, r = Math.max(t.endColumn, e.endColumn)) : (o = e.endLineNumber, r = e.endColumn), new a(n, i, o, r)
        }, e.equalsRange = function (e, t) {
            return!!e && !!t && e.startLineNumber === t.startLineNumber && e.startColumn === t.startColumn && e.endLineNumber === t.endLineNumber && e.endColumn === t.endColumn
        }, e.compareRangesUsingStarts = function (e, t) {
            return e.startLineNumber === t.startLineNumber ? e.startColumn === t.startColumn ? e.endLineNumber === t.endLineNumber ? e.endColumn - t.endColumn : e.endLineNumber - t.endLineNumber : e.startColumn - t.startColumn : e.startLineNumber - t.startLineNumber
        }, e.compareRangesUsingEnds = function (e, t) {
            return e.endLineNumber === t.endLineNumber ? e.endColumn === t.endColumn ? e.startLineNumber === t.startLineNumber ? e.startColumn - t.startColumn : e.startLineNumber - t.startLineNumber : e.endColumn - t.endColumn : e.endLineNumber - t.endLineNumber
        }, e
    }();
    t.RangeUtils = s;
    var a = function () {
        function e(e, t, n, i) {
            e > n || e === n && t > i ? (this.startLineNumber = n, this.startColumn = i, this.endLineNumber = e, this.endColumn = t) : (this.startLineNumber = e, this.startColumn = t, this.endLineNumber = n, this.endColumn = i)
        }

        return e.prototype.isEmpty = function () {
            return s.isEmpty(this)
        }, e.prototype.containsPosition = function (e) {
            return s.containsPosition(this, e)
        }, e.prototype.containsRange = function (e) {
            return s.containsRange(this, e)
        }, e.prototype.plusRange = function (e) {
            return s.plusRange(this, e)
        }, e.prototype.equalsRange = function (e) {
            return s.equalsRange(this, e)
        }, e.prototype.getEndPosition = function () {
            return new r.Position(this.endLineNumber, this.endColumn)
        }, e.prototype.getStartPosition = function () {
            return new r.Position(this.startLineNumber, this.startColumn)
        }, e.prototype.cloneRange = function () {
            return new e(this.startLineNumber, this.startColumn, this.endLineNumber, this.endColumn)
        }, e.prototype.toString = function () {
            return"[" + this.startLineNumber + "," + this.startColumn + " -> " + this.endLineNumber + "," + this.endColumn + "]"
        }, e.prototype.setEndPosition = function (t, n) {
            return new e(this.startLineNumber, this.startColumn, t, n)
        }, e.prototype.setStartPosition = function (t, n) {
            return new e(t, n, this.endLineNumber, this.endColumn)
        }, e
    }();
    t.Range = a, t.create = o
}), define("vs/editor/core/command/shiftCommand", ["require", "exports", "vs/editor/core/range"], function (e, t, n) {
    "use strict";
    var i = n, o = function () {
        function e(e, t, n) {
            this._configuration = e, this._isUnshift = t, this._selection = n
        }

        return e.prototype.getEditOperations = function (e, t) {
            var n = this._selection.startLineNumber, o = this._selection.endLineNumber;
            1 === this._selection.endColumn && n !== o && (o -= 1);
            var r;
            if (this._isUnshift) {
                var s = this._configuration.editor.tabSize;
                for (r = n; o >= r; r++) {
                    var a, u = e.getLineContent(r);
                    if ("	" === u.charAt(0))a = 1; else for (a = 0; a < u.length && s > a; a++) {
                        if ("	" === u.charAt(a)) {
                            a++;
                            break
                        }
                        if (" " !== u.charAt(a))break
                    }
                    0 !== a && t.addEditOperation(new i.Range(r, 1, r, a + 1), null)
                }
            } else {
                var l = this._configuration.getOneIndent();
                for (r = n; o >= r; r++)t.addEditOperation(new i.Range(r, 1, r, 1), l)
            }
            this._selectionId = t.trackSelection(this._selection)
        }, e.prototype.computeCursorState = function (e, t) {
            return t.getTrackedSelection(this._selectionId)
        }, e
    }();
    t.ShiftCommand = o
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/lines/viewLines", ["require", "exports", "vs/editor/core/view/lines/viewLine", "vs/editor/core/view/lines/viewLayer", "vs/editor/core/view/viewContext", "vs/editor/core/range", "vs/base/time/schedulers"], function (e, t, n, i, o, r, s) {
    "use strict";
    var a = n, u = i, l = o, d = r, c = s, h = function () {
        function e(e) {
            this.visibleRanges = e, this.lastValidIndex = this.visibleRanges.length - 1, this.index = -1
        }

        return e.prototype.next = function () {
            return this.index === this.lastValidIndex ? !1 : (this.index++, !0)
        }, e.prototype.getTop = function () {
            return this.visibleRanges[this.index].top
        }, e.prototype.getLeft = function () {
            return this.visibleRanges[this.index].left
        }, e.prototype.getWidth = function () {
            return this.visibleRanges[this.index].width
        }, e.prototype.getHeight = function () {
            return this.visibleRanges[this.index].height
        }, e.prototype.toArray = function () {
            return this.visibleRanges
        }, e
    }(), p = function (e) {
        function t(t, n) {
            var i = this;
            e.call(this, t, n), this.domNode.className = l.ClassNames.VIEW_LINES, this._maxLineWidth = 0, this._asyncUpdateLineWidths = new c.RunOnceScheduler(function () {
                i._updateLineWidths()
            }, 200), this._currentVisibleRange = new d.Range(1, 1, 1, 1), this._lastCursorRevealRangeHorizontallyEvent = null, this._context.addEventHandler(this)
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this._context.removeEventHandler(this), this._asyncUpdateLineWidths.dispose(), e.prototype.dispose.call(this)
        }, t.prototype.onConfigurationChanged = function (t) {
            var n = e.prototype.onConfigurationChanged.call(this, t);
            return t.wrappingColumnChanged && (this._maxLineWidth = 0), n
        }, t.prototype.onLayoutChanged = function (t) {
            var n = e.prototype.onLayoutChanged.call(this, t);
            return this._maxLineWidth = 0, n
        }, t.prototype.onModelFlushed = function () {
            var t = e.prototype.onModelFlushed.call(this);
            return this._maxLineWidth = 0, t
        }, t.prototype.onModelDecorationsChanged = function (t) {
            e.prototype.onModelDecorationsChanged.call(this, t);
            for (var n = 0; n < this._lines.length; n++)this._lines[n].onModelDecorationsChanged();
            return!0
        }, t.prototype.onCursorRevealRange = function (e) {
            var t = this.computeScrollTopToRevealRange(this._layoutProvider.getCurrentViewport(), e.range, e.revealVerticalInCenter);
            return e.revealHorizontal && (this._lastCursorRevealRangeHorizontallyEvent = e), this._layoutProvider.setScrollTop(t), !0
        }, t.prototype.getPositionFromDOMInfo = function (e, t) {
            var n = this._getLineNumberFromDOMInfo(e);
            if (-1 === n)return null;
            if (1 === this._context.model.getLineMaxColumn(n))return{lineNumber: n, column: 1};
            var i = n - this._rendLineNumberStart;
            if (0 > i || i >= this._lines.length)return null;
            var o = this._lines[i].getColumnOfNodeOffset(n, e, t);
            return{lineNumber: n, column: o}
        }, t.prototype._getLineNumberFromDOMInfo = function (e) {
            for (; e && 1 === e.nodeType;) {
                if (e.className === l.ClassNames.VIEW_LINE)return parseInt(e.getAttribute("lineNumber"), 10);
                e = e.parentElement
            }
            return-1
        }, t.prototype.getLineWidth = function (e) {
            var t = e - this._rendLineNumberStart;
            return 0 > t || t >= this._lines.length ? -1 : this._lines[t].getWidth()
        }, t.prototype.getInnerSpansTopOffset = function (e) {
            var t = e - this._rendLineNumberStart;
            return 0 > t || t >= this._lines.length ? 0 : this._lines[t].getInnerSpansTopOffset()
        }, t.prototype.visibleRangesForRange2 = function (e, n, i, o) {
            if (this.shouldRender)return null;
            var r = e.endLineNumber;
            if (e = d.RangeUtils.intersectRanges(e, this._currentVisibleRange), !e)return null;
            var s, a, u, l, c, p = [], f = this._context.configuration.editor.lineHeight, g = this.domNode.getBoundingClientRect(), m = g.top, v = g.left;
            for (a = e.startLineNumber; a <= e.endLineNumber; a++)if (u = a - this._rendLineNumberStart, !(0 > u || u >= this._lines.length) && (l = a === e.startLineNumber ? e.startColumn : 1, c = a === e.endLineNumber ? e.endColumn : this._context.model.getLineMaxColumn(a), s = this._lines[u].getVisibleRangesForRange(a, l, c, m, i, v, this._guardElement), s && s.length > 0)) {
                for (var y = 0, b = s.length; b > y; y++)s[y].top = (0 | s[y].top / f + .5) * f + n, s[y].height = f;
                o && r > a && (s[s.length - 1].width += t.LINE_FEED_WIDTH), p = p.concat(s)
            }
            return 0 === p.length ? null : new h(p)
        }, t.prototype._createLine = function (e) {
            return a.createLine(this._context, e)
        }, t.prototype._renderAndUpdateLineHeights = function (t, n) {
            e.prototype._renderLines.call(this, t, n);
            var i = t.visibleRangesDeltaTop + "px";
            if (this.domNode.style.top !== i && (this.domNode.style.top = i), this._lastCursorRevealRangeHorizontallyEvent) {
                var o = this.computeScrollLeftToRevealRange(this._lastCursorRevealRangeHorizontallyEvent.range);
                this._lastCursorRevealRangeHorizontallyEvent = null;
                var r = this._context.configuration.getWrappingColumn(), s = 0 === r;
                s || this._ensureMaxLineWidth(o.maxHorizontalOffset), this._layoutProvider.setScrollLeft(o.scrollLeft)
            }
        }, t.prototype._updateLineWidths = function () {
            var e, t, n = 1;
            for (e = 0; e < this._lines.length; e++)t = this._lines[e].getWidth(), n = Math.max(n, t);
            this._ensureMaxLineWidth(n)
        }, t.prototype.render = function (e) {
            var t = this._layoutProvider.getLinesViewportData();
            return this.shouldRender ? (this.shouldRender = !1, this._renderAndUpdateLineHeights(t, e), this._asyncUpdateLineWidths.schedule(), this._currentVisibleRange = new d.Range(0 + this._rendLineNumberStart, 1, this._lines.length - 1 + this._rendLineNumberStart, this._context.model.getLineMaxColumn(this._lines.length - 1 + this._rendLineNumberStart)), t.visibleRange = this._currentVisibleRange, t) : (t.visibleRange = this._currentVisibleRange, t)
        }, t.prototype._ensureMaxLineWidth = function (e) {
            this._maxLineWidth < e && (this._maxLineWidth = e, this._layoutProvider.onMaxLineWidthChanged(this._maxLineWidth))
        }, t.prototype.computeScrollTopToRevealRange = function (e, t, n) {
            var i, o, r = e.top, s = e.height, a = r + s;
            i = this._layoutProvider.getVerticalOffsetForLineNumber(t.startLineNumber), o = this._layoutProvider.getVerticalOffsetForLineNumber(t.endLineNumber) + this._layoutProvider.heightInPxForLine(t.endLineNumber) + this._context.configuration.editor.lineHeight;
            var u;
            if (n) {
                var l = (i + o) / 2;
                u = Math.max(0, l - s / 2)
            } else u = this.computeMinimumScrolling(r, a, i, o);
            return u
        }, t.prototype.computeScrollLeftToRevealRange = function (e) {
            var n = 0;
            if (e.startLineNumber !== e.endLineNumber)return{scrollLeft: 0, maxHorizontalOffset: n};
            var i = this._layoutProvider.getCurrentViewport(), o = i.left, r = o + i.width, s = this.visibleRangesForRange2(e, 0, 0, !1), a = Number.MAX_VALUE, u = 0;
            if (!s)return{scrollLeft: o, maxHorizontalOffset: n};
            for (; s.next();)s.getLeft() < a && (a = s.getLeft()), s.getLeft() + s.getWidth() > u && (u = s.getLeft() + s.getWidth());
            n = u, a = Math.max(0, a - t.HORIZONTAL_EXTRA_PX), u += t.HORIZONTAL_EXTRA_PX;
            var l = this.computeMinimumScrolling(o, r, a, u);
            return{scrollLeft: l, maxHorizontalOffset: n}
        }, t.prototype.computeMinimumScrolling = function (e, t, n, i) {
            var o = t - e, r = i - n;
            return o > r ? e > n ? n : i > t ? Math.max(0, i - o) : e : n
        }, t.LINE_FEED_WIDTH = 10, t.HORIZONTAL_EXTRA_PX = 30, t
    }(u.ViewLayer);
    t.ViewLines = p
}), define("vs/editor/core/view/model/viewModelDecorations", ["require", "exports", "vs/editor/core/range", "vs/editor/core/view/viewContext"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function () {
        function e(e, t, n) {
            this.editorId = e, this.configuration = t, this.converter = n, this.decorations = []
        }

        return e.prototype.dispose = function () {
            this.converter = null, this.decorations = null
        }, e.compareDecorations = function (e, t) {
            return o.RangeUtils.compareRangesUsingStarts(e.range, t.range)
        }, e.prototype.reset = function (t) {
            var n, i, o, r, s = t.getAllDecorations(this.editorId, this.configuration.editor.readOnly);
            for (this.decorations = [], n = 0, i = s.length; i > n; n++)o = s[n], r = {id: o.id, options: o.options, ownerId: o.ownerId, modelRange: o.range, range: this.converter.convertModelRangeToViewRange(o.range)}, this.decorations[n] = r;
            this.decorations.sort(e.compareDecorations)
        }, e.prototype.onModelDecorationsChanged = function (t, n) {
            var i, o, s, a = !1, u = {}, l = {}, d = this.configuration.editor.readOnly;
            for (o = 0, s = t.addedOrChangedDecorations.length; s > o; o++)i = t.addedOrChangedDecorations[o], d && i.isForValidation || i.ownerId && i.ownerId !== this.editorId || (l[i.id] = i);
            for (o = 0, s = t.removedDecorations.length; s > o; o++)u[t.removedDecorations[o]] = !0;
            var c, h = {};
            for (o = 0, s = this.decorations.length; s > o; o++)c = this.decorations[o], l.hasOwnProperty(c.id) && (h[c.id] = !0, i = l[c.id], c.options = i.options, c.modelRange = i.range, c.range = this.converter.convertModelRangeToViewRange(i.range), a = !0), u.hasOwnProperty(c.id) && (this.decorations.splice(o, 1), s--, o--, a = !0);
            var p;
            for (p in l)!h.hasOwnProperty(p) && l.hasOwnProperty(p) && (i = l[p], c = {id: i.id, options: i.options, ownerId: i.ownerId, modelRange: i.range, range: this.converter.convertModelRangeToViewRange(i.range)}, this.decorations.push(c), a = !0);
            if (a) {
                this.decorations.sort(e.compareDecorations);
                var f = null;
                n(r.EventNames.DecorationsChangedEvent, f)
            }
        }, e.prototype.onLineMappingChanged = function (t) {
            var n, i, s, a, u = this.decorations, l = !1;
            for (i = 0, a = u.length; a > i; i++)n = u[i], s = this.converter.convertModelRangeToViewRange(n.modelRange), l || o.RangeUtils.equalsRange(s, n.range) || (l = !0), n.range = s;
            if (l) {
                this.decorations.sort(e.compareDecorations);
                var d = null;
                t(r.EventNames.DecorationsChangedEvent, d)
            }
        }, e.prototype.getAllDecorations = function () {
            return this.decorations
        }, e.prototype.getInlineDecorations = function (e) {
            return this.getDecorationsInLines(e, e, !0)
        }, e.prototype.getDecorationsInRange = function (e) {
            return this.getDecorationsInLines(e.startLineNumber, e.endLineNumber, !1)
        }, e.prototype.getDecorationsInLines = function (e, t, n) {
            var i, o, r, s, a = [], u = 0, l = this.decorations;
            for (r = 0, s = l.length; s > r && (i = l[r], o = i.range, !(o.startLineNumber > t)); r++)o.endLineNumber < e || (!n || i.options.inlineClassName) && (a[u++] = i);
            return a
        }, e
    }();
    t.ViewModelDecorations = s
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/base/performance/timer", ["require", "exports", "vs/base/env", "vs/base/eventEmitter", "vs/nls!vs/editor/editor.main"], function (e, t, n, i, o) {
    "use strict";
    function r(e, t) {
        return g.start(e, t)
    }

    function s() {
        return g
    }

    var a = n, u = i, l = o, d = !!self.msWriteProfilerMark;
    !function (e) {
        e[e.EDITOR = 0] = "EDITOR", e[e.LANGUAGES = 1] = "LANGUAGES", e[e.WORKER = 2] = "WORKER", e[e.WORKBENCH = 3] = "WORKBENCH"
    }(t.Topic || (t.Topic = {}));
    var c = t.Topic, h = function () {
        function e() {
        }

        return e.prototype.start = function () {
            return this
        }, e.prototype.stop = function () {
        }, e.prototype.timeTaken = function () {
            return-1
        }, e
    }();
    t.NullTimerEvent = h;
    var p = function () {
        function e(e, t, n, i) {
            if (this.timeKeeper = e, this.name = t, this.topic = n, this.stopTime = null, i)return this.startTime = i, void 0;
            if (this.startTime = (new Date).getTime(), d) {
                var o = ["Monaco", this.topic, this.name, "start"];
                self.msWriteProfilerMark(o.join("|"))
            }
        }

        return e.prototype.start = function (e) {
            if (this.stopTime)throw new Error(l.localize("vs_base_performance_timer", 0));
            return this.timeKeeper.start(this.topic, this.name + "." + e)
        }, e.prototype.stop = function (e) {
            if (null === this.stopTime) {
                if (e)return this.stopTime = e, void 0;
                if (this.stopTime = (new Date).getTime(), this.timeKeeper.emit("eventStop", this), d) {
                    var t = ["Monaco", this.topic, this.name, "stop"];
                    self.msWriteProfilerMark(t.join("|"))
                }
            }
        }, e.prototype.timeTaken = function () {
            return this.stopTime ? this.stopTime - this.startTime : -1
        }, e
    }();
    t.TimerEvent = p;
    var f = function (e) {
        function n() {
            e.call(this), this.timeoutId = null, this.collectedEvents = [], this.eventCacheLimit = 1e3, this.maxTimerLength = 6e4, this.cleanupInterval = 12e4
        }

        return __extends(n, e), n.prototype.enabled = function () {
            return a.enablePerformanceEvents
        }, n.prototype.start = function (e, n) {
            if (this.enabled() === !1)return t.nullEvent;
            e === c.EDITOR ? e = "Editor" : e === c.LANGUAGES ? e = "Languages" : e === c.WORKER ? e = "Worker" : e === c.WORKBENCH && (e = "Workbench");
            var i = new p(this, n, e);
            return this.addEvent(i), this.cleanupTimers(), i
        }, n.prototype.addEvent = function (e) {
            e.id = n.EVENT_ID, n.EVENT_ID++, this.collectedEvents.push(e), this.emit("eventStart", e), this.collectedEvents.length > this.eventCacheLimit && this.collectedEvents.shift()
        }, n.prototype.cleanupTimers = function () {
            var e = this;
            null === this.timeoutId && (this.timeoutId = setTimeout(function () {
                var t = Date.now();
                e.collectedEvents.forEach(function (n) {
                    !n.stopTime && t - n.startTime >= e.maxTimerLength && n.stop()
                })
            }, this.cleanupInterval))
        }, n.prototype.dispose = function () {
            clearTimeout(this.timeoutId), e.prototype.dispose.call(this)
        }, n.prototype.getCollectedEvents = function () {
            return this.collectedEvents.slice(0)
        }, n.prototype.clearCollectedEvents = function () {
            this.collectedEvents = []
        }, n.prototype.setInitialCollectedEvents = function (e, t) {
            var i = this;
            this.enabled() !== !1 && (t && (n.PARSE_TIME = t), e.forEach(function (e) {
                var t = new p(i, e.name, e.topic, e.startTime);
                t.stop(e.stopTime), i.addEvent(t)
            }))
        }, n.EVENT_ID = 1, n.PARSE_TIME = (new Date).getTime(), n
    }(u.EventEmitter);
    t.TimeKeeper = f;
    var g = new f;
    t.nullEvent = new h, t.start = r, t.getTimeKeeper = s
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/platform/services", ["require", "exports", "vs/base/lib/winjs.base", "vs/base/async", "vs/base/strings", "vs/base/network", "vs/base/performance/timer", "vs/base/objects"], function (e, t, n, i, o, r, s, a) {
    "use strict";
    var u = n, l = i, d = o, c = r, h = s, p = a, f = function () {
        function e(e, t, n) {
            "undefined" == typeof n && (n = {}), this.workspace = e, this.configuration = t, this.options = n
        }

        return e.prototype.getWorkspace = function () {
            return this.workspace
        }, e.prototype.getConfiguration = function () {
            return this.configuration
        }, e.prototype.getOptions = function () {
            return this.options
        }, e
    }();
    t.BaseContextService = f;
    var g = function () {
        function e() {
        }

        return e.prototype.injectTelemetryService = function (e) {
            this.telemetryService = e
        }, e.prototype.injectContextService = function (e) {
            if (!this.contextService)if (this.contextService = e, this.contextService.getConfiguration()) {
                this.origin = this.contextService.getConfiguration().paths.PUBLIC_WORKSPACE_URL;
                var t = new c.URL(this.origin).getPath();
                t && t.length > 0 && (this.origin = this.origin.substring(0, this.origin.length - t.length + 1)), d.endsWith(this.origin, "/") || (this.origin += "/")
            } else this.origin = "/"
        }, e.prototype.getRequestUrl = function (e, t, n) {
            var i = this.contextService.getWorkspace();
            if (i[e]) {
                var o = i[e] + d.normalizePath(t);
                return n ? this.origin + d.ltrim(o, "/") : o
            }
            return null
        }, e.prototype.getPath = function (e, t) {
            var n = this.getRequestUrl(e, "/", !0);
            if (!n)return null;
            var i = t.toExternal().indexOf(n);
            return 0 === i ? t.toExternal().substr(n.length - 1) : null
        }, e.prototype.getAdditionalHeaders = function () {
            return this.contextService.getConfiguration().additionalHeaders || {}
        }, e.prototype.establishPrivateChannel = function () {
            return u.Promise.wrapError("Not Implemented")
        }, e.prototype.makeRequest = function (e) {
            var t = h.nullEvent;
            return e.headers = p.mixin(e.headers, this.getAdditionalHeaders()), this.telemetryService && (t = this.telemetryService.start("WorkbenchXHR", {url: e.url}, !1)), l.always(u.xhr(e), function (e) {
                t.data && (t.data.status = e.status), t.stop()
            })
        }, e.prototype.makeChunkedRequest = function (e) {
            function t(e) {
                for (var t, n, i = 0, o = {}; ;) {
                    if (t = e.indexOf(":", i), n = e.indexOf("\n", t + 1), 0 > t || 0 > n)break;
                    o[e.substring(i, t).trim()] = e.substring(t + 1, n).trim(), i = n + 1
                }
                return o
            }

            function n(e) {
                if (d)return o("canceled"), void 0;
                var n = e.indexOf("\r\n\r\n", a);
                if (-1 !== n) {
                    for (var i = []; -1 !== n;) {
                        var s = t(e.substring(a, n)), u = Number(s["Content-Length"]);
                        if (n + 4 + u > e.length)break;
                        var c = {header: s, body: e.substr(n + 4, u)};
                        l.push(c), i.push(c), a = n + 4 + u, n = e.indexOf("\r\n\r\n", a)
                    }
                    r(i)
                }
            }

            var i, o, r, s = this, a = 0, l = [], d = !1;
            return new u.Promise(function (t, a, u) {
                i = t, o = a, r = u, s.makeRequest(e).done(function (e) {
                    n(e.responseText), i(l)
                }, function (e) {
                    o(e)
                }, function (e) {
                    3 === e.readyState && n(e.responseText)
                })
            }, function () {
                d = !0
            })
        }, e
    }();
    t.BaseRequestService = g;
    var m = function () {
        function e(e) {
            this._selection = e || []
        }

        return Object.defineProperty(e.prototype, "selection", {get: function () {
            return this._selection
        }, enumerable: !0, configurable: !0}), e.prototype.isEmpty = function () {
            return 0 === this._selection.length
        }, e.EMPTY = new e([]), e
    }();
    t.Selection = m;
    var v = function (e) {
        function t() {
            e.apply(this, arguments)
        }

        return __extends(t, e), t.prototype.toArray = function () {
            return this.selection
        }, t
    }(m);
    t.StructuredSelection = v, function (e) {
        e[e.Info = 0] = "Info", e[e.Warning = 1] = "Warning", e[e.Error = 2] = "Error"
    }(t.Severity || (t.Severity = {})), t.Severity;
    var y = function () {
        function e() {
        }

        return e.SERVICE_CHANGED = "service-changed", e.SET_CHANGED = "set-changed", e.SET_ADDED = "set-added", e.SET_REMOVED = "set-removed", e
    }();
    t.MarkerServiceConstants = y;
    var b = function () {
        function e() {
        }

        return e.UPDATED = "update", e.FILE_CHANGE = "fileChange", e
    }();
    t.ConfigurationServiceEventTypes = b, t.ResourceEvents = {ADDED: "resource.added", REMOVED: "resource.removed", CHANGED: "resource.changed"}
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/platform/platform", ["require", "exports", "vs/base/lib/winjs.base", "vs/base/types", "vs/base/assert", "vs/platform/services"], function (e, t, n, i, o, r) {
    "use strict";
    var s = n, a = i, u = o, l = function () {
        function e(e) {
            this.ctor = e
        }

        return e.prototype.createNew = function () {
            for (var e = [], t = 0; t < arguments.length - 0; t++)e[t] = arguments[t + 0];
            e.unshift(this.ctor);
            var n = a.create.apply(this, e);
            return this.assertType(n), n
        }, e.prototype.assertType = function () {
        }, e.prototype.describes = function (e) {
            return e === this.ctor || e instanceof this.ctor
        }, e.prototype.getCtor = function () {
            return this.ctor
        }, e
    }();
    t.BaseDescriptor = l;
    var d = function () {
        function t(e, t, n) {
            "undefined" == typeof n && (n = []), u.ok(!a.isUndefinedOrNull(e), "deferred desc must have a moduleId"), u.ok(!a.isUndefinedOrNull(t), "deferred desc must have a ctorName"), this.moduleId = e, this.ctorName = t, this.payload = n
        }

        return t.prototype.getModuleId = function () {
            return this.moduleId
        }, t.prototype.getCtorName = function () {
            return this.ctorName
        }, t.prototype.getPayload = function () {
            return this.payload
        }, t.prototype.loadAndCreate = function (t) {
            var n = this;
            return new s.Promise(function (i) {
                e([n.moduleId], function (e) {
                    try {
                        var o = n.doCreate(e, t);
                        i(o)
                    } catch (r) {
                        r(r)
                    }
                })
            })
        }, t.prototype.syncLoadAndCreate = function (t) {
            var n, i = null;
            try {
                n = e(this.moduleId)
            } catch (o) {
                return null
            }
            return i = this.doCreate(n, t)
        }, t.prototype.doCreate = function (e, t) {
            if (a.isUndefinedOrNull(e[this.ctorName]))throw new Error("module " + this.moduleId + " does not export " + this.ctorName);
            var n = this.payload.slice(0);
            n.unshift(e[this.ctorName]);
            var i = a.create.apply(null, n);
            return t && t.injectTo(i), i
        }, t.prototype.equals = function (e) {
            return e ? this.moduleId === e.moduleId && this.ctorName === e.ctorName : !1
        }, t
    }();
    t.DeferredDescriptor = d;
    var c = function (t) {
        function n(e, n, i, o) {
            t.call(this, n, i, o), this.entryModuleIds = a.isString(e) ? [e] : e
        }

        return __extends(n, t), n.prototype.loadAndCreate = function (t) {
            var n = this;
            return new s.Promise(function (i, o) {
                e(n.entryModuleIds, function () {
                    e([n.getModuleId()], function (e) {
                        a.isUndefinedOrNull(e[n.getCtorName()]) && o(new Error("module " + n.getModuleId() + " does not export " + n.getCtorName()));
                        var r = n.getPayload().slice(0);
                        r.unshift(e[n.getCtorName()]);
                        var s = a.create.apply(null, r);
                        t && t.injectTo(s), i(s)
                    })
                })
            })
        }, n.prototype.syncLoadAndCreate = function () {
            throw new Error("Unsupported")
        }, n
    }(d);
    t.EntryPointAwareDeferredDescriptor = c;
    var h = function () {
        function e() {
            this.data = {}
        }

        return e.prototype.add = function (e, t) {
            u.ok(a.isString(e)), u.ok(a.isObject(t)), u.ok(!this.data.hasOwnProperty(e), "There is already an extension with this id"), this.data[e] = t
        }, e.prototype.knows = function (e) {
            return this.data.hasOwnProperty(e)
        }, e.prototype.as = function (e) {
            return this.data[e] || null
        }, e
    }();
    t.Registry = new h
}), define("vs/platform/configurationRegistry", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/platform/platform"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i;
    t.Extensions = {Configuration: "base.contributions.configuration"};
    var s = function () {
        function e() {
            this.configurationContributors = [], this.masterConfiguration = {id: "configurationFile", title: o.localize("vs_platform_configurationRegistry", 0), description: o.localize("vs_platform_configurationRegistry", 1), type: "object", properties: {type: {type: "string", description: o.localize("vs_platform_configurationRegistry", 2)}, languages: {type: "object", description: o.localize("vs_platform_configurationRegistry", 3), properties: {}}}}
        }

        return e.prototype.registerConfiguration = function (e) {
            this.configurationContributors.push(e), this.registerConfigurationNode(this.masterConfiguration, e.id.split("/"), e.id)
        }, e.prototype.registerConfigurationNode = function (e, t, n) {
            if (1 === t.length)e.properties[t[0]] = {type: "ref", $ref: n}; else {
                var i = t.shift();
                e.properties[i] || (e.properties[i] = {type: "object", properties: {}}), this.registerConfigurationNode(e.properties[i], t, n)
            }
        }, e.prototype.getConfigurations = function () {
            return this.configurationContributors.slice(0)
        }, e.prototype.getConfigurationSchemas = function () {
            var e = this.getConfigurations();
            return e.push(this.masterConfiguration), e
        }, e
    }();
    r.Registry.add(t.Extensions.Configuration, new s)
}), define("vs/base/worker/workerClient", ["require", "exports", "vs/base/lib/winjs.base", "vs/base/dom/dom", "vs/base/performance/timer"], function (e, t, n, i, o) {
    "use strict";
    function r(t, n) {
        return e.toUrl("./" + t + "?" + encodeURIComponent(n))
    }

    var s = n, a = i, u = o;
    t.WorkerMain = "workerMain.js";
    var l = self.MonacoEnvironment && self.MonacoEnvironment.getWorkerUrl ? self.MonacoEnvironment.getWorkerUrl : r, d = function () {
        function e(e, n, i) {
            this.id = e, this.worker = new Worker(l(t.WorkerMain, n)), this.worker.onmessage = function (e) {
                i(JSON.parse(e.data))
            }
        }

        return e.prototype.getId = function () {
            return this.id
        }, e.prototype.postMessage = function (e) {
            this.worker.postMessage(JSON.stringify(e))
        }, e.prototype.terminate = function () {
            this.worker.terminate()
        }, e
    }(), c = function () {
        function t(t, n) {
            var i = this;
            this.id = t, this.loaded = !1, this.beforeLoadMessages = [], this.iframe = document.createElement("iframe"), this.iframe.id = this.iframeId(), this.iframe.src = e.toUrl("./workerMainCompatibility.html"), this.iframe.frameborder = this.iframe.height = this.iframe.width = "0", this.iframe.style.display = "none", a.addListener(this.iframe, "load", function () {
                return i.onLoaded()
            }), this.onMessage = function (e) {
                var t = null;
                try {
                    t = JSON.parse(e.data)
                } catch (i) {
                }
                t && n(t)
            }, a.addListener(window, "message", this.onMessage), document.body.appendChild(this.iframe)
        }

        return t.prototype.iframeId = function () {
            return"worker_iframe_" + this.id
        }, t.prototype.onLoaded = function () {
            for (this.loaded = !0; this.beforeLoadMessages.length > 0;)this.postMessage(this.beforeLoadMessages.shift())
        }, t.prototype.getId = function () {
            return this.id
        }, t.prototype.postMessage = function (e) {
            this.loaded === !0 ? window.frames[this.iframeId()].postMessage(JSON.stringify(e), "*") : this.beforeLoadMessages.push(e)
        }, t.prototype.terminate = function () {
            window.removeEventListener("message", this.onMessage), window.frames[this.iframeId()].close()
        }, t
    }();
    !function () {
        function t(t, n) {
            var i = this;
            this.id = t, this.queuedMessages = [], this.messageHandler = function (e) {
                i.queuedMessages.push(e)
            }, e(["vs/base/worker/workerServer"], function (e) {
                for (var t = new e.WorkerServer(function (e) {
                    n(e)
                }); i.queuedMessages.length > 0;)t.onmessage(i.queuedMessages.shift());
                i.messageHandler = function (e) {
                    t.onmessage(e)
                }
            })
        }

        return t.prototype.getId = function () {
            return this.id
        }, t.prototype.postMessage = function (e) {
            this.messageHandler(e)
        }, t.prototype.terminate = function () {
            this.queuedMessages = null, this.messageHandler = null
        }, t
    }();
    var h = function () {
        function e(e) {
            this.label = e
        }

        return e.prototype.create = function (e, t) {
            var n = null;
            try {
                n = new d(e, this.label, t)
            } catch (i) {
                n = new c(e, t)
            }
            return n
        }, e
    }();
    t.DefaultWorkerFactory = h;
    var p = function () {
        function e(t, n) {
            var i = this;
            this.lastMessageId = 0, this.promises = {}, this.messageHandlers = {}, this.messagesQueue = [], this.processQueueTimeout = -1, this.waitingForWorkerReply = !1, this.lastTimerEvent = null, this.worker = t.create(++e.LAST_WORKER_ID, function (e) {
                return i.onmessage(e)
            }), this.onModuleLoaded = this.sendMessage("$initialize", {id: this.worker.getId(), moduleId: n}), this.onModuleLoaded.then(null, function () {
                return i.onError("Worker failed to load " + n)
            })
        }

        return e.prototype.request = function (e, t, n) {
            var i = this;
            if ("$" === e.charAt(0))throw new Error("Illegal requestName: " + e);
            var o, r = !1;
            return new s.Promise(function (s, a, u) {
                i.onModuleLoaded.then(function () {
                    r || (o = i.sendMessage(e, t, n).then(s, a, u))
                }, a, u)
            }, function () {
                o ? o.cancel() : r = !0
            })
        }, e.prototype.destroy = function () {
            var e = Object.keys(this.promises);
            if (e.length > 0) {
                console.warn("Terminating a worker with " + e.length + " pending promises:"), console.warn(this.promises);
                for (var t in this.promises)e.hasOwnProperty(t) && this.promises[t].error("Worker forcefully terminated")
            }
            this.worker.terminate()
        }, e.prototype.addMessageHandler = function (e, t) {
            this.messageHandlers[e] = t
        }, e.prototype.removeMessageHandler = function (e) {
            delete this.messageHandlers[e]
        }, e.prototype.sendMessage = function (e, t, n) {
            "undefined" == typeof n && (n = (new Date).getTime());
            var i, o, r, a = this, u = {id: ++this.lastMessageId, type: e, timestamp: n, payload: t}, l = new s.Promise(function (e, t, n) {
                i = e, o = t, r = n
            }, function () {
                a.removeMessage(u.id)
            });
            return this.promises[u.id] = {complete: i, error: o, progress: r, type: e, payload: t}, this.enqueueMessage(u), l
        }, e.prototype.enqueueMessage = function (e) {
            var t, n = -1;
            for (t = this.messagesQueue.length - 1; t >= 0; t--)if (this.messagesQueue[t].timestamp <= e.timestamp) {
                n = t;
                break
            }
            this.messagesQueue.splice(n + 1, 0, e), this.processMessagesQueue()
        }, e.prototype.removeMessage = function (e) {
            for (var t = 0, n = this.messagesQueue.length; n > t; t++)if (this.messagesQueue[t].id === e)return this.promises.hasOwnProperty(String(e)) && delete this.promises[String(e)], this.messagesQueue.splice(t, 1), this.processMessagesQueue(), void 0
        }, e.prototype.processMessagesQueue = function () {
            var e = this;
            if (-1 !== this.processQueueTimeout && (clearTimeout(this.processQueueTimeout), this.processQueueTimeout = -1), 0 !== this.messagesQueue.length && !this.waitingForWorkerReply) {
                var t = this.messagesQueue[0].timestamp - (new Date).getTime();
                t = Math.max(0, t), this.processQueueTimeout = setTimeout(function () {
                    if (e.processQueueTimeout = -1, 0 !== e.messagesQueue.length) {
                        e.waitingForWorkerReply = !0;
                        var t = e.messagesQueue.shift();
                        e.lastTimerEvent = u.start(u.Topic.WORKER, e.decodeMessageName(t)), e.worker.postMessage(t)
                    }
                }, t)
            }
        }, e.prototype.decodeMessageName = function (e) {
            return e.type
        }, e.prototype.onmessage = function (e) {
            if (e.monacoWorker && (!e.from || e.from === this.worker.getId())) {
                switch (e.type) {
                    case"$reply":
                        if (this.waitingForWorkerReply = !1, this.lastTimerEvent && this.lastTimerEvent.stop(), !this.promises.hasOwnProperty(String(e.id)))return this.onError("Received unexpected message from Worker:", e), void 0;
                        switch (e.action) {
                            case"complete":
                                this.promises[e.id].complete(e.payload), delete this.promises[e.id];
                                break;
                            case"error":
                                this.onError("Main Thread sent to worker the following message:", {type: this.promises[e.id].type, payload: this.promises[e.id].payload}), this.onError("And the worker replied with an error:", e.payload), this.promises[e.id].error(e.payload), delete this.promises[e.id];
                                break;
                            case"progress":
                                this.promises[e.id].progress(e.payload)
                        }
                        break;
                    case"$schedule":
                        this.sendMessage("$schedule", {scheduleId: e.scheduleId}, e.timestamp);
                        break;
                    case"$print":
                        switch (e.level) {
                            case"log":
                                console.log(e.payload);
                                break;
                            case"debug":
                                console.info(e.payload);
                                break;
                            case"info":
                                console.info(e.payload);
                                break;
                            case"warn":
                                console.warn(e.payload);
                                break;
                            case"error":
                                console.error(e.payload);
                                break;
                            default:
                                this.onError("Received unexpected message from Worker:", e)
                        }
                        break;
                    default:
                        if (e.type in this && "function" == typeof this[e.type])this[e.type](e.payload); else {
                            var t = this.messageHandlers[e.type];
                            t && "function" == typeof t ? t(e.payload) : this.onError("Received unexpected message from Worker:", e)
                        }
                }
                this.processMessagesQueue()
            }
        }, e.prototype.onError = function (e, t) {
            console.error(e), console.info(t)
        }, e.LAST_WORKER_ID = 1, e
    }();
    t.WorkerClient = p
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/base/ui/actions", ["require", "exports", "vs/base/lib/winjs.base", "vs/base/eventEmitter"], function (e, t, n, i) {
    "use strict";
    function o(e) {
        return e ? e instanceof u ? !0 : "string" != typeof e.id ? !1 : "string" != typeof e.label ? !1 : "string" != typeof e.class ? !1 : "boolean" != typeof e.enabled ? !1 : "boolean" != typeof e.checked ? !1 : "function" != typeof e.run ? !1 : !0 : !1
    }

    function r(e) {
        function t(t) {
            return function () {
                e.forEach(function (e) {
                    e.checked = e === t
                })
            }
        }

        return e.map(function (e) {
            return new l(e, t(e))
        })
    }

    var s = n, a = i;
    t.isAction = o;
    var u = function (e) {
        function t(t, n, i, o, r) {
            "undefined" == typeof n && (n = ""), "undefined" == typeof i && (i = ""), "undefined" == typeof o && (o = !0), "undefined" == typeof r && (r = null), e.call(this), this._id = t, this._label = n, this._cssClass = i, this._enabled = o, this._actionCallback = r
        }

        return __extends(t, e), Object.defineProperty(t.prototype, "id", {get: function () {
            return this._id
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "label", {get: function () {
            return this._label
        }, set: function (e) {
            name !== e && (this._label = e, this.emit(t.LABEL, {source: this}))
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "class", {get: function () {
            return this._cssClass
        }, set: function (e) {
            this._cssClass !== e && (this._cssClass = e, this.emit(t.CLASS, {source: this}))
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "enabled", {get: function () {
            return this._enabled
        }, set: function (e) {
            this._enabled !== e && (this._enabled = e, this.emit(t.ENABLED, {source: this}))
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "checked", {get: function () {
            return this._checked
        }, set: function (e) {
            this._checked !== e && (this._checked = e, this.emit(t.CHECKED, {source: this}))
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "order", {get: function () {
            return this._order
        }, set: function (e) {
            this._order = e
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "actionCallback", {get: function () {
            return this._actionCallback
        }, set: function (e) {
            this._actionCallback = e
        }, enumerable: !0, configurable: !0}), t.prototype.run = function (e) {
            return null !== this._actionCallback ? this._actionCallback(e) : s.Promise.as(!0)
        }, t.LABEL = "label", t.CLASS = "class", t.ENABLED = "enabled", t.CHECKED = "checked", t
    }(a.EventEmitter);
    t.Action = u;
    var l = function (e) {
        function t(t, n) {
            e.call(this, t.id, t.label, t.class, t.enabled, null), this.delegate = t, this.runHandler = n
        }

        return __extends(t, e), Object.defineProperty(t.prototype, "id", {get: function () {
            return this.delegate.id
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "label", {get: function () {
            return this.delegate.label
        }, set: function (e) {
            this.delegate.label = e
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "class", {get: function () {
            return this.delegate.class
        }, set: function (e) {
            this.delegate.class = e
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "enabled", {get: function () {
            return this.delegate.enabled
        }, set: function (e) {
            this.delegate.enabled = e
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "checked", {get: function () {
            return this.delegate.checked
        }, set: function (e) {
            this.delegate.checked = e
        }, enumerable: !0, configurable: !0}), t.prototype.run = function (e) {
            return this.runHandler(e), this.delegate.run(e)
        }, t.prototype.addListener = function (e, t) {
            return this.delegate.addListener(e, t)
        }, t.prototype.addBulkListener = function (e) {
            return this.delegate.addBulkListener(e)
        }, t.prototype.addEmitter = function (e, t) {
            return this.delegate.addEmitter(e, t)
        }, t.prototype.addEmitterTypeListener = function (e, t, n) {
            return this.delegate.addEmitterTypeListener(e, t, n)
        }, t.prototype.emit = function (e, t) {
            this.delegate.emit(e, t)
        }, t
    }(u);
    t.radioGroup = r
}), define("vs/editor/editor", ["require", "exports"], function (e, t) {
    "use strict";
    !function (e) {
        e[e.LTR = 0] = "LTR", e[e.RTL = 1] = "RTL"
    }(t.SelectionDirection || (t.SelectionDirection = {})), t.SelectionDirection, function (e) {
        e[e.TextDefined = 0] = "TextDefined", e[e.LF = 1] = "LF", e[e.CRLF = 2] = "CRLF"
    }(t.EndOfLinePreference || (t.EndOfLinePreference = {})), t.EndOfLinePreference, function (e) {
        e[e.EXACT = 0] = "EXACT", e[e.ABOVE = 1] = "ABOVE", e[e.BELOW = 2] = "BELOW"
    }(t.ContentWidgetPositionPreference || (t.ContentWidgetPositionPreference = {})), t.ContentWidgetPositionPreference, function (e) {
        e[e.TOP_RIGHT_CORNER = 0] = "TOP_RIGHT_CORNER"
    }(t.OverlayWidgetPositionPreference || (t.OverlayWidgetPositionPreference = {})), t.OverlayWidgetPositionPreference, function (e) {
        e[e.UNKNOWN = 0] = "UNKNOWN", e[e.TEXTAREA = 1] = "TEXTAREA", e[e.GUTTER_GLYPH_MARGIN = 2] = "GUTTER_GLYPH_MARGIN", e[e.GUTTER_LINE_NUMBERS = 3] = "GUTTER_LINE_NUMBERS", e[e.GUTTER_LINE_DECORATIONS = 4] = "GUTTER_LINE_DECORATIONS", e[e.GUTTER_VIEW_ZONE = 5] = "GUTTER_VIEW_ZONE", e[e.CONTENT_TEXT = 6] = "CONTENT_TEXT", e[e.CONTENT_EMPTY = 7] = "CONTENT_EMPTY", e[e.CONTENT_VIEW_ZONE = 8] = "CONTENT_VIEW_ZONE", e[e.CONTENT_WIDGET = 9] = "CONTENT_WIDGET", e[e.OVERVIEW_RULER = 10] = "OVERVIEW_RULER", e[e.SCROLLBAR = 11] = "SCROLLBAR", e[e.OVERLAY_WIDGET = 12] = "OVERLAY_WIDGET"
    }(t.MouseTargetType || (t.MouseTargetType = {})), t.MouseTargetType
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/worker/editorWorkerClient", ["require", "exports", "vs/base/worker/workerClient", "vs/editor/core/constants", "vs/editor/editor"], function (e, t, n, i, o) {
    "use strict";
    var r = n, s = i, a = o, u = function (e) {
        function t(t, n, i) {
            e.call(this, new r.DefaultWorkerFactory(n), "vs/editor/worker/editorWorkerServer"), this.languageModeModuleId = t, this.friendlyModuleId = this.languageModeModuleId;
            var o = this.friendlyModuleId.lastIndexOf("/");
            o >= 0 && (this.friendlyModuleId = this.friendlyModuleId.substr(o + 1));
            var s = {languageModeModuleId: t, extraData: i.extraData, configData: i.configData, workspace: i.contextService ? i.contextService.getWorkspace() : void 0, configuration: i.contextService ? i.contextService.getConfiguration() : void 0, options: i.contextService ? i.contextService.getOptions() : void 0, participants: i.participants ? i.participants.map(function (e) {
                return{moduleId: e.getModuleId(), ctorName: e.getCtorName()}
            }) : []};
            this.onModuleLoaded = this.request("initialize", s), this.models = {}, this.modelsUnbind = {}, this.modelsDecorations = {}, this.modelsValidateTimeout = {}, this.modelsValidateRequest = {}
        }

        return __extends(t, e), t.prototype._decodeMessageName = function (e) {
            var t = e.type;
            return"rawRequest" === e.type && (t = e.payload.name), this.friendlyModuleId + " - " + t
        }, t.prototype.addWorkerParticipant = function (e) {
            this.request("addWorkerParticipant", {moduleId: e.getModuleId(), ctorName: e.getCtorName()})
        }, t.prototype.modelDecorationsUpdate = function (e) {
            if (this.models.hasOwnProperty(e.modelId)) {
                var t = this.models[e.modelId], n = [];
                for (var i in e.decorations)e.decorations.hasOwnProperty(i) && n.push(e.decorations[i]);
                this.modelsDecorations[t.id] = t.deltaDecorations(this.modelsDecorations[t.id] || [], n)
            }
        }, t.prototype.unbindModel = function (e) {
            this.modelsUnbind[e.id](), delete this.modelsUnbind[e.id], delete this.models[e.id], delete this.modelsDecorations[e.id], this.modelsValidateTimeout.hasOwnProperty(e.id) && (window.clearTimeout(this.modelsValidateTimeout[e.id]), delete this.modelsValidateTimeout[e.id]), this.modelsValidateRequest.hasOwnProperty(e.id) && (this.modelsValidateRequest[e.id].cancel(), delete this.modelsValidateRequest[e.id]), this.request("modelDestroy", [e.getAssociatedResource()], 0)
        }, t.prototype._mixinProperties = function (e, t, n) {
            for (var i = 0; i < n.length; i++)e[n[i]] = t[n[i]];
            return e
        }, t.prototype._setupValidation = function (e) {
            var t = this, n = e.id, i = e.getAssociatedResource();
            this.modelsValidateTimeout.hasOwnProperty(n) && (window.clearTimeout(this.modelsValidateTimeout[n]), delete this.modelsValidateTimeout[n]), this.modelsValidateRequest.hasOwnProperty(n) && (this.modelsValidateRequest[n].cancel(), delete this.modelsValidateRequest[n]);
            var o = e.getMode().validationSupport;
            o && o.autoValidateDelay >= 0 && (this.modelsValidateTimeout[n] = window.setTimeout(function () {
                delete t.modelsValidateTimeout[n], t.modelsValidateRequest[n] = t.request("validate", [i])
            }, o.autoValidateDelay))
        }, t.prototype.bindModel = function (e) {
            var t = this;
            this.request("modelInitialize", [e.id, e.getVersionId(), e.getValue(a.EndOfLinePreference.LF), e.getProperties(), e.getAssociatedResource()], 0), this._setupValidation(e), this.models[e.id] = e, this.modelsUnbind[e.id] = e.addBulkListener(function (n) {
                for (var i = [], o = !1, r = 0, a = n.length; a > r; r++) {
                    var u = n[r], l = u.getData();
                    switch (u.getType()) {
                        case s.EventType.ModelContentChanged:
                            switch (l.changeType) {
                                case s.EventType.ModelContentChangedFlush:
                                    i.push(t._mixinProperties({type: u.getType()}, l, ["changeType", "detail", "versionId"]));
                                    break;
                                case s.EventType.ModelContentChangedLinesDeleted:
                                    i.push(t._mixinProperties({type: u.getType()}, l, ["changeType", "fromLineNumber", "toLineNumber", "versionId"]));
                                    break;
                                case s.EventType.ModelContentChangedLinesInserted:
                                    i.push(t._mixinProperties({type: u.getType()}, l, ["changeType", "fromLineNumber", "toLineNumber", "detail", "versionId"]));
                                    break;
                                case s.EventType.ModelContentChangedLineChanged:
                                    i.push(t._mixinProperties({type: u.getType()}, l, ["changeType", "lineNumber", "detail", "versionId"]))
                            }
                            o = !0;
                            break;
                        case s.EventType.ModelPropertiesChanged:
                            i.push(t._mixinProperties({type: u.getType()}, l, ["properties"]))
                    }
                }
                i.length > 0 && t._sendModelEvent(e, i), o && t._setupValidation(e)
            })
        }, t.prototype._sendModelEvent = function (e, t) {
            this.request("modelEvents", [e.getAssociatedResource(), t], 0)
        }, t.prototype._onError = function (e, t) {
            console.error("[" + this.languageModeModuleId + "]: " + e), console.error(t)
        }, t.prototype.publishMarkerUpdates = function (e) {
            for (var t = 0; t < e.length; t++) {
                var n = e[t];
                if (n.model) {
                    var i = n.model.id, o = this.models[i];
                    o && o._publishMarkerUpdate(n)
                }
            }
        }, t
    }(r.WorkerClient);
    t.EditorWorkerClient = u
}), define("vs/editor/modes/modesExtensions", ["require", "exports", "vs/base/lib/winjs.base", "vs/base/objects", "vs/base/types", "vs/platform/platform", "./modesFilters", "./stream", "vs/editor/worker/editorWorkerClient", "vs/editor/modes/modes", "vs/base/performance/timer", "vs/editor/modes/nullMode", "vs/platform/services", "vs/base/arrays"], function (e, t, n, i, o, r, s, a, u, l, d, c, h, p) {
    "use strict";
    var f = n, g = i, m = o, v = r, y = s, b = a, C = u, E = l, w = d, _ = c, S = p;
    t.isDigit = function () {
        var e = "0".charCodeAt(0), t = "1".charCodeAt(0), n = "2".charCodeAt(0), i = "3".charCodeAt(0), o = "4".charCodeAt(0), r = "5".charCodeAt(0), s = "6".charCodeAt(0), a = "7".charCodeAt(0), u = "8".charCodeAt(0), l = "9".charCodeAt(0), d = "a".charCodeAt(0), c = "b".charCodeAt(0), h = "c".charCodeAt(0), p = "d".charCodeAt(0), f = "e".charCodeAt(0), g = "f".charCodeAt(0), m = "A".charCodeAt(0), v = "B".charCodeAt(0), y = "C".charCodeAt(0), b = "D".charCodeAt(0), C = "E".charCodeAt(0), E = "F".charCodeAt(0);
        return function (w, _) {
            var S = w.charCodeAt(0);
            switch (_) {
                case 1:
                    return S === e;
                case 2:
                    return S >= e && t >= S;
                case 3:
                    return S >= e && n >= S;
                case 4:
                    return S >= e && i >= S;
                case 5:
                    return S >= e && o >= S;
                case 6:
                    return S >= e && r >= S;
                case 7:
                    return S >= e && s >= S;
                case 8:
                    return S >= e && a >= S;
                case 9:
                    return S >= e && u >= S;
                case 10:
                    return S >= e && l >= S;
                case 11:
                    return S >= e && l >= S || S === d || S === m;
                case 12:
                    return S >= e && l >= S || S >= d && c >= S || S >= m && v >= S;
                case 13:
                    return S >= e && l >= S || S >= d && h >= S || S >= m && y >= S;
                case 14:
                    return S >= e && l >= S || S >= d && p >= S || S >= m && b >= S;
                case 15:
                    return S >= e && l >= S || S >= d && f >= S || S >= m && C >= S;
                default:
                    return S >= e && l >= S || S >= d && g >= S || S >= m && E >= S
            }
        }
    }();
    var T = function () {
        function e(e, t, n) {
            this.startIndex = e, this.type = t, this.bracket = n
        }

        return e
    }(), L = function () {
        function e(e, t, n) {
            "undefined" == typeof e && (e = null), "undefined" == typeof t && (t = null), "undefined" == typeof n && (n = !1), this.id = e, this.workerModule = t, this.supportsNestedMode = n, this.workerPool = [], this.defaultWorker = null, this.models = {}, this.options = null, this.validationSupport = this, this.autoValidateDelay = 500, this.tokenizationSupport = this, this.occurrencesSupport = this, this.suggestSupport = this, this.parameterHintsSupport = this, this.formattingSupport = this, this.inplaceReplaceSupport = this, this.diffSupport = this, this.dirtyDiffSupport = this, this.linkSupport = this, this.configSupport = this, this.electricCharacterSupport = this, this.commentsSupport = this, this.characterPairSupport = this, this.tokenTypeClassificationSupport = this
        }

        return e.prototype.getId = function () {
            return this.id
        }, e.prototype._models = function () {
            return this.models
        }, e.prototype.injectContextService = function (e) {
            this.contextService = e
        }, e.prototype.newWorker = function (e, n) {
            var i = this;
            if (!this.workerModule)return null;
            if (!this.contextService)return null;
            m.isUndefinedOrNull(n) && (n = this.workerModule.substring(this.workerModule.lastIndexOf("/") + 1));
            var o = [], r = this.getId();
            if (null !== r && r.length > 0) {
                var s = v.Registry.as(t.Extensions.EditorModes);
                s.getWorkerParticipants(r).forEach(function (e) {
                    o.push(e)
                })
            }
            try {
                var a = new C.EditorWorkerClient(this.workerModule, n, {contextService: this.contextService, participants: o, configData: this.options, extraData: e});
                return this.workerPool.push(a), Object.keys(this.models).forEach(function (e) {
                    a.bindModel(i.models[e])
                }), a
            } catch (u) {
                return console.error(u), void 0
            }
        }, e.prototype.getWorkers = function () {
            return this.workerPool.slice(0)
        }, e.prototype.workerRequest = function (e, t, n) {
            "undefined" == typeof t && (t = null);
            var i = w.start(w.Topic.LANGUAGES, e.commandName || e.command), o = function () {
                i.stop()
            };
            return n || (this.ensureDefaultWorker(), n = this.defaultWorker), n ? f.decoratePromise(n.request(e.command, e.params), o, o) : f.Promise.as(t)
        }, e.prototype.ensureDefaultWorker = function () {
            this.defaultWorker || (this.defaultWorker = this.newWorker())
        }, e.prototype.bindModel = function (e) {
            this.ensureDefaultWorker(), this.models[e.id] = e, this.workerPool.forEach(function (t) {
                t.bindModel(e)
            })
        }, e.prototype.unbindModel = function (e) {
            delete this.models[e.id], this.workerPool.forEach(function (t) {
                t.unbindModel(e)
            })
        }, e.prototype.validate = function (e) {
            return this.request("validate", null, e)
        }, e.prototype.getFilter = function () {
            return y.DefaultFilter
        }, e.prototype.suggest = function (e, t, n) {
            return this.request("suggest", n, e, t)
        }, e.prototype.getTriggerCharacters = function () {
            return[]
        }, e.prototype.shouldAutotriggerSuggest = function (t, n, i) {
            return this._handleEvent(t, n, i, function (t, n, i, o) {
                return t instanceof e ? t.shouldAutotriggerSuggestImpl(n, i.tokens, o) : t.suggestSupport ? t.suggestSupport.shouldAutotriggerSuggest(n, i, o) : void 0
            })
        }, e.prototype.shouldAutotriggerSuggestImpl = function () {
            return!1
        }, e.prototype.shouldShowEmptySuggestionList = function () {
            return!0
        }, e.prototype.getParameterHints = function () {
            return f.Promise.as(null)
        }, e.prototype.getParameterHintsTriggerCharacters = function () {
            return["(", ","]
        }, e.prototype.findOccurrences = function (e, t, n, i) {
            return"undefined" == typeof n && (n = !1), this.request("findOccurrences", i, e, t, n)
        }, e.prototype.format = function (e, t, n) {
            return this.request("format", null, e, t, n)
        }, e.prototype.navigateValueSet = function (e, t, n, i) {
            return this.request("navigateValueSet", i, e, t, n)
        }, e.prototype.computeDiff = function (e, t, n) {
            return this.request("computeDiff", n, e, t)
        }, e.prototype.computeDirtyDiff = function (e, t) {
            return this.request("computeDirtyDiff", t, e)
        }, e.prototype.computeLinks = function (e) {
            return this.request("computeLinks", null, e)
        }, e.prototype.configure = function (e) {
            var t = this;
            if (m.isEmptyObject(e))return f.Promise.as(!0);
            this.options = e;
            var n = this.workerPool.map(function (n) {
                return t.request("configure", n, e)
            });
            return f.Promise.join(n)
        }, e.prototype.onEnter = function (t, n, i) {
            return this._handleEvent(t, n, i, function (t, n, i, o) {
                return t instanceof e ? t.onEnterImpl(n, i.tokens, o) : t.electricCharacterSupport ? t.electricCharacterSupport.onEnter(n, i, o) : void 0
            })
        }, e.prototype.onEnterImpl = function () {
            return null
        }, e.prototype.onElectricCharacter = function (t, n, i) {
            return this._handleEvent(t, n, i, function (t, n, i, o) {
                return t instanceof e ? t.onElectricCharacterImpl(n, i.tokens, o) : t.electricCharacterSupport ? t.electricCharacterSupport.onElectricCharacter(n, i, o) : void 0
            })
        }, e.prototype.onElectricCharacterImpl = function () {
            return null
        }, e.prototype.getElectricCharacters = function () {
            return[]
        }, e.prototype.request = function (e, t) {
            for (var n = [], i = 0; i < arguments.length - 2; i++)n[i] = arguments[i + 2];
            return this.workerRequest({command: e, params: n}, null, t)
        }, e.prototype.getInitialState = function () {
            throw new Error("Abstract Method")
        }, e.prototype.getNonWordTokenTypes = function () {
            return[]
        }, e.prototype.getWordDefinition = function () {
            return _.NullMode.DEFAULT_WORD_REGEXP
        }, e.prototype.getAutoClosingPairs = function () {
            return[]
        }, e.prototype.shouldAutoClosePair = function (t, n, i, o) {
            return this._handleEvent(n, i, o, function (n, i, o, r) {
                return n instanceof e ? n.shouldAutoClosePairImpl(t, i, o.tokens, r) : n.characterPairSupport ? n.characterPairSupport.shouldAutoClosePair(t, i, o, r) : void 0
            })
        }, e.prototype.shouldAutoClosePairImpl = function () {
            return!0
        }, e.prototype.getSurroundingPairs = function () {
            return this.getAutoClosingPairs()
        }, e.prototype.getCommentsConfiguration = function () {
            return null
        }, e.prototype._handleEvent = function (e, t, n, i) {
            if (0 === t.tokens.length || !this.supportsNestedMode)return i(this, e, t, n);
            var o = t.modeTransitions, r = t.tokens, s = S.findIndexInSegmentsArray(o, n), a = o[s].mode, u = o[s].startIndex, l = S.findIndexInSegmentsArray(r, u), d = -1, c = -1;
            s + 1 < o.length ? (c = S.findIndexInSegmentsArray(r, o[s + 1].startIndex), d = r[c].startIndex) : (c = r.length, d = e.length);
            for (var h, p = [], f = r[l].startIndex, g = l; c > g; g++)h = r[g], p.push(new T(h.startIndex - f, h.type, h.bracket));
            var m = e.substring(f, d), v = n - f, y = {tokens: p, modeTransitions: [
                {startIndex: 0, mode: a}
            ], actualStopOffset: 0, endState: null};
            return i(a, m, y, v)
        }, e.prototype._getEmbeddedLevel = function (e) {
            for (var t = -1; e;)t++, e = e.getStateData();
            return t
        }, e.prototype._nestedTokenize = function (e, t, n, i, o, r) {
            for (var s = t.getStateData(), a = this.getLeavingNestedModeData(e, s), u = t; u.getStateData() && u.getStateData().getMode() !== this;)u = u.getStateData();
            var l = u.getMode();
            if (!a) {
                var d;
                return d = l.tokenizationSupport ? l.tokenizationSupport.tokenize(e, t, n, i) : _.nullTokenize(l, e, t, n), d.tokens = o.concat(d.tokens), d.modeTransitions = r.concat(d.modeTransitions), d
            }
            var c = a.nestedModeBuffer;
            if (c.length > 0) {
                var h;
                h = l.tokenizationSupport ? l.tokenizationSupport.tokenize(c, t, n, i) : _.nullTokenize(l, c, t, n), t = h.endState, o = o.concat(h.tokens), r = r.concat(h.modeTransitions)
            }
            var p = a.bufferAfterNestedMode, f = a.stateAfterNestedMode;
            return f.setStateData(s.getStateData()), this.onReturningFromNestedMode(f, t), this._myTokenize(p, f, n + c.length, i, o, r)
        }, e.prototype._myTokenize = function (t, n, i, o, r, s) {
            var a, u, l = new b.LineStream(t), d = null;
            n = n.clone(), (s.length <= 0 || s[s.length - 1].mode !== this) && s.push({startIndex: i, mode: this});
            for (var c = Math.min(o - i, t.length), h = E.Bracket.None; l.pos() < c;) {
                u = l.pos();
                do {
                    if (a = n.tokenize(l), null === a || void 0 === a || (void 0 === a.type || null === a.type) && (void 0 === a.nextState || null === a.nextState))throw new Error("Tokenizer must return a valid state");
                    if (a.nextState && (a.nextState.setStateData(n.getStateData()), n = a.nextState), l.pos() <= u)throw new Error("Stream did not advance while tokenizing.")
                } while (!a.type && "" !== a.type);
                if ((d !== a.type || a.bracket || null === d) && r.push(new T(u + i, a.type, a.bracket || h)), d = a.type, this.supportsNestedMode && this.enterNestedMode(n)) {
                    var p = this._getEmbeddedLevel(n);
                    if (p < e.MAX_EMBEDDED_LEVELS) {
                        var f = this.getNestedModeInitialState(n);
                        if (!l.eos()) {
                            var g = t.substr(l.pos());
                            return this._nestedTokenize(g, f, i + l.pos(), o, r, s)
                        }
                        n = f
                    }
                }
            }
            return{tokens: r, actualStopOffset: l.pos() + i, modeTransitions: s, endState: n}
        }, e.prototype.tokenize = function (e, t, n, i) {
            return"undefined" == typeof n && (n = 0), "undefined" == typeof i && (i = n + e.length), t.getMode() !== this ? this._nestedTokenize(e, t, n, i, [], []) : this._myTokenize(e, t, n, i, [], [])
        }, e.prototype.enterNestedMode = function () {
            return!1
        }, e.prototype.getNestedMode = function () {
            return null
        }, e.prototype.getNestedModeInitialState = function (e) {
            var t, n = this.getNestedMode(e);
            return t = n.tokenizationSupport ? n.tokenizationSupport.getInitialState() : new _.NullState(n, null), t.setStateData(e), t
        }, e.prototype.getLeavingNestedModeData = function () {
            return null
        }, e.prototype.onReturningFromNestedMode = function () {
        }, e.MAX_EMBEDDED_LEVELS = 5, e
    }();
    t.AbstractMode = L;
    var N = function () {
        function e() {
        }

        return e.tokenize = function (e, t) {
            for (var n = {tagName: "div", style: "white-space: pre", children: []}, i = e.split("\n"), o = t.tokenizationSupport.getInitialState(), r = 0; r < i.length; r++) {
                var s = i[r], a = 0, u = t.tokenizationSupport.tokenize(s, o);
                o = u.endState;
                for (var l = u.tokens, d = 0; d < l.length; d++) {
                    var c = l[d];
                    e = "", d < l.length - 1 ? (e = s.substring(a, l[d + 1].startIndex), a = l[d + 1].startIndex) : e = s.substr(a);
                    var h = "token";
                    c.type && (h += " " + c.type.split(".").join(" ")), n.children.push({tagName: "span", className: h, text: e})
                }
                r < i.length - 1 && n.children.push({tagName: "br"})
            }
            return n
        }, e
    }();
    t.TextToHtmlTokenizer = N;
    var x = function () {
        function e(e, t) {
            "undefined" == typeof t && (t = null), this.mode = e, this.stateData = t
        }

        return e.prototype.getMode = function () {
            return this.mode
        }, e.prototype.clone = function () {
            var e = this.makeClone();
            return e.initializeFrom(this), e
        }, e.prototype.makeClone = function () {
            throw new Error("Abstract Method")
        }, e.prototype.initializeFrom = function (e) {
            this.stateData = null !== e.stateData ? e.stateData.clone() : null
        }, e.prototype.getStateData = function () {
            return this.stateData
        }, e.prototype.setStateData = function (e) {
            this.stateData = e
        }, e.prototype.equals = function (t) {
            if (null === t || this.mode !== t.getMode())return!1;
            if (!(t instanceof e))return!1;
            var n = t;
            return null === this.stateData && null === n.stateData ? !0 : null === this.stateData || null === n.stateData ? !1 : this.stateData.equals(n.stateData)
        }, e.prototype.tokenize = function () {
            throw new Error("Abstract Method")
        }, e
    }();
    t.AbstractState = x, t.LANGUAGE_CONFIGURATION = "languages", t.Extensions = {EditorModes: "editor.modes"};
    var M = {}, I = {}, R = {}, D = {}, P = {}, O = {}, k = function () {
        function e() {
            this._modeCreationRequests = {}, this._modesRegistryInjector = null
        }

        return e.prototype.injectInjectorService = function (e) {
            this._modesRegistryInjector = e
        }, e.prototype.registerWorkerParticipant = function (e, t) {
            M.hasOwnProperty(e) || (M[e] = []), M[e].push(t)
        }, e.prototype.getWorkerParticipants = function (e) {
            return M.hasOwnProperty(e) ? M[e] : []
        }, e.prototype.isRegisteredMode = function (e) {
            return I.hasOwnProperty(e)
        }, e.prototype.getRegisteredModes = function () {
            var e, t = [];
            for (e in I)t.push(e);
            return t
        }, e.prototype.registerMode = function (e, t) {
            e.forEach(function (e) {
                I[e] = t
            })
        }, e.prototype.configureMode = function (e, t) {
            this.doConfigureMode(e, t, P, R)
        }, e.prototype.configureModeById = function (e, t) {
            this.doConfigureMode(e, t, O, D)
        }, e.prototype.doConfigureMode = function (e, t, n, i) {
            if (n.hasOwnProperty(e)) {
                var o = n[e];
                o && o.configSupport && o.configSupport.configure(t)
            } else {
                var r = i[e] || {};
                r = g.mixin(r, t), i[e] = r
            }
        }, e.prototype.getMode = function (e) {
            if (!e)return null;
            for (var t = e.split(","), n = 0; n < t.length; n++) {
                var i = t[n].trim(), o = this.getOrCreateOneModeSync(i);
                if (o)return o
            }
            return null
        }, e.prototype.getOrCreateOneModeSync = function (e) {
            if (P.hasOwnProperty(e))return P[e];
            if (!this.isRegisteredMode(e))return null;
            var t = I[e].syncLoadAndCreate(this._modesRegistryInjector);
            return t && (P[e] = t, O[t.getId()] = t, t.configSupport && (R.hasOwnProperty(e) && t.configSupport.configure(R[e] || {}), D.hasOwnProperty(t.getId()) && t.configSupport.configure(D[t.getId()] || {}))), t
        }, e.prototype.getModeDescriptor = function (e) {
            if (e)for (var t = e.split(","), n = 0; n < t.length; n++) {
                var i = t[n].trim();
                if (this.isRegisteredMode(i))return I[i]
            }
            return null
        }, e.prototype.getOrCreateMode = function (e) {
            if (!e)return f.Promise.as(null);
            for (var t = e.split(","), n = 0; n < t.length; n++) {
                var i = t[n].trim();
                if (this.isRegisteredMode(i))return this.getOrCreateOneModeAsync(i)
            }
            return f.Promise.as(null)
        }, e.prototype.getOrCreateOneModeAsync = function (e) {
            var t = this;
            return P.hasOwnProperty(e) ? f.Promise.as(P[e]) : (this._modeCreationRequests.hasOwnProperty(e) || (this._modeCreationRequests[e] = I[e].loadAndCreate(this._modesRegistryInjector).then(function (n) {
                return P[e] = n, O[n.getId()] = n, n && n.configSupport && (R.hasOwnProperty(e) && n.configSupport.configure(R[e] || {}), D.hasOwnProperty(n.getId()) && n.configSupport.configure(D[n.getId()] || {})), delete t._modeCreationRequests[e], n
            })), this._modeCreationRequests[e])
        }, e
    }();
    v.Registry.add(t.Extensions.EditorModes, new k)
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/configuration", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/env", "./config", "vs/base/objects", "vs/base/types", "vs/platform/platform", "vs/platform/configurationRegistry", "./handlerDispatcher", "vs/base/eventEmitter", "vs/base/dom/measurementHelper", "./constants", "vs/editor/modes/modesExtensions", "vs/base/strings"], function (e, t, n, i, o, r, s, a, u, l, d, c, h, p, f) {
    "use strict";
    var g = n, m = i, v = o, y = r, b = s, C = a, E = u, w = l, _ = d, S = c, T = h, L = p, N = f, x = {}, M = function (e) {
        function t(t) {
            e.call(this), this.keyBindings = y.clone(v.Config.keyBindings), this.editor = y.clone(v.Config.editor), this._mergeOptionsIn(t), this.handlerDispatcher = new w.HandlerDispatcher, this._readCSSConfiguration()
        }

        return __extends(t, e), t.prototype._mergeOptionsIn = function (e) {
            if (e = e || {}, e.keyBindings)for (var t in e.keyBindings)e.keyBindings.hasOwnProperty(t) && (this.keyBindings[t] = this.keyBindings[t] || [], this.keyBindings[t].push(e.keyBindings[t]));
            e.keyBindings && delete e.keyBindings;
            var n = "undefined" != typeof e.stopLineTokenizationAfter, i = "undefined" != typeof e.stopRenderingLineAfter;
            this.editor = y.mixin(this.editor, e), !n && this.editor.wrappingColumn >= 0 && (this.editor.stopLineTokenizationAfter = -1), !i && this.editor.wrappingColumn >= 0 && (this.editor.stopRenderingLineAfter = -1), this._validateOptions()
        }, t.prototype._validateOptions = function () {
            this.editor.tabSize = Math.max(1, this._ensureInteger(this.editor.tabSize)), this.editor.lineNumbersMinChars = Math.max(1, this._ensureInteger(this.editor.lineNumbersMinChars))
        }, t.prototype._ensureInteger = function (e) {
            return Math.round(parseInt(e, 10))
        }, t.prototype.bindKeys = function (e) {
            var t = this, n = e.bindGroup(function (e) {
                for (var n in t.keyBindings)if (t.keyBindings.hasOwnProperty(n))for (var i = t.handlerDispatcher.trigger.bind(t.handlerDispatcher, "keyboard", n), o = t.keyBindings[n], r = 0; r < o.length; r++) {
                    var s = o[r];
                    e(s, i, {id: n})
                }
            });
            return n
        }, t.prototype.dispose = function () {
            e.prototype.dispose.call(this)
        }, t.prototype.updateOptions = function (e) {
            var t = this.editor.wrappingColumn;
            this._mergeOptionsIn(e);
            var n = this.editor.wrappingColumn;
            this._readCSSConfiguration();
            var i = {wrappingColumnChanged: t !== n};
            this.emit(T.EventType.ConfigurationChanged, i)
        }, t.prototype.getEditorClassName = function () {
            var e = "";
            return m.browser.isIE10 ? e += "ie " : m.browser.isFirefox && (e += "ff "), m.browser.isMacintosh && (e += "mac "), "monaco-editor " + e + this.editor.theme
        }, t.prototype.setIsDominatedByLongLines = function (e) {
            this.editor.isDominatedByLongLines = e
        }, t.prototype.getWrappingColumn = function () {
            return this.editor.isDominatedByLongLines && this.editor.wrappingColumn > 0 ? 0 : this.editor.wrappingColumn
        }, t.prototype._normalizeIndentationFromWhitespace = function (e) {
            var t, n = 0;
            for (t = 0; t < e.length; t++)"	" === e.charAt(t) ? n += this.editor.tabSize : n++;
            var i = "";
            if (!this.editor.insertSpaces) {
                var o = Math.floor(n / this.editor.tabSize);
                for (n %= this.editor.tabSize, t = 0; o > t; t++)i += "	"
            }
            for (t = 0; n > t; t++)i += " ";
            return i
        }, t.prototype.normalizeIndentation = function (e) {
            var t = N.firstNonWhitespaceIndex(e);
            return-1 === t && (t = e.length), this._normalizeIndentationFromWhitespace(e.substring(0, t)) + e.substring(t)
        }, t.prototype.getOneIndent = function () {
            if (this.editor.insertSpaces) {
                for (var e = "", t = 0; t < this.editor.tabSize; t++)e += " ";
                return e
            }
            return"	"
        }, t.prototype._readCSSConfiguration = function () {
            var e = this;
            this._withCSSConfiguration(function (t) {
                e.editor.font !== t.font && (e.editor.font = t.font, e.editor.fontSize = t.fontSize, e.editor.thinnestCharacterWidth = t.thinnestCharacterWidth, e.emit(T.EventType.ConfigurationFontChanged, {font: e.editor.font})), e.editor.lineHeight !== t.lineHeight && (e.editor.lineHeight = t.lineHeight, e.emit(T.EventType.ConfigurationLineHeightChanged, e.editor.lineHeight))
            })
        }, t.prototype._withCSSConfiguration = function (e) {
            var t = this, n = this.getEditorClassName();
            if (x.hasOwnProperty(n))e(x[n]); else {
                var i = new S.MeasurementHelper;
                i.measure(function (i) {
                    i.measure(i.create("div", n, "||||||||||"), function (i, o) {
                        var r = {thinnestCharacterWidth: i.clientWidth / 10, lineHeight: i.clientHeight, font: t._readFontFromComputedStyle(o), fontSize: parseInt(o.fontSize, 10)};
                        x[n] = r, e(x[n])
                    })
                })
            }
        }, t.prototype._readFontFromComputedStyle = function (e) {
            return e.font ? e.font : e.fontFamily + " " + e.fontSize + " " + e.fontSizeAdjust + " " + e.fontStretch + " " + e.fontStyle + " " + e.fontVariant + " " + e.fontWeight + " "
        }, t
    }(_.EventEmitter);
    t.Configuration = M;
    var I = function () {
        function e() {
        }

        return e.apply = function (t, n) {
            return t.getConfiguration().then(function (t) {
                if (t) {
                    if (n && b.isFunction(n.updateOptions)) {
                        var i = n.getEditorType();
                        switch (i) {
                            case T.EditorType.ICodeEditor:
                            case T.EditorType.IDiffEditor:
                                var o = t[e.EDITOR_SECTION];
                                o && (delete o.readOnly, n.updateOptions(o));
                                break;
                            case T.EditorType.ITerminal:
                                var r = t[e.TERMINAL_SECTION];
                                r && n.updateOptions(r)
                        }
                    }
                    if (t[e.LANGUAGES_SECTION]) {
                        var s = t[e.LANGUAGES_SECTION], a = C.Registry.as(L.Extensions.EditorModes);
                        for (var u in s)if (s.hasOwnProperty(u)) {
                            var l = s[u];
                            a.configureModeById(u, l)
                        }
                    }
                }
            })
        }, e.EDITOR_SECTION = "editor", e.TERMINAL_SECTION = "console", e.LANGUAGES_SECTION = L.LANGUAGE_CONFIGURATION, e
    }();
    t.EditorConfiguration = I;
    var R = C.Registry.as(E.Extensions.Configuration);
    R.registerConfiguration({id: I.EDITOR_SECTION, type: "object", title: g.localize("vs_editor_core_configuration", 0), description: g.localize("vs_editor_core_configuration", 1), properties: {lineNumbers: {type: "boolean", "default": !0, description: g.localize("vs_editor_core_configuration", 2)}, glyphMargin: {type: "boolean", description: g.localize("vs_editor_core_configuration", 3)}, tabSize: {type: "integer", "default": 4, minimum: 1, description: g.localize("vs_editor_core_configuration", 4)}, insertSpaces: {type: "boolean", description: g.localize("vs_editor_core_configuration", 5)}, roundedSelection: {type: "boolean", "default": !0, description: g.localize("vs_editor_core_configuration", 6)}, scrollBeyondLastLine: {type: "boolean", "default": !0, description: g.localize("vs_editor_core_configuration", 7)}, wrappingColumn: {type: "integer", "default": 300, minimum: -1, description: g.localize("vs_editor_core_configuration", 8)}, quickSuggestions: {type: "boolean", "default": !0, description: g.localize("vs_editor_core_configuration", 9)}, quickSuggestionsDelay: {type: "integer", "default": 500, minimum: 0, description: g.localize("vs_editor_core_configuration", 10)}, autoClosingBrackets: {type: "boolean", "default": !0, description: g.localize("vs_editor_core_configuration", 11)}, formatOnType: {type: "boolean", description: g.localize("vs_editor_core_configuration", 12)}, suggestOnTriggerCharacters: {type: "boolean", "default": !0, description: g.localize("vs_editor_core_configuration", 13)}, gotoDefinitionWithMouse: {type: "boolean", "default": !0, description: g.localize("vs_editor_core_configuration", 14)}}}), R.registerConfiguration({id: I.TERMINAL_SECTION, type: "object", title: g.localize("vs_editor_core_configuration", 15), description: g.localize("vs_editor_core_configuration", 16), properties: {lineNumbers: {type: "boolean", "default": !1, description: g.localize("vs_editor_core_configuration", 17)}, roundedSelection: {type: "boolean", "default": !0, description: g.localize("vs_editor_core_configuration", 18)}, wrappingColumn: {type: "integer", "default": 0, minimum: -1, description: g.localize("vs_editor_core_configuration", 19)}, quickSuggestionsDelay: {type: "integer", "default": 50, minimum: 0, description: g.localize("vs_editor_core_configuration", 20)}, scrollBeyondLastLine: {type: "boolean", "default": !0, description: g.localize("vs_editor_core_configuration", 21)}}})
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/controller/keyboardHandler", ["require", "exports", "vs/editor/core/range", "vs/editor/core/position", "vs/base/dom/keyboardEvent", "vs/base/dom/dom", "vs/base/env", "vs/editor/core/view/viewContext", "vs/editor/editor", "vs/editor/core/view/viewEventHandler", "vs/base/time/schedulers"], function (e, t, n, i, o, r, s, a, u, l, d) {
    "use strict";
    var c = n, h = i, p = o, f = r, g = s, m = a, v = u, y = l, b = d, C = 9700;
    " ".charCodeAt(0), "	".charCodeAt(0), "<".charCodeAt(0), ">".charCodeAt(0), "&".charCodeAt(0);
    var E;
    !function (e) {
        e[e.Type = 0] = "Type", e[e.Paste = 1] = "Paste"
    }(E || (E = {}));
    var w = function (e) {
        function t(t, n, i) {
            var o = this;
            e.call(this), this.context = t, this.viewController = n, this.textArea = i.textArea, this.viewHelper = i, this.accessiblilityOutput = i.accessiblilityOutput, this.selection = new c.Range(1, 1, 1, 1), this.cursorPosition = new h.Position(1, 1), this.contentLeft = 0, this.asyncReadFromTextArea = new b.RunOnceScheduler(null, 0), this.asyncSelectTextAreaOnFocus = new b.RunOnceScheduler(function () {
                return o._selectTextAreaIfFocused()
            }, 0), this.asyncSetSelectionToTextArea = new b.RunOnceScheduler(function () {
                return o._writePlaceholderAndSelectTextArea()
            }, 0), this.asyncTriggerCut = new b.RunOnceScheduler(function () {
                return o._triggerCut()
            }, 0), this.lastCopiedValue = null, this.hasFocus = !1, this.justHadAPaste = !1, this.justHadACut = !1, this.lastKeyPressTime = 0, this.lastCompositionEndTime = 0, this.lastValueWrittenToTheTextArea = "", this.kbController = new p.KeyboardController(this.textArea), this.listenersToRemove = [], this.listenersToRemove.push(this.kbController.addListener("keydown", function (e) {
                return o._onKeyDown(e)
            })), this.listenersToRemove.push(this.kbController.addListener("keyup", function (e) {
                return o._onKeyUp(e)
            })), this.listenersToRemove.push(this.kbController.addListener("keypress", function (e) {
                return o._onKeyPress(e)
            }));
            var r = 0;
            this.listenersToRemove.push(f.addListener(this.textArea, "compositionstart", function () {
                0 === r && o.showTextAreaAtCursor(), r++, o.asyncReadFromTextArea.cancel()
            })), this.listenersToRemove.push(f.addListener(this.textArea, "compositionend", function () {
                r--, 0 === r && o.hideTextArea(), o.lastCompositionEndTime = (new Date).getTime(), o._scheduleReadFromTextArea(E.Type)
            })), g.browser.isMacintosh && this.listenersToRemove.push(f.addListener(this.textArea, "input", function () {
                if (o.justHadAPaste)return o.justHadAPaste = !1, void 0;
                if (o.justHadACut)return o.justHadACut = !1, void 0;
                var e = (new Date).getTime(), t = e - o.lastKeyPressTime;
                if (!(500 >= t)) {
                    var n = e - o.lastCompositionEndTime;
                    if (!(500 >= n || r > 0 || o.textArea.selectionStart !== o.textArea.selectionEnd)) {
                        var i, s = o.textArea.value;
                        if (g.browser.isChrome) {
                            var a = o.lastValueWrittenToTheTextArea.substring(1);
                            if (s.length <= a.length)return;
                            if (s.substring(s.length - a.length) !== a)return;
                            i = s.substring(0, s.length - a.length)
                        } else i = s;
                        console.log("DEDUCED input: <<<" + i + ">>>")
                    }
                }
            })), this.listenersToRemove.push(f.addListener(this.textArea, "cut", function (e) {
                return o._onCut(e)
            })), this.listenersToRemove.push(f.addListener(this.textArea, "copy", function (e) {
                return o._onCopy(e)
            })), this.listenersToRemove.push(f.addListener(this.textArea, "paste", function (e) {
                return o._onPaste(e)
            })), this.listenersToRemove.push(f.addListener(this.textArea, "contextmenu", function () {
                f.selectTextInInputElement(o.textArea), o.asyncSelectTextAreaOnFocus.cancel()
            })), this._writePlaceholderAndSelectTextArea(), this.context.addEventHandler(this)
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this.context.removeEventHandler(this), this.listenersToRemove.forEach(function (e) {
                e()
            }), this.listenersToRemove = [], this.kbController.destroy(), this.asyncReadFromTextArea.dispose(), this.asyncSelectTextAreaOnFocus.dispose(), this.asyncSetSelectionToTextArea.dispose(), this.asyncTriggerCut.dispose()
        }, t.prototype.showTextAreaAtCursor = function () {
            var e = new c.Range(this.cursorPosition.lineNumber, this.cursorPosition.column, this.cursorPosition.lineNumber, this.cursorPosition.column), t = {range: e, revealVerticalInCenter: !1, revealHorizontal: !0};
            this.context.privateViewEventBus.emit(m.EventNames.RevealRangeEvent, t);
            var n = this.viewHelper.visibleRangeForPositionRelativeToEditor(this.cursorPosition.lineNumber, this.cursorPosition.column);
            n && (this.textArea.style.left = this.contentLeft + n.left + "px", this.textArea.style.top = n.top + "px"), this.textArea.style.height = this.context.configuration.editor.lineHeight + "px", f.addClass(this.viewHelper.viewDomNode, "ime-input")
        }, t.prototype.hideTextArea = function () {
            this.textArea.style.height = "", this.textArea.style.left = "0px", this.textArea.style.top = "0px", f.removeClass(this.viewHelper.viewDomNode, "ime-input")
        }, t.prototype.onViewFocusChanged = function (e) {
            return this.hasFocus = e, this.hasFocus && this.asyncSelectTextAreaOnFocus.schedule(), !1
        }, t.prototype.onCursorSelectionChanged = function (e) {
            return this.selection = e.selection, this.asyncSetSelectionToTextArea.schedule(), !1
        }, t.prototype.onCursorPositionChanged = function (e) {
            return this.cursorPosition = e.position, !1
        }, t.prototype.onLayoutChanged = function (e) {
            return this.contentLeft = e.contentLeft, !1
        }, t.prototype.setTextAreaValue = function (e, t) {
            this.lastValueWrittenToTheTextArea = e, this.textArea.value = e, t && this.hasFocus && !g.isTesting() && f.selectTextInInputElement(this.textArea)
        }, t.prototype._onKeyDown = function (e) {
            this.viewController.emitKeyDown(e)
        }, t.prototype._onKeyUp = function (e) {
            this.viewController.emitKeyUp(e)
        }, t.prototype._onKeyPress = function (e) {
            if (this.hasFocus) {
                if (g.browser.isOpera && g.browser.isWindows) {
                    if ("Ctrl-X" === e.asString())return this._onCut(null), void 0;
                    if ("Ctrl-V" === e.asString())return this._onPaste(null), void 0;
                    if ("Ctrl-C" === e.asString())return this._onCopy(null), void 0
                }
                this.lastKeyPressTime = (new Date).getTime(), this._scheduleReadFromTextArea(E.Type)
            }
        }, t.prototype._selectTextAreaIfFocused = function () {
            if (this.hasFocus)try {
                f.selectTextInInputElement(this.textArea)
            } catch (e) {
            }
        }, t.prototype._scheduleReadFromTextArea = function (e) {
            var t = this;
            this.asyncSetSelectionToTextArea.cancel(), this.asyncSelectTextAreaOnFocus.cancel(), this.asyncReadFromTextArea.setRunner(function () {
                return t._readFromTextArea(e)
            }), this.asyncReadFromTextArea.schedule()
        }, t.prototype._readFromTextArea = function (e) {
            if (this.textArea.selectionStart === this.textArea.selectionEnd) {
                var t = this.textArea.value;
                "" !== t && (this.setTextAreaValue("", !1), e === E.Type ? this.executeType(t) : this.executePaste(t))
            }
        }, t.prototype.executePaste = function (e) {
            if ("" !== e) {
                var t = e === this.lastCopiedValue;
                this.viewController.paste("keyboard", e, t)
            }
        }, t.prototype.executeType = function (e) {
            "" !== e && this.viewController.type("keyboard", e)
        }, t.prototype._writePlaceholderAndSelectTextArea = function () {
            var e = String.fromCharCode(C);
            if ((this.textArea.value !== e || this.textArea.selectionStart === this.textArea.selectionEnd) && this.setTextAreaValue(e, !0), g.browser.isIE10) {
                var t = this._getAccessibilityOutput();
                this.accessiblilityOutput.textContent = t
            }
        }, t.prototype._getAccessibilityOutput = function () {
            var e = this.selection, t = "";
            if (e.isEmpty()) {
                var n = e.startLineNumber;
                e = new c.Range(n, 1, n, this.context.model.getLineMaxColumn(n)), t = "\n"
            }
            var i = this.context.model.getValueInRange(e, v.EndOfLinePreference.LF) + t;
            return i.substr(0, 1e4)
        }, t.prototype._onPaste = function (e) {
            e && e.clipboardData ? (e.preventDefault(), this.executePaste(e.clipboardData.getData("text/plain"))) : e && window.clipboardData ? (e.preventDefault(), this.executePaste(window.clipboardData.getData("Text"))) : (this.textArea.selectionStart !== this.textArea.selectionEnd && this.setTextAreaValue("", !1), this._scheduleReadFromTextArea(E.Paste)), this.justHadAPaste = !0
        }, t.prototype._onCopy = function (e) {
            this._ensureClipboardGetsEditorSelection(e)
        }, t.prototype._triggerCut = function () {
            this.viewController.cut("keyboard")
        }, t.prototype._onCut = function (e) {
            this._ensureClipboardGetsEditorSelection(e), this.asyncTriggerCut.schedule(), this.justHadACut = !0
        }, t.prototype._ensureClipboardGetsEditorSelection = function (e) {
            var t = this._getPlainTextToCopy();
            e && e.clipboardData ? (e.clipboardData.setData("text/plain", t), e.preventDefault()) : e && window.clipboardData ? (window.clipboardData.setData("Text", t), e.preventDefault()) : this.setTextAreaValue(t, !0), this.lastCopiedValue = g.browser.isFirefox ? t.replace(/\r\n/g, "\n") : t
        }, t.prototype._getPlainTextToCopy = function () {
            var e = g.browser.isWindows ? "\r\n" : "\n", t = g.browser.isWindows ? v.EndOfLinePreference.CRLF : v.EndOfLinePreference.LF, n = this.context.model.getSelections();
            if (1 === n.length) {
                var i = this.selection;
                if (i.isEmpty()) {
                    var o = this.context.model.convertViewPositionToModelPosition(i.startLineNumber, 1).lineNumber;
                    return this.context.model.getModelLineContent(o) + e
                }
                return this.context.model.getValueInRange(i, t)
            }
            n = n.slice(0).sort(c.RangeUtils.compareRangesUsingStarts);
            for (var r = [], s = 0; s < n.length; s++)r.push(this.context.model.getValueInRange(n[s], t));
            return r.join(e)
        }, t
    }(y.ViewEventHandler);
    t.KeyboardHandler = w
}), define("vs/editor/core/controller/mouseTarget", ["require", "exports", "vs/editor/core/position", "vs/editor/core/range", "vs/editor/core/view/viewContext", "vs/editor/editor"], function (e, t, n, i, o, r) {
    "use strict";
    var s = n, a = i, u = o, l = r, d = function () {
        function e(e, t, n, i, o) {
            "undefined" == typeof n && (n = null), "undefined" == typeof i && (i = null), "undefined" == typeof o && (o = null), this.element = e, this.type = t, this.position = n, !i && n && (i = new a.Range(n.lineNumber, n.column, n.lineNumber, n.column)), this.range = i, this.detail = o
        }

        return e.prototype._typeToString = function () {
            return this.type === l.MouseTargetType.TEXTAREA ? "TEXTAREA" : this.type === l.MouseTargetType.GUTTER_GLYPH_MARGIN ? "GUTTER_GLYPH_MARGIN" : this.type === l.MouseTargetType.GUTTER_LINE_NUMBERS ? "GUTTER_LINE_NUMBERS" : this.type === l.MouseTargetType.GUTTER_LINE_DECORATIONS ? "GUTTER_LINE_DECORATIONS" : this.type === l.MouseTargetType.GUTTER_VIEW_ZONE ? "GUTTER_VIEW_ZONE" : this.type === l.MouseTargetType.CONTENT_TEXT ? "CONTENT_TEXT" : this.type === l.MouseTargetType.CONTENT_EMPTY ? "CONTENT_EMPTY" : this.type === l.MouseTargetType.CONTENT_VIEW_ZONE ? "CONTENT_VIEW_ZONE" : this.type === l.MouseTargetType.CONTENT_WIDGET ? "CONTENT_WIDGET" : this.type === l.MouseTargetType.OVERVIEW_RULER ? "OVERVIEW_RULER" : this.type === l.MouseTargetType.SCROLLBAR ? "SCROLLBAR" : this.type === l.MouseTargetType.OVERLAY_WIDGET ? "OVERLAY_WIDGET" : "UNKNOWN"
        }, e.prototype.toString = function () {
            return this._typeToString() + ": " + this.position + " - " + this.range + " - " + this.detail
        }, e
    }(), c = {IS_TEXTAREA_COVER: new RegExp("^[^/]*" + u.ClassNames.TEXTAREA_COVER + "[^/]*$"), IS_TEXTAREA: new RegExp("^" + u.ClassNames.TEXTAREA + "$"), IS_VIEW_LINES: new RegExp("^[^/]+/[^/]+/" + u.ClassNames.VIEW_LINES + "$"), IS_CHILD_OF_VIEW_LINES: new RegExp("^[^/]+/[^/]+/" + u.ClassNames.VIEW_LINES), IS_CHILD_OF_SCROLLABLE_ELEMENT: new RegExp("^[^/]*" + u.ClassNames.SCROLLABLE_ELEMENT), IS_CHILD_OF_CONTENT_WIDGETS: new RegExp("^[^/]+/[^/]+/" + u.ClassNames.CONTENT_WIDGETS), IS_CHILD_OF_OVERLAY_WIDGETS: new RegExp("^" + u.ClassNames.OVERLAY_WIDGETS), IS_CHILD_OF_LINES_DECORATIONS: new RegExp(u.ClassNames.LINES_DECORATIONS), IS_CHILD_OF_LINE_NUMBERS: new RegExp("^[^/]+/[^/]+/" + u.ClassNames.LINE_NUMBERS), IS_CHILD_OF_GLYPH_MARGIN: new RegExp("^[^/]+/[^/]+/" + u.ClassNames.GLYPH_MARGIN)}, h = function () {
        function e(e, t) {
            this.context = e, this.viewHelper = t
        }

        return e.prototype.getClassNamePathTo = function (e, t) {
            for (var n, i = []; e && e !== document.body && e !== t;)e.nodeType === e.ELEMENT_NODE && (n = e.className, n && i.unshift(n)), e = e.parentNode;
            return i.join("/")
        }, e.prototype.createMouseTarget = function (e, t, n) {
            var i = Math.max(0, this.viewHelper.getScrollTop() + (t.posy - e.top)), o = this.viewHelper.getScrollLeft() + (t.posx - e.left), r = t.target, s = this.getClassNamePathTo(r, this.viewHelper.viewDomNode), a = r.hasAttribute("lineNumber") ? r.getAttribute("lineNumber") : null, u = r.hasAttribute("column") ? r.getAttribute("column") : null;
            if (a && u)return this.createMouseTargetFromViewCursor(r, parseInt(a, 10), parseInt(u, 10));
            if (c.IS_CHILD_OF_CONTENT_WIDGETS.test(s))return this.createMouseTargetFromContentWidgetsChild(r);
            if (c.IS_CHILD_OF_OVERLAY_WIDGETS.test(s))return this.createMouseTargetFromOverlayWidgetsChild(r);
            if (c.IS_TEXTAREA_COVER.test(s))return this.context.configuration.editor.glyphMargin ? this.createMouseTargetFromGlyphMargin(r, i) : this.context.configuration.editor.lineNumbers ? this.createMouseTargetFromLineNumbers(r, i) : this.createMouseTargetFromLinesDecorationsChild(r, i);
            if (c.IS_TEXTAREA.test(s))return new d(r, l.MouseTargetType.TEXTAREA);
            if (c.IS_VIEW_LINES.test(s))return this.createMouseTargetFromViewLines(r, i);
            if (!n || c.IS_CHILD_OF_VIEW_LINES.test(s)) {
                var h = this._doHitTest(e, t);
                if (h.position)return this.createMouseTargetFromHitTestPosition(r, h.position.lineNumber, h.position.column, o);
                h.hitTarget && (r = h.hitTarget, s = this.getClassNamePathTo(r, this.viewHelper.viewDomNode))
            }
            return c.IS_CHILD_OF_SCROLLABLE_ELEMENT.test(s) ? this.createMouseTargetFromScrollbar(r, i) : c.IS_CHILD_OF_LINES_DECORATIONS.test(s) ? this.createMouseTargetFromLinesDecorationsChild(r, i) : c.IS_CHILD_OF_LINE_NUMBERS.test(s) ? this.createMouseTargetFromLineNumbers(r, i) : c.IS_CHILD_OF_GLYPH_MARGIN.test(s) ? this.createMouseTargetFromGlyphMargin(r, i) : this.createMouseTargetFromUnknownTarget(r)
        }, e.prototype._isChild = function (e, t, n) {
            for (; e && e !== document.body;) {
                if (e === t)return!0;
                if (e === n)return!1;
                e = e.parentNode
            }
            return!1
        }, e.prototype._findAttribute = function (e, t, n) {
            for (; e && e !== document.body;) {
                if (e.hasAttribute(t))return e.getAttribute(t);
                if (e === n)return null;
                e = e.parentNode
            }
            return null
        }, e.prototype._doHitTestWithCaretRangeFromPoint = function (e, t) {
            var n = null, i = null, o = t.posx - document.body.scrollLeft - document.documentElement.scrollLeft, r = t.posy - document.body.scrollTop - document.documentElement.scrollTop, s = document.caretRangeFromPoint(o, r), a = s ? s.startContainer : null, l = a ? a.parentNode : null, d = l ? l.parentNode : null, c = d ? d.parentNode : null, h = c && c.nodeType === c.ELEMENT_NODE ? c.className : "";
            return h === u.ClassNames.VIEW_LINE ? n = this.viewHelper.getPositionFromDOMInfo(s.startContainer.parentNode, s.startOffset) : i = l, s.detach(), {position: n, hitTarget: i}
        }, e.prototype._doHitTestWithRangeProperties = function (e) {
            var t, n, i = null, o = null;
            e.browserEvent.rangeParent ? (t = e.browserEvent.rangeParent, n = e.browserEvent.rangeOffset) : (t = e.extraData.rangeParent, n = e.extraData.rangeOffset);
            var r = document.createRange();
            return r.setStart(t, n), r.collapse(!0), i = this.viewHelper.getPositionFromDOMInfo(r.startContainer.parentNode, r.startOffset), r.detach(), {position: i, hitTarget: o}
        }, e.prototype._doHitTestWithMoveToPoint = function (e) {
            var t = null, n = null, i = document.body.createTextRange();
            try {
                var o = e.posx - document.body.scrollLeft - document.documentElement.scrollLeft, r = e.posy - document.body.scrollTop - document.documentElement.scrollTop;
                i.moveToPoint(o, r)
            } catch (s) {
                return{position: null, hitTarget: null}
            }
            i.collapse(!0);
            var a = i ? i.parentElement() : null, l = a ? a.parentNode : null, d = l ? l.parentNode : null, c = d && d.nodeType === d.ELEMENT_NODE ? d.className : "";
            if (c === u.ClassNames.VIEW_LINE) {
                var h = i.duplicate();
                h.moveToElementText(a), h.setEndPoint("EndToStart", i), t = this.viewHelper.getPositionFromDOMInfo(a, h.text.length), h.moveToElementText(this.viewHelper.viewDomNode)
            } else n = a;
            return i.moveToElementText(this.viewHelper.viewDomNode), {position: t, hitTarget: n}
        }, e.prototype._doHitTest = function (e, t) {
            return document.caretRangeFromPoint ? this._doHitTestWithCaretRangeFromPoint(e, t) : t.extraData || t.browserEvent.rangeParent ? this._doHitTestWithRangeProperties(t) : document.body.createTextRange ? this._doHitTestWithMoveToPoint(t) : {position: null, hitTarget: null}
        }, e.prototype._getZoneAtCoord = function (e) {
            var t = this.viewHelper.getWhitespaceAtVerticalOffset(e);
            if (t) {
                var n, i, o = t.verticalOffset + t.height / 2, r = this.context.model.getLineCount();
                t.afterLineNumber === r || o > e && t.afterLineNumber > 0 ? (n = t.afterLineNumber, i = this.context.model.getLineMaxColumn(n)) : (n = t.afterLineNumber + 1, i = 1);
                var a = new s.Position(n, i);
                return{viewZoneId: t.id, position: a}
            }
            return null
        }, e.prototype._getFullLineRangeAtCoord = function (e) {
            var t = this.viewHelper.getLineNumberAtVerticalOffset(e), n = this.context.model.getLineMaxColumn(t);
            return new a.Range(t, 1, t, n)
        }, e.prototype.createMouseTargetFromViewCursor = function (e, t, n) {
            return new d(e, l.MouseTargetType.CONTENT_TEXT, new s.Position(t, n))
        }, e.prototype.createMouseTargetFromViewLines = function (e, t) {
            var n = this._getZoneAtCoord(t);
            if (n)return new d(e, l.MouseTargetType.CONTENT_VIEW_ZONE, n.position, null, n.viewZoneId);
            var i = this.context.model.getLineCount(), o = this.context.model.getLineMaxColumn(i);
            return new d(e, l.MouseTargetType.CONTENT_EMPTY, new s.Position(i, o))
        }, e.prototype.createMouseTargetFromHitTestPosition = function (e, t, n, i) {
            var o = new s.Position(t, n), r = this.viewHelper.getLineWidth(t);
            if (i > r)return new d(e, l.MouseTargetType.CONTENT_EMPTY, o);
            var u = this.viewHelper.visibleRangeForPosition2(t, n).left;
            if (i === u)return new d(e, l.MouseTargetType.CONTENT_TEXT, o);
            var c;
            if (n > 1) {
                var h = this.viewHelper.visibleRangeForPosition2(t, n).left;
                if (c = !1, c = c || i > h && u > i, c = c || i > u && h > i) {
                    var p = new a.Range(t, n, t, n - 1);
                    return new d(e, l.MouseTargetType.CONTENT_TEXT, o, p)
                }
            }
            var f = this.context.model.getLineMaxColumn(t);
            if (f > n) {
                var g = this.viewHelper.visibleRangeForPosition2(t, n + 1);
                if (g) {
                    var m = this.viewHelper.visibleRangeForPosition2(t, n + 1).left;
                    if (c = !1, c = c || i > u && m > i, c = c || i > m && u > i) {
                        var p = new a.Range(t, n, t, n + 1);
                        return new d(e, l.MouseTargetType.CONTENT_TEXT, o, p)
                    }
                }
            }
            return new d(e, l.MouseTargetType.CONTENT_TEXT, o)
        }, e.prototype.createMouseTargetFromContentWidgetsChild = function (e) {
            var t = this._findAttribute(e, "widgetId", this.viewHelper.viewDomNode);
            return t ? new d(e, l.MouseTargetType.CONTENT_WIDGET, null, null, t) : new d(e, l.MouseTargetType.UNKNOWN)
        }, e.prototype.createMouseTargetFromOverlayWidgetsChild = function (e) {
            var t = this._findAttribute(e, "widgetId", this.viewHelper.viewDomNode);
            return t ? new d(e, l.MouseTargetType.OVERLAY_WIDGET, null, null, t) : new d(e, l.MouseTargetType.UNKNOWN)
        }, e.prototype.createMouseTargetFromLinesDecorationsChild = function (e, t) {
            var n = this._getZoneAtCoord(t);
            if (n)return new d(e, l.MouseTargetType.GUTTER_VIEW_ZONE, n.position, null, n.viewZoneId);
            var i = this._getFullLineRangeAtCoord(t);
            return new d(e, l.MouseTargetType.GUTTER_LINE_DECORATIONS, new s.Position(i.startLineNumber, 1), i)
        }, e.prototype.createMouseTargetFromLineNumbers = function (e, t) {
            var n = this._getZoneAtCoord(t);
            if (n)return new d(e, l.MouseTargetType.GUTTER_VIEW_ZONE, n.position, null, n.viewZoneId);
            var i = this._getFullLineRangeAtCoord(t);
            return new d(e, l.MouseTargetType.GUTTER_LINE_NUMBERS, new s.Position(i.startLineNumber, 1), i)
        }, e.prototype.createMouseTargetFromGlyphMargin = function (e, t) {
            var n = this._getZoneAtCoord(t);
            if (n)return new d(e, l.MouseTargetType.GUTTER_VIEW_ZONE, n.position, null, n.viewZoneId);
            var i = this._getFullLineRangeAtCoord(t);
            return new d(e, l.MouseTargetType.GUTTER_GLYPH_MARGIN, new s.Position(i.startLineNumber, 1), i)
        }, e.prototype.createMouseTargetFromScrollbar = function (e) {
            return new d(e, l.MouseTargetType.SCROLLBAR)
        }, e.prototype.createMouseTargetFromUnknownTarget = function (e) {
            var t = this._isChild(e, this.viewHelper.viewDomNode, this.viewHelper.viewDomNode), n = null;
            return t && (n = this._findAttribute(e, "widgetId", this.viewHelper.viewDomNode)), n ? new d(e, l.MouseTargetType.OVERLAY_WIDGET, null, null, n) : new d(e, l.MouseTargetType.UNKNOWN)
        }, e
    }();
    t.MouseTargetFactory = h
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/controller/mouseHandler", ["require", "exports", "vs/base/env", "vs/editor/core/position", "vs/base/dom/mouseEvent", "vs/base/dom/dom", "vs/editor/editor", "vs/editor/core/controller/mouseTarget", "vs/editor/core/view/viewEventHandler", "vs/base/lifecycle", "vs/base/dom/globalMouseMoveMonitor"], function (e, t, n, i, o, r, s, a, u, l, d) {
    "use strict";
    var c = n, h = i, p = o, f = r, g = s, m = a, v = u, y = l, b = d, C = function (e, t) {
        var n = null;
        t.rangeParent && (n = {rangeParent: t.rangeParent, rangeOffset: t.rangeOffset});
        var i = new p.StandardMouseEvent(t, n);
        return i.preventDefault(), i
    }, E = function (e) {
        function t(n, i, o) {
            var r = this;
            e.call(this), this.context = n, this.viewController = i, this.viewHelper = o, this.mouseTargetFactory = new m.MouseTargetFactory(this.context, o), this.listenersToRemove = [], this.hideTextAreaTimeout = -1, this.toDispose = [], this.mouseMoveMonitor = new b.GlobalMouseMoveMonitor, this.toDispose.push(this.mouseMoveMonitor), this.lastMouseEvent = null, this.lastMouseDownPosition = null, this.lastMouseDownPositionEqualCount = 0, this.lastMouseDownCount = 0, this.lastSetMouseDownCountTime = 0, this.onScrollTimeout = -1, this.layoutWidth = 0, this.layoutHeight = 0, this.listenersToRemove.push(f.addListener(this.viewHelper.viewDomNode, "contextmenu", function (e) {
                return r._onContextMenu(e)
            })), this.listenersToRemove.push(f.addThrottledListener(this.viewHelper.viewDomNode, "mousemove", function (e) {
                return r._onMouseMove(e)
            }, C, t.MOUSE_MOVE_MINIMUM_TIME)), this.listenersToRemove.push(f.addListener(this.viewHelper.viewDomNode, "mouseup", function (e) {
                return r._onMouseUp(e)
            })), this.listenersToRemove.push(f.addNonBubblingMouseOutListener(this.viewHelper.viewDomNode, function (e) {
                return r._onMouseLeave(e)
            })), this.listenersToRemove.push(f.addListener(this.viewHelper.viewDomNode, "mousedown", function (e) {
                return r._onMouseDown(e)
            })), this.context.addEventHandler(this)
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this.context.removeEventHandler(this), this.listenersToRemove.forEach(function (e) {
                e()
            }), this.listenersToRemove = [], this.toDispose = y.disposeAll(this.toDispose), this._unhook(), -1 !== this.hideTextAreaTimeout && (window.clearTimeout(this.hideTextAreaTimeout), this.hideTextAreaTimeout = -1)
        }, t.prototype.onLayoutChanged = function () {
            return!1
        }, t.prototype.onScrollChanged = function (e) {
            return this.mouseMoveMonitor.isMonitoring() && this._hookedOnScroll(e), !1
        }, t.prototype._onContextMenu = function (e) {
            var t = new p.StandardMouseEvent(e), n = f.getDomNodePosition(this.viewHelper.linesContentDomNode), i = this.mouseTargetFactory.createMouseTarget(n, t, !0), o = {event: t, target: i};
            this.viewController.emitContextMenu(o)
        }, t.prototype._onMouseMove = function (e) {
            if (!this.mouseMoveMonitor.isMonitoring()) {
                var t = f.getDomNodePosition(this.viewHelper.linesContentDomNode), n = this.mouseTargetFactory.createMouseTarget(t, e, !0), i = {event: e, target: n};
                this.viewController.emitMouseMove(i)
            }
        }, t.prototype._onMouseLeave = function (e) {
            var t = {event: new p.StandardMouseEvent(e), target: null};
            this.viewController.emitMouseLeave(t)
        }, t.prototype._onMouseUp = function (e) {
            var t = new p.StandardMouseEvent(e), n = f.getDomNodePosition(this.viewHelper.linesContentDomNode), i = this.mouseTargetFactory.createMouseTarget(n, t, !0), o = {event: t, target: i};
            this.viewController.emitMouseUp(o)
        }, t.prototype._onMouseDown = function (e) {
            var t = this, n = new p.StandardMouseEvent(e), i = f.getDomNodePosition(this.viewHelper.linesContentDomNode), o = this.mouseTargetFactory.createMouseTarget(i, n, !0), r = o.type === g.MouseTargetType.CONTENT_TEXT || o.type === g.MouseTargetType.CONTENT_EMPTY, s = o.type === g.MouseTargetType.GUTTER_GLYPH_MARGIN || o.type === g.MouseTargetType.GUTTER_LINE_NUMBERS || o.type === g.MouseTargetType.GUTTER_LINE_DECORATIONS, a = o.type === g.MouseTargetType.GUTTER_LINE_NUMBERS, u = this.context.configuration.editor.selectOnLineNumbers;
            n.leftButton && (r || a && u) ? (c.browser.isIE10 ? n.browserEvent.fromElement ? (n.preventDefault(), this.viewHelper.focusTextArea()) : setTimeout(function () {
                t.viewHelper.focusTextArea()
            }) : (n.preventDefault(), this.viewHelper.focusTextArea()), this._updateMouse(o.type, n, n.shiftKey, n.detail), this._hook(o.type)) : s && n.preventDefault();
            var l = {event: n, target: o};
            this.viewController.emitMouseDown(l)
        }, t.prototype._hookedOnScroll = function () {
            var e = this;
            -1 === this.onScrollTimeout && (this.onScrollTimeout = window.setTimeout(function () {
                e.onScrollTimeout = -1, e._updateMouse(e.monitoringStartTargetType, null, !0)
            }, 10))
        }, t.prototype._hook = function (e) {
            var t = this;
            this.mouseMoveMonitor.isMonitoring() || (this.monitoringStartTargetType = e, this.mouseMoveMonitor.startMonitoring(C, function (e) {
                t._updateMouse(t.monitoringStartTargetType, e, !0)
            }, function () {
                t._unhook()
            }))
        }, t.prototype._unhook = function () {
            -1 !== this.onScrollTimeout && (window.clearTimeout(this.onScrollTimeout), this.onScrollTimeout = -1)
        }, t.prototype._getPositionOutsideEditor = function (e, t) {
            var n;
            return t.posy < e.top ? (n = this.viewHelper.getLineNumberAtVerticalOffset(Math.max(this.viewHelper.getScrollTop() - (e.top - t.posy), 0)), {lineNumber: n, column: 1}) : t.posy > e.top + e.height ? (n = this.viewHelper.getLineNumberAtVerticalOffset(this.viewHelper.getScrollTop() + (t.posy - e.top)), {lineNumber: n, column: this.context.model.getLineMaxColumn(n)}) : (n = this.viewHelper.getLineNumberAtVerticalOffset(this.viewHelper.getScrollTop() + (t.posy - e.top)), t.posx < e.left ? {lineNumber: n, column: 1} : t.posx > e.left + e.width ? {lineNumber: n, column: this.context.model.getLineMaxColumn(n)} : null)
        }, t.prototype._updateMouse = function (e, n, i, o) {
            "undefined" == typeof o && (o = 0), n = n || this.lastMouseEvent, this.lastMouseEvent = n;
            var r, s, a = f.getDomNodePosition(this.viewHelper.viewDomNode), u = this._getPositionOutsideEditor(a, n);
            if (u)r = u.lineNumber, s = u.column; else {
                var l = this.mouseTargetFactory.createMouseTarget(a, n, !0), d = l.position;
                if (!d)return;
                r = d.lineNumber, s = d.column
            }
            if (o) {
                var c = (new Date).getTime();
                c - this.lastSetMouseDownCountTime > t.CLEAR_MOUSE_DOWN_COUNT_TIME && (o = 1), this.lastSetMouseDownCountTime = c, o > this.lastMouseDownCount + 1 && (o = this.lastMouseDownCount + 1);
                var p = new h.Position(r, s);
                this.lastMouseDownPosition && this.lastMouseDownPosition.equals(p) ? this.lastMouseDownPositionEqualCount++ : this.lastMouseDownPositionEqualCount = 1, this.lastMouseDownPosition = p, this.lastMouseDownCount = Math.min(o, this.lastMouseDownPositionEqualCount), n.detail = this.lastMouseDownCount
            }
            if (e === g.MouseTargetType.GUTTER_LINE_NUMBERS)n.altKey ? i ? this.viewController.lastCursorLineSelect("mouse", r, s) : this.viewController.createCursor("mouse", r, s, !0) : i ? this.viewController.lineSelectDrag("mouse", r, s) : this.viewController.lineSelect("mouse", r, s); else if (this.lastMouseDownCount >= 4)this.viewController.selectAll("mouse"); else if (3 === this.lastMouseDownCount)n.altKey ? i ? this.viewController.lastCursorLineSelectDrag("mouse", r, s) : this.viewController.lastCursorLineSelect("mouse", r, s) : i ? this.viewController.lineSelectDrag("mouse", r, s) : this.viewController.lineSelect("mouse", r, s); else if (2 === this.lastMouseDownCount) {
                var m = a.left + this.viewHelper.visibleRangeForPosition2(r, s).left, v = "none";
                n.posx > m ? v = "right" : n.posx < m && (v = "left"), n.altKey ? this.viewController.lastCursorWordSelect("mouse", r, s, v) : i ? this.viewController.wordSelectDrag("mouse", r, s, v) : this.viewController.wordSelect("mouse", r, s, v)
            } else n.altKey ? i ? this.viewController.lastCursorMoveToSelect("mouse", r, s) : this.viewController.createCursor("mouse", r, s, !1) : i ? this.viewController.moveToSelect("mouse", r, s) : this.viewController.moveTo("mouse", r, s)
        }, t.CLEAR_MOUSE_DOWN_COUNT_TIME = 400, t.MOUSE_MOVE_MINIMUM_TIME = 100, t
    }(v.ViewEventHandler);
    t.MouseHandler = E
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/controller/pointerHandler", ["require", "exports", "vs/base/dom/mouseEvent", "vs/base/dom/dom", "vs/base/dom/touch", "vs/editor/core/controller/mouseHandler"], function (e, t, n, i, o, r) {
    "use strict";
    var s = n, a = i, u = o, l = r, d = function (e) {
        function t(t, n, i) {
            var o = this;
            e.call(this, t, n, i);
            var r = function (e, t) {
                var n = {translationY: t.translationY, translationX: t.translationX};
                return e && (n.translationY += e.translationY, n.translationX += e.translationX), n
            };
            this.viewHelper.linesContentDomNode.style.msTouchAction = "none", this.viewHelper.linesContentDomNode.style.msContentZooming = "none", window.setTimeout(function () {
                if (window.MSGesture) {
                    var e = new MSGesture;
                    e.target = o.viewHelper.linesContentDomNode, o.viewHelper.linesContentDomNode.addEventListener("MSPointerDown", function (t) {
                        var n = t.pointerType;
                        o._lastPointerType = n === (t.MSPOINTER_TYPE_MOUSE || "mouse") ? "mouse" : n === (t.MSPOINTER_TYPE_TOUCH || "touch") ? "touch" : "pen", "mouse" !== o._lastPointerType && e.addPointer(t.pointerId)
                    }), o.listenersToRemove.push(a.addThrottledListener(o.viewHelper.linesContentDomNode, "MSGestureChange", function (e) {
                        return o._onGestureChange(e)
                    }, r)), o.listenersToRemove.push(a.addListener(o.viewHelper.linesContentDomNode, "MSGestureTap", function (e) {
                        return o._onCaptureGestureTap(e)
                    }, !0))
                }
            }, 100), this._lastPointerType = "mouse"
        }

        return __extends(t, e), t.prototype._onMouseDown = function (t) {
            "mouse" === this._lastPointerType && e.prototype._onMouseDown.call(this, t)
        }, t.prototype._onCaptureGestureTap = function (e) {
            var t = this, n = new s.StandardMouseEvent(e), i = a.getDomNodePosition(this.viewHelper.linesContentDomNode), o = this.mouseTargetFactory.createMouseTarget(i, n, !1);
            o.position && this.viewController.moveTo("mouse", o.position.lineNumber, o.position.column), n.browserEvent.fromElement ? (n.preventDefault(), this.viewHelper.focusTextArea()) : setTimeout(function () {
                t.viewHelper.focusTextArea()
            })
        }, t.prototype._onGestureChange = function (e) {
            this.viewHelper.setScrollTop(this.viewHelper.getScrollTop() - e.translationY), this.viewHelper.setScrollLeft(this.viewHelper.getScrollLeft() - e.translationX)
        }, t.prototype.dispose = function () {
            e.prototype.dispose.call(this)
        }, t
    }(l.MouseHandler), c = function (e) {
        function t(t, n, i) {
            var o = this;
            e.call(this, t, n, i), this.gesture = new u.Gesture(this.viewHelper.linesContentDomNode), this.listenersToRemove.push(a.addListener(this.viewHelper.linesContentDomNode, u.EventType.Tap, function (e) {
                return o.onTap(e)
            })), this.listenersToRemove.push(a.addListener(this.viewHelper.linesContentDomNode, u.EventType.Change, function (e) {
                return o.onChange(e)
            }))
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this.gesture.dispose(), e.prototype.dispose.call(this)
        }, t.prototype.onTap = function (e) {
            e.preventDefault(), this.viewHelper.focusTextArea();
            var t = a.getDomNodePosition(this.viewHelper.linesContentDomNode), n = new s.StandardMouseEvent(e), i = this.mouseTargetFactory.createMouseTarget(t, n, !1);
            i.position && this.viewController.moveTo("mouse", i.position.lineNumber, i.position.column)
        }, t.prototype.onChange = function (e) {
            this.viewHelper.setScrollTop(this.viewHelper.getScrollTop() - e.translationY), this.viewHelper.setScrollLeft(this.viewHelper.getScrollLeft() - e.translationX)
        }, t
    }(l.MouseHandler), h = function () {
        function e(e, t, n) {
            this.handler = window.navigator.msPointerEnabled ? new d(e, t, n) : window.TouchEvent ? new c(e, t, n) : new l.MouseHandler(e, t, n)
        }

        return e.prototype.onScrollChanged = function (e) {
            this.handler.onScrollChanged(e)
        }, e.prototype.dispose = function () {
            this.handler.dispose()
        }, e
    }();
    t.PointerHandler = h
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/selection", ["require", "exports", "vs/editor/core/range", "vs/editor/editor"], function (e, t, n, i) {
    "use strict";
    function o(e) {
        return e && "number" == typeof e.selectionStartLineNumber && "number" == typeof e.selectionStartColumn && "number" == typeof e.positionLineNumber && "number" == typeof e.positionColumn
    }

    function r(e, t, n, i, o) {
        return o === a.SelectionDirection.LTR ? new u(e, t, n, i) : new u(n, i, e, t)
    }

    var s = n, a = i;
    t.isISelection = o, t.createWithDirection = r;
    var u = function (e) {
        function t(t, n, i, o) {
            this.selectionStartLineNumber = t, this.selectionStartColumn = n, this.positionLineNumber = i, this.positionColumn = o, e.call(this, t, n, i, o)
        }

        return __extends(t, e), t.prototype.clone = function () {
            return new t(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn)
        }, t.prototype.equalsSelection = function (e) {
            return this.selectionStartLineNumber === e.selectionStartLineNumber && this.selectionStartColumn === e.selectionStartColumn && this.positionLineNumber === e.positionLineNumber && this.positionColumn === e.positionColumn
        }, t.prototype.getDirection = function () {
            return this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn ? a.SelectionDirection.LTR : a.SelectionDirection.RTL
        }, t.prototype.setEndPosition = function (e, n) {
            return this.getDirection() === a.SelectionDirection.LTR ? new t(this.startLineNumber, this.startColumn, e, n) : new t(e, n, this.startLineNumber, this.startColumn)
        }, t.prototype.setStartPosition = function (e, n) {
            return this.getDirection() === a.SelectionDirection.LTR ? new t(e, n, this.endLineNumber, this.endColumn) : new t(this.endLineNumber, this.endColumn, e, n)
        }, t
    }(s.Range);
    t.Selection = u
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/command/replaceCommand", ["require", "exports", "vs/editor/core/selection"], function (e, t, n) {
    "use strict";
    var i = n, o = function () {
        function e(e, t) {
            this._range = e, this._text = t
        }

        return e.prototype.getEditOperations = function (e, t) {
            t.addEditOperation(this._range, this._text)
        }, e.prototype.computeCursorState = function (e, t) {
            var n = t.getInverseEditOperations(), o = n[0].range;
            return new i.Selection(o.endLineNumber, o.endColumn, o.endLineNumber, o.endColumn)
        }, e
    }();
    t.ReplaceCommand = o;
    var r = function (e) {
        function t(t, n) {
            e.call(this, t, n)
        }

        return __extends(t, e), t.prototype.computeCursorState = function (e, t) {
            var n = t.getInverseEditOperations(), o = n[0].range;
            return new i.Selection(o.startLineNumber, o.startColumn, o.startLineNumber, o.startColumn)
        }, t
    }(o);
    t.ReplaceCommandWithoutChangingPosition = r;
    var s = function (e) {
        function t(t, n, i, o) {
            e.call(this, t, n), this._columnDeltaOffset = o, this._lineNumberDeltaOffset = i
        }

        return __extends(t, e), t.prototype.computeCursorState = function (e, t) {
            var n = t.getInverseEditOperations(), o = n[0].range;
            return new i.Selection(o.endLineNumber + this._lineNumberDeltaOffset, o.endColumn + this._columnDeltaOffset, o.endLineNumber + this._lineNumberDeltaOffset, o.endColumn + this._columnDeltaOffset)
        }, t
    }(o);
    t.ReplaceCommandWithOffsetCursorState = s;
    var a = function (e) {
        function t(t, n, i) {
            e.call(this, t, n), this._initialSelection = i
        }

        return __extends(t, e), t.prototype.getEditOperations = function (t, n) {
            e.prototype.getEditOperations.call(this, t, n), this._selectionId = n.trackSelection(this._initialSelection)
        }, t.prototype.computeCursorState = function (e, t) {
            return t.getTrackedSelection(this._selectionId)
        }, t
    }(o);
    t.ReplaceCommandThatPreservesSelection = a
}), define("vs/editor/core/command/surroundSelectionCommand", ["require", "exports", "vs/editor/core/range", "vs/editor/core/selection"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function () {
        function e(e, t, n) {
            this._range = e, this._charBeforeSelection = t, this._charAfterSelection = n
        }

        return e.prototype.getEditOperations = function (e, t) {
            t.addEditOperation(new o.Range(this._range.startLineNumber, this._range.startColumn, this._range.startLineNumber, this._range.startColumn), this._charBeforeSelection), t.addEditOperation(new o.Range(this._range.endLineNumber, this._range.endColumn, this._range.endLineNumber, this._range.endColumn), this._charAfterSelection)
        }, e.prototype.computeCursorState = function (e, t) {
            var n = t.getInverseEditOperations(), i = n[0].range, o = n[1].range;
            return new r.Selection(i.endLineNumber, i.endColumn, o.endLineNumber, o.endColumn - this._charAfterSelection.length)
        }, e
    }();
    t.SurroundSelectionCommand = s
}), define("vs/editor/core/controller/oneCursor", ["require", "exports", "vs/base/strings", "vs/editor/modes/modes", "vs/editor/core/position", "vs/editor/core/range", "vs/editor/core/command/shiftCommand", "vs/editor/core/command/replaceCommand", "vs/editor/core/command/surroundSelectionCommand", "vs/editor/core/selection", "vs/base/errors", "vs/editor/core/controller/cursorMoveHelper"], function (e, t, n, i, o, r, s, a, u, l, d, c) {
    "use strict";
    var h = n, p = i, f = o, g = r, m = s, v = a, y = u, b = l, C = d, E = c, w = function () {
        function e(e, t, n, i, o) {
            this.editorId = e, this.model = t, this.configuration = n, this.modeConfiguration = i, this.viewModelHelper = o, this.helper = new _(this.model, this.configuration), this.position = new f.Position(1, 1), this.viewPosition = new f.Position(1, 1), this.positionMarkerId = null, this.inSelectionMode = !1, this.selectionStart = null, this.viewSelectionStart = null, this.selStartMarkerId = null, this.selEndMarkerId = null, this.leftoverVisibleColumns = 0, this.bracketDecorations = [], this._cachedSelection = null, this._cachedViewSelection = null, this._stopSelectionMode(), this._setPosition(1, 1, 1, 1, 0)
        }

        return e.prototype.dispose = function () {
            this.positionMarkerId && (this.model._removeMarker(this.positionMarkerId), this.positionMarkerId = null), this.selStartMarkerId && (this.model._removeMarker(this.selStartMarkerId), this.selStartMarkerId = null), this.selEndMarkerId && (this.model._removeMarker(this.selEndMarkerId), this.selEndMarkerId = null), this.bracketDecorations = this.model.deltaDecorations(this.bracketDecorations, [], this.editorId)
        }, e.prototype.adjustBracketDecorations = function () {
            var e = null, t = this.getSelection();
            t.isEmpty() && !this.configuration.editor.readOnly && (e = this.model.matchBracket(this.position, !0));
            var n = [];
            if (e && e.brackets) {
                var i = {isOverlay: !1, className: "bracket-match"};
                n.push({range: e.brackets[0], options: i}), n.push({range: e.brackets[1], options: i})
            }
            this.bracketDecorations = this.model.deltaDecorations(this.bracketDecorations, n, this.editorId)
        }, e.computeSelection = function (e, t, n) {
            var i, o, r, s;
            return e ? t.isEmpty() ? (i = t.startLineNumber, o = t.startColumn, r = n.lineNumber, s = n.column) : n.isBeforeOrEqual(t.getStartPosition()) ? (i = t.endLineNumber, o = t.endColumn, r = n.lineNumber, s = n.column) : (i = t.startLineNumber, o = t.startColumn, r = n.lineNumber, s = n.column) : (i = n.lineNumber, o = n.column, r = n.lineNumber, s = n.column), new b.Selection(i, o, r, s)
        }, e.prototype.getSelection = function () {
            return this._cachedSelection || (this._cachedSelection = e.computeSelection(this.inSelectionMode, this.selectionStart, this.position)), this._cachedSelection
        }, e.prototype.getViewSelection = function () {
            return this._cachedViewSelection || (this._cachedViewSelection = e.computeSelection(this.inSelectionMode, this.viewSelectionStart, this.viewPosition)), this._cachedViewSelection
        }, e.prototype.setSelection = function (e) {
            var t = this.model.validatePosition({lineNumber: e.selectionStartLineNumber, column: e.selectionStartColumn}), n = this.model.validatePosition({lineNumber: e.positionLineNumber, column: e.positionColumn});
            t.equals(n) ? this._stopSelectionMode() : this._startSelectionModeFromPosition(t, this.viewModelHelper.convertModelPositionToViewPosition(t.lineNumber, t.column));
            var i = this.viewModelHelper.convertModelPositionToViewPosition(n.lineNumber, n.column);
            this._setPosition(n.lineNumber, n.column, i.lineNumber, i.column)
        }, e.prototype.getPosition = function () {
            return this.position
        }, e.prototype.getViewPosition = function () {
            return this.viewPosition
        }, e.prototype._getValidViewPosition = function () {
            return this.viewModelHelper.validateViewPosition(this.viewPosition.lineNumber, this.viewPosition.column, this.position)
        }, e.prototype._setPosition = function (e, t, n, i, o) {
            "undefined" == typeof o && (o = 0), this.position = new f.Position(e, t), this.viewPosition = new f.Position(n, i), this.leftoverVisibleColumns = o, this._cachedSelection = null, this._cachedViewSelection = null, this.positionMarkerId ? this.model._changeMarker(this.positionMarkerId, this.position.lineNumber - 1, this.position.column) : this.positionMarkerId = this.model._addMarker(this.position.lineNumber - 1, this.position.column, "")
        }, e.prototype._startSelectionModeFromPosition = function (e, t) {
            this.inSelectionMode = !0, this.selectionStart = new g.Range(e.lineNumber, e.column, e.lineNumber, e.column), this.viewSelectionStart = new g.Range(t.lineNumber, t.column, t.lineNumber, t.column), this._cachedSelection = null, this._cachedViewSelection = null, this._ensureSelectionMarkers()
        }, e.prototype._startSelectionModeFromRange = function (e, t) {
            this.inSelectionMode = !0, this.selectionStart = e, this.viewSelectionStart = t, this._cachedSelection = null, this._cachedViewSelection = null, this._ensureSelectionMarkers()
        }, e.prototype._stopSelectionMode = function () {
            this.inSelectionMode = !1, this.selectionStart = null, this.viewSelectionStart = null, this._cachedSelection = null, this._cachedViewSelection = null, this._ensureSelectionMarkers()
        }, e.prototype._ensureSelectionMarkers = function () {
            this.inSelectionMode ? (this.selStartMarkerId ? this.model._changeMarker(this.selStartMarkerId, this.selectionStart.startLineNumber - 1, this.selectionStart.startColumn) : this.selStartMarkerId = this.model._addMarker(this.selectionStart.startLineNumber - 1, this.selectionStart.startColumn, ""), this.selEndMarkerId ? this.model._changeMarker(this.selEndMarkerId, this.selectionStart.endLineNumber - 1, this.selectionStart.endColumn) : this.selEndMarkerId = this.model._addMarker(this.selectionStart.endLineNumber - 1, this.selectionStart.endColumn, "")) : (this.selStartMarkerId && (this.model._removeMarker(this.selStartMarkerId), this.selStartMarkerId = null), this.selEndMarkerId && (this.model._removeMarker(this.selEndMarkerId), this.selEndMarkerId = null))
        }, e.prototype._moveModelPosition = function (e, t, n, i, o, r, s) {
            var a = this.viewModelHelper.convertModelPositionToViewPosition(i, o);
            this._actualMove(e, t, n, i, o, a.lineNumber, a.column, r, s)
        }, e.prototype._moveViewPosition = function (e, t, n, i, o, r, s) {
            var a = this.viewModelHelper.convertViewToModelPosition(i, o);
            this._actualMove(e, t, n, a.lineNumber, a.column, i, o, r, s)
        }, e.prototype._actualMove = function (e, t, n, i, o, r, s, a, u) {
            if (t && (e.cursorPositionChangeReason = t), n && !this.inSelectionMode ? this._startSelectionModeFromPosition(this.position, this.viewPosition) : !n && this.inSelectionMode && this._stopSelectionMode(), u) {
                var l = this.model.getEditableRange();
                i < l.startLineNumber || i === l.startLineNumber && o < l.startColumn ? (i = l.startLineNumber, o = l.startColumn) : (i > l.endLineNumber || i === l.endLineNumber && o > l.endColumn) && (i = l.endLineNumber, o = l.endColumn)
            }
            this._setPosition(i, o, r, s, a)
        }, e.prototype.recoverSelectionFromMarkers = function (e) {
            e.cursorPositionChangeReason = "recoverFromMarkers", e.shouldPushStackElementBefore = !0, e.shouldPushStackElementAfter = !0, e.shouldReveal = !1, e.shouldRevealHorizontal = !1;
            var t = this.model._getMarker(this.positionMarkerId), n = new f.Position(t.lineNumber, t.column), i = null, o = null, r = null, s = null;
            if (this.selStartMarkerId && this.selEndMarkerId) {
                var a = this.model._getMarker(this.selStartMarkerId), u = this.model._getMarker(this.selEndMarkerId);
                if (i = new g.Range(a.lineNumber, a.column, u.lineNumber, u.column), i.isEmpty())r = new f.Position(i.startLineNumber, i.startColumn), i = null, r.equals(n) ? r = null : s = this.viewModelHelper.convertModelPositionToViewPosition(r.lineNumber, r.column); else {
                    var l = this.viewModelHelper.convertModelPositionToViewPosition(i.startLineNumber, i.startColumn), d = this.viewModelHelper.convertModelPositionToViewPosition(i.endLineNumber, i.endColumn);
                    o = new g.Range(l.lineNumber, l.column, d.lineNumber, d.column)
                }
            }
            i ? this._startSelectionModeFromRange(i, o) : r ? this._startSelectionModeFromPosition(r, s) : this._stopSelectionMode();
            var c = this.viewModelHelper.convertModelPositionToViewPosition(n.lineNumber, n.column);
            return this._setPosition(n.lineNumber, n.column, c.lineNumber, c.column), !0
        }, e.prototype.jumpToBracket = function (e) {
            var t = this.bracketDecorations.length;
            if (2 !== t)return!1;
            for (var n = 0; 2 > n; n++) {
                var i = this.model.getDecorationRange(this.bracketDecorations[n]), o = this.model.getDecorationRange(this.bracketDecorations[1 - n]);
                if (S.isPositionAtRangeEdges(this.position, i) || S.isPositionInsideRange(this.position, i))return this._moveModelPosition(e, null, !1, o.startLineNumber, o.startColumn, 0, !1), !0
            }
            return!1
        }, e.prototype.moveTo = function (e, t, n, i, o) {
            var r, s = this.model.validatePosition(t);
            r = n ? this.viewModelHelper.validateViewPosition(n.lineNumber, n.column, s) : this.viewModelHelper.convertModelPositionToViewPosition(s.lineNumber, s.column);
            var a = "mouse" === i ? "explicit" : null;
            return"api" === i && (o.shouldRevealVerticalInCenter = !0), this._moveViewPosition(o, a, e, r.lineNumber, r.column, 0, !1), !0
        }, e.prototype.moveLeft = function (e, t) {
            var n, i;
            if (this.inSelectionMode && !e) {
                var o = this.getViewSelection(), r = this.viewModelHelper.validateViewPosition(o.startLineNumber, o.startColumn, this.getSelection().getStartPosition());
                n = r.lineNumber, i = r.column
            } else {
                var s = this._getValidViewPosition(), a = this.helper.getLeftOfPosition(this.viewModelHelper.viewModel, s.lineNumber, s.column);
                n = a.lineNumber, i = a.column
            }
            return this._moveViewPosition(t, "explicit", e, n, i, 0, !0), !0
        }, e.prototype.moveWordLeft = function (e, t) {
            var n = this.position.lineNumber, i = this.position.column, o = !1;
            1 === i && n > 1 && (o = !0, n -= 1, i = this.model.getLineMaxColumn(n));
            var r = this.helper.findWord(new f.Position(n, i), "left", !0);
            return i = r ? o || i > r.end + 1 ? r.end + 1 : r.start + 1 : 1, this._moveModelPosition(t, "explicit", e, n, i, 0, !0), !0
        }, e.prototype.moveRight = function (e, t) {
            var n, i;
            if (this.inSelectionMode && !e) {
                var o = this.getViewSelection(), r = this.viewModelHelper.validateViewPosition(o.endLineNumber, o.endColumn, this.getSelection().getEndPosition());
                n = r.lineNumber, i = r.column
            } else {
                var s = this._getValidViewPosition(), a = this.helper.getRightOfPosition(this.viewModelHelper.viewModel, s.lineNumber, s.column);
                n = a.lineNumber, i = a.column
            }
            return this._moveViewPosition(t, "explicit", e, n, i, 0, !0), !0
        }, e.prototype.moveWordRight = function (e, t) {
            var n = this.position.lineNumber, i = this.position.column, o = !1;
            i === this.model.getLineMaxColumn(n) && n < this.model.getLineCount() && (o = !0, n += 1, i = 1);
            var r = this.helper.findWord(new f.Position(n, i), "right", !0);
            return i = r ? o || i < r.start + 1 ? r.start + 1 : r.end + 1 : this.model.getLineMaxColumn(n), this._moveModelPosition(t, "explicit", e, n, i, 0, !0), !0
        }, e.prototype.moveDown = function (e, t, n) {
            var i, o, r = t ? this.configuration.editor.pageSize : 1;
            if (this.inSelectionMode && !e) {
                var s = this.getViewSelection(), a = this.viewModelHelper.validateViewPosition(s.endLineNumber, s.endColumn, this.getSelection().getEndPosition());
                i = a.lineNumber, o = a.column
            } else {
                var u = this._getValidViewPosition();
                i = u.lineNumber, o = u.column
            }
            var l = this.helper.getPositionDown(this.viewModelHelper.viewModel, i, o, this.leftoverVisibleColumns, r);
            return this._moveViewPosition(n, "explicit", e, l.lineNumber, l.column, l.leftoverVisibleColumns, !0), !0
        }, e.prototype.moveUp = function (e, t, n) {
            var i, o, r = t ? this.configuration.editor.pageSize : 1;
            if (this.inSelectionMode && !e) {
                var s = this.getViewSelection(), a = this.viewModelHelper.validateViewPosition(s.startLineNumber, s.startColumn, this.getSelection().getStartPosition());
                i = a.lineNumber, o = a.column
            } else {
                var u = this._getValidViewPosition();
                i = u.lineNumber, o = u.column
            }
            var l = this.helper.getPositionUp(this.viewModelHelper.viewModel, i, o, this.leftoverVisibleColumns, r);
            return this._moveViewPosition(n, "explicit", e, l.lineNumber, l.column, l.leftoverVisibleColumns, !0), !0
        }, e.prototype.moveToBeginningOfLine = function (e, t) {
            var n = this._getValidViewPosition(), i = n.lineNumber, o = n.column;
            return o = this.helper.getColumnAtBeginningOfLine(this.viewModelHelper.viewModel, i, o), this._moveViewPosition(t, "explicit", e, i, o, 0, !0), !0
        }, e.prototype.moveToEndOfLine = function (e, t) {
            var n = this._getValidViewPosition(), i = n.lineNumber, o = n.column;
            return o = this.helper.getColumnAtEndOfLine(this.viewModelHelper.viewModel, i, o), this._moveViewPosition(t, "explicit", e, i, o, 0, !0), !0
        }, e.prototype.moveToBeginningOfBuffer = function (e, t) {
            return this._moveModelPosition(t, "explicit", e, 1, 1, 0, !0), !0
        }, e.prototype.moveToEndOfBuffer = function (e, t) {
            var n = this.model.getLineCount(), i = this.model.getLineMaxColumn(n);
            return this._moveModelPosition(t, "explicit", e, n, i, 0, !0), !0
        }, e.prototype.selectAll = function (e) {
            var t, n, i, o, r = !0;
            if (this.model.hasEditableRange()) {
                var s = this.model.getEditableRange(), a = this.getSelection();
                a.equalsRange(s) || (r = !1, t = s.startLineNumber, n = s.startColumn, i = s.endLineNumber, o = s.endColumn)
            }
            return r && (t = 1, n = 1, i = this.model.getLineCount(), o = this.model.getLineMaxColumn(i)), this._moveModelPosition(e, null, !1, t, n, 0, !1), this._moveModelPosition(e, null, !0, i, o, 0, !1), e.shouldReveal = !1, e.shouldRevealHorizontal = !1, !0
        }, e.prototype.line = function (e, t, n, i) {
            var o, r = this.model.validatePosition(t);
            o = n ? this.viewModelHelper.validateViewPosition(n.lineNumber, n.column, r) : this.viewModelHelper.convertModelPositionToViewPosition(r.lineNumber, r.column);
            var s, a;
            if (e && this.inSelectionMode)s = o.lineNumber, a = r.isBeforeOrEqual(this.selectionStart.getStartPosition()) ? 1 : this.viewModelHelper.viewModel.getLineMaxColumn(s); else {
                var u = new g.Range(o.lineNumber, 1, o.lineNumber, this.viewModelHelper.viewModel.getLineMaxColumn(o.lineNumber)), l = this.viewModelHelper.convertViewToModelPosition(u.startLineNumber, u.startColumn), d = this.viewModelHelper.convertViewToModelPosition(u.endLineNumber, u.endColumn);
                this._startSelectionModeFromRange(new g.Range(l.lineNumber, l.column, d.lineNumber, d.column), u), s = u.endLineNumber, a = u.endColumn
            }
            i.cursorPositionChangeReason = "explicit", i.shouldRevealHorizontal = !1;
            var c = this.viewModelHelper.convertViewToModelPosition(s, a);
            return this._setPosition(c.lineNumber, c.column, s, a, 0), !0
        }, e.prototype.word = function (e, t, n, i) {
            var o, r, s, a, u = this.model.validatePosition(t), l = this.helper.findWord(u, n);
            if (e && this.inSelectionMode)o = l ? l.start + 1 : u.column, r = l ? l.end + 1 : u.column, s = u.lineNumber, a = u.isBeforeOrEqual(this.selectionStart.getStartPosition()) ? o : r; else {
                if (l)o = l.start + 1, r = l.end + 1; else {
                    var d = this.model.getLineMaxColumn(u.lineNumber);
                    u.column === d || "left" === n ? (o = u.column - 1, r = u.column) : (o = u.column, r = u.column + 1), 1 >= o && (o = 1), r >= d && (r = d)
                }
                var c = new g.Range(u.lineNumber, o, u.lineNumber, r), h = this.viewModelHelper.convertModelPositionToViewPosition(u.lineNumber, o), p = this.viewModelHelper.convertModelPositionToViewPosition(u.lineNumber, r);
                this._startSelectionModeFromRange(c, new g.Range(h.lineNumber, h.column, p.lineNumber, p.column)), s = c.endLineNumber, a = c.endColumn
            }
            i.cursorPositionChangeReason = "explicit";
            var f = this.viewModelHelper.convertModelPositionToViewPosition(s, a);
            return this._setPosition(s, a, f.lineNumber, f.column, 0), !0
        }, e.prototype.cancelSelection = function () {
            return this.inSelectionMode ? (this._stopSelectionMode(), !0) : !0
        }, e.prototype._typeInterceptorEnter = function (e, t) {
            return"\n" !== e ? !1 : this._enter(!1, t)
        }, e.prototype.lineInsertBefore = function (e) {
            var t = this.position.lineNumber, n = 0;
            return t > 1 && (t--, n = this.model.getLineMaxColumn(t)), this._enter(!1, e, new f.Position(t, n), new g.Range(t, n, t, n))
        }, e.prototype.lineInsertAfter = function (e) {
            var t = this.model.getLineMaxColumn(this.position.lineNumber);
            return this._enter(!1, e, new f.Position(this.position.lineNumber, t), new g.Range(this.position.lineNumber, t, this.position.lineNumber, t))
        }, e.prototype.lineBreakInsert = function (e) {
            return this._enter(!0, e)
        }, e.prototype._enter = function (e, t, n, i) {
            "undefined" == typeof n && (n = this.position), "undefined" == typeof i && (i = this.getSelection()), t.shouldPushStackElementBefore = !0;
            var o, r = this.model.getLineContent(n.lineNumber), s = this.model.getRawLineTokens(n.lineNumber);
            if (this.model.getMode().electricCharacterSupport)try {
                o = this.model.getMode().electricCharacterSupport.onEnter(r, s, n.column - 1)
            } catch (a) {
                C.onUnexpectedError(a)
            }
            var u = h.getLeadingWhitespace(r);
            if (u.length > n.column - 1 && (u = u.substring(0, n.column - 1)), o ? (o.appendText ? -1 === h.firstNonWhitespaceIndex(o.appendText) && (o.appendText = o.appendText) : o.appendText = o.indentAction === p.IndentAction.None ? "" : "	", o.indentOutdentAppendText || (o.indentOutdentAppendText = "")) : o = {indentAction: p.IndentAction.None, appendText: "", indentOutdentAppendText: ""}, o.indentAction === p.IndentAction.None)this.actualType("\n" + this.helper.normalizeIndentation(u + o.appendText), e, t, i); else if (o.indentAction === p.IndentAction.Indent)this.actualType("\n" + this.helper.normalizeIndentation(u + o.appendText), e, t, i); else if (o.indentAction === p.IndentAction.IndentOutdent) {
                var l = this.helper.normalizeIndentation(u), d = this.helper.normalizeIndentation(u + o.appendText), c = "\n" + d + "\n" + l + o.indentOutdentAppendText;
                t.executeCommand = e ? new v.ReplaceCommandWithoutChangingPosition(i, c) : new v.ReplaceCommandWithOffsetCursorState(i, c, -1, d.length - l.length)
            }
            return!0
        }, e.prototype._typeInterceptorAutoClosingCloseChar = function (e, t) {
            if (!this.configuration.editor.autoClosingBrackets)return!1;
            var n = this.getSelection();
            if (!n.isEmpty() || !this.modeConfiguration.autoClosingPairsClose.hasOwnProperty(e))return!1;
            var i = this.model.getLineContent(this.position.lineNumber), o = i[this.position.column - 1];
            if (o !== e)return!1;
            var r = new g.Range(this.position.lineNumber, this.position.column, this.position.lineNumber, this.position.column + 1);
            return t.executeCommand = new v.ReplaceCommand(r, e), !0
        }, e.prototype._typeInterceptorAutoClosingOpenChar = function (e, t) {
            if (!this.configuration.editor.autoClosingBrackets)return!1;
            var n = this.getSelection();
            if (!n.isEmpty() || !this.modeConfiguration.autoClosingPairsOpen.hasOwnProperty(e))return!1;
            if (!this.model.getMode().characterPairSupport)return!1;
            var i = this.model.getLineContent(this.position.lineNumber), o = i[this.position.column - 1], r = this.modeConfiguration.autoClosingPairsOpen[e];
            if (o && o !== r && !/\s/.test(o))return!1;
            var s = this.model.getRawLineTokens(this.position.lineNumber), a = !1;
            try {
                a = this.model.getMode().characterPairSupport.shouldAutoClosePair(e, i, s, this.position.column - 1)
            } catch (u) {
                C.onUnexpectedError(u)
            }
            return a ? (t.shouldPushStackElementBefore = !0, t.executeCommand = new v.ReplaceCommandWithOffsetCursorState(n, e + r, 0, -r.length), !0) : !1
        }, e.prototype._typeInterceptorSurroundSelection = function (e, t) {
            if (!this.configuration.editor.autoClosingBrackets)return!1;
            var n = this.getSelection();
            if (n.isEmpty() || !this.modeConfiguration.surroundingPairs.hasOwnProperty(e))return!1;
            var i = this.modeConfiguration.surroundingPairs[e];
            return t.shouldPushStackElementBefore = !0, t.shouldPushStackElementAfter = !0, t.executeCommand = new y.SurroundSelectionCommand(n, e, i), !0
        }, e.prototype._typeInterceptorElectricChar = function (e, t) {
            var n = this;
            return this.modeConfiguration.electricChars.hasOwnProperty(e) ? (t.postOperationRunnable = function (e) {
                return n._typeInterceptorElectricCharRunnable(e)
            }, this.actualType(e, !1, t)) : !1
        }, e.prototype._typeInterceptorElectricCharRunnable = function (e) {
            var t, n = this.model.getLineContent(this.position.lineNumber), i = this.model.getRawLineTokens(this.position.lineNumber);
            if (this.model.getMode().electricCharacterSupport)try {
                t = this.model.getMode().electricCharacterSupport.onElectricCharacter(n, i, this.position.column - 2)
            } catch (o) {
                C.onUnexpectedError(o)
            }
            if (t) {
                var r = t.matchBracketType, s = t.appendText;
                if (r) {
                    var a = null;
                    if (r && (a = this.model.findMatchingBracketUp(r, this.position)), a) {
                        var u = a.startLineNumber, l = this.model.getLineContent(u), d = h.getLeadingWhitespace(l), c = this.helper.normalizeIndentation(d), p = this.model.getLineFirstNonWhitespaceColumn(this.position.lineNumber) || this.position.column, f = n.substring(0, p - 1);
                        if (f !== c) {
                            var m = n.substring(p - 1, this.position.column - 1), y = c + m, b = new g.Range(this.position.lineNumber, 1, this.position.lineNumber, this.position.column);
                            e.shouldPushStackElementAfter = !0, e.executeCommand = new v.ReplaceCommand(b, y)
                        }
                    }
                } else if (s) {
                    var E = -s.length;
                    t.advanceCount && (E += t.advanceCount), e.shouldPushStackElementAfter = !0, e.executeCommand = new v.ReplaceCommandWithOffsetCursorState(this.getSelection(), s, 0, E)
                }
            }
        }, e.prototype.actualType = function (e, t, n, i) {
            return"undefined" == typeof i && (i = this.getSelection()), n.executeCommand = t ? new v.ReplaceCommandWithoutChangingPosition(i, e) : new v.ReplaceCommand(i, e), !0
        }, e.prototype.type = function (e, t) {
            return this._typeInterceptorEnter(e, t) ? !0 : this._typeInterceptorAutoClosingCloseChar(e, t) ? !0 : this._typeInterceptorAutoClosingOpenChar(e, t) ? !0 : this._typeInterceptorSurroundSelection(e, t) ? !0 : this._typeInterceptorElectricChar(e, t) ? !0 : this.actualType(e, !1, t)
        }, e.prototype.tab = function (e) {
            if (this.configuration.editor.tabFocusMode)return!1;
            var t = this.getSelection();
            if (t.isEmpty()) {
                var n = "";
                if (this.configuration.editor.insertSpaces)for (var i = this.helper.nextTabColumn(this.position.column - 1), o = this.position.column; i >= o; o++)n += " "; else n = "	";
                e.executeCommand = new v.ReplaceCommand(t, n)
            } else e.shouldPushStackElementBefore = !0, e.shouldPushStackElementAfter = !0, this.indent(e);
            return!0
        }, e.prototype.indent = function (e) {
            var t = this.getSelection();
            return e.executeCommand = new m.ShiftCommand(this.configuration, !1, t), e.shouldRevealHorizontal = !1, !0
        }, e.prototype.outdent = function (e) {
            if (this.configuration.editor.tabFocusMode)return!1;
            var t = this.getSelection();
            return e.executeCommand = new m.ShiftCommand(this.configuration, !0, t), e.shouldRevealHorizontal = !1, !0
        }, e.prototype.paste = function (e, t, n) {
            if (t && "\n" === e.charAt(e.length - 1) && e.indexOf("\n") === e.length - 1) {
                var i = new g.Range(this.position.lineNumber, 1, this.position.lineNumber, 1);
                return n.executeCommand = new v.ReplaceCommand(i, e), !0
            }
            return n.executeCommand = new v.ReplaceCommand(this.getSelection(), e), !0
        }, e.prototype._autoClosingPairDelete = function (e) {
            if (!this.configuration.editor.autoClosingBrackets)return!1;
            var t = this.model.getLineContent(this.position.lineNumber), n = t[this.position.column - 2];
            if (!this.modeConfiguration.autoClosingPairsOpen.hasOwnProperty(n))return!1;
            var i = t[this.position.column - 1], o = this.modeConfiguration.autoClosingPairsOpen[n];
            if (i !== o)return!1;
            var r = new g.Range(this.position.lineNumber, this.position.column - 1, this.position.lineNumber, this.position.column + 1);
            return e.executeCommand = new v.ReplaceCommand(r, ""), !0
        }, e.prototype.deleteLeft = function (e) {
            if (this._autoClosingPairDelete(e))return!0;
            var t = this.getSelection();
            if (t.isEmpty()) {
                var n = this.helper.getLeftOfPosition(this.model, this.position.lineNumber, this.position.column);
                t = new g.Range(n.lineNumber, n.column, this.position.lineNumber, this.position.column)
            }
            return t.isEmpty() ? !0 : (t.startLineNumber !== t.endLineNumber && (e.shouldPushStackElementBefore = !0), e.executeCommand = new v.ReplaceCommand(t, ""), !0)
        }, e.prototype.deleteWordLeft = function (e) {
            if (this._autoClosingPairDelete(e))return!0;
            var t = this.getSelection();
            if (t.isEmpty()) {
                var n = this.position.lineNumber, i = this.position.column;
                if (1 === n && 1 === i)return!0;
                var o = this.helper.findWord(this.position, "left", !0);
                i = o ? o.end + 1 < i ? o.end + 1 : o.start + 1 : 1;
                var r = new g.Range(n, i, n, this.position.column);
                if (!r.isEmpty())return e.executeCommand = new v.ReplaceCommand(r, ""), !0
            }
            return this.deleteLeft(e)
        }, e.prototype.deleteRight = function (e) {
            var t = this.getSelection();
            if (t.isEmpty()) {
                var n = this.helper.getRightOfPosition(this.model, this.position.lineNumber, this.position.column);
                t = new g.Range(n.lineNumber, n.column, this.position.lineNumber, this.position.column)
            }
            return t.isEmpty() ? !0 : (t.startLineNumber !== t.endLineNumber && (e.shouldPushStackElementBefore = !0), e.executeCommand = new v.ReplaceCommand(t, ""), !0)
        }, e.prototype.deleteWordRight = function (e) {
            var t = this.getSelection();
            if (t.isEmpty()) {
                var n = this.position.lineNumber, i = this.position.column, o = this.model.getLineCount(), r = this.model.getLineMaxColumn(n);
                if (n === o && i === r)return!0;
                var s = this.helper.findWord(new f.Position(n, i), "right", !0);
                i = s ? s.start + 1 > i ? s.start + 1 : s.end + 1 : r;
                var a = new g.Range(n, i, n, this.position.column);
                if (!a.isEmpty())return e.executeCommand = new v.ReplaceCommand(a, ""), !0
            }
            return this.deleteRight(e)
        }, e.prototype.deleteAllLeft = function (e) {
            if (this._autoClosingPairDelete(e))return!0;
            var t = this.getSelection();
            if (t.isEmpty()) {
                var n = this.position.lineNumber, i = this.position.column;
                if (1 === i)return!0;
                var o = new g.Range(n, 1, n, i);
                if (!o.isEmpty())return e.executeCommand = new v.ReplaceCommand(o, ""), !0
            }
            return this.deleteLeft(e)
        }, e.prototype.deleteAllRight = function (e) {
            var t = this.getSelection();
            if (t.isEmpty()) {
                var n = this.position.lineNumber, i = this.position.column, o = this.model.getLineMaxColumn(n);
                if (i === o)return!0;
                var r = new g.Range(n, i, n, o);
                if (!r.isEmpty())return e.executeCommand = new v.ReplaceCommand(r, ""), !0
            }
            return this.deleteRight(e)
        }, e.prototype.cut = function (e) {
            var t = this.getSelection();
            if (t.isEmpty()) {
                var n = this.position.lineNumber, i = 1, o = this.position.lineNumber + 1, r = 1;
                o > this.model.getLineCount() && (o--, r = this.model.getLineMaxColumn(o));
                var s = new g.Range(n, i, o, r);
                s.isEmpty() || (e.executeCommand = new v.ReplaceCommand(s, ""))
            } else this.deleteLeft(e);
            return!0
        }, e
    }();
    t.OneCursor = w;
    var _ = function () {
        function e(e, t) {
            this.model = e, this.configuration = t, this.moveHelper = new E.ModelCursorMoveHelper(this.configuration)
        }

        return e.prototype.getLeftOfPosition = function (e, t, n) {
            return this.moveHelper.getLeftOfPosition(e, t, n)
        }, e.prototype.getRightOfPosition = function (e, t, n) {
            return this.moveHelper.getRightOfPosition(e, t, n)
        }, e.prototype.getPositionUp = function (e, t, n, i, o) {
            return this.moveHelper.getPositionUp(e, t, n, i, o)
        }, e.prototype.getPositionDown = function (e, t, n, i, o) {
            return this.moveHelper.getPositionDown(e, t, n, i, o)
        }, e.prototype.getColumnAtBeginningOfLine = function (e, t, n) {
            return this.moveHelper.getColumnAtBeginningOfLine(e, t, n)
        }, e.prototype.getColumnAtEndOfLine = function (e, t, n) {
            return this.moveHelper.getColumnAtEndOfLine(e, t, n)
        }, e.prototype.normalizeIndentation = function (e) {
            return this.configuration.normalizeIndentation(e)
        }, e.prototype.nextTabColumn = function (e) {
            return e + this.configuration.editor.tabSize - e % this.configuration.editor.tabSize
        }, e.prototype.findWord = function (e, t, n) {
            "undefined" == typeof n && (n = !1);
            var i, o, r, s = this.model.getWords(e.lineNumber, n, !0);
            if (n) {
                if (i = e.column - 1, "left" === t) {
                    for (o = s.length - 1; o >= 0; o--)if (!(s[o].start >= i))return s[o]
                } else for (o = 0, r = s.length; r > o; o++)if (!(s[o].end <= i))return s[o]
            } else for (i = e.column, "left" === t ? 1 !== i && (i -= .1) : i !== this.model.getLineMaxColumn(e.lineNumber) && (i += .1), i -= 1, o = 0, r = s.length; r > o; o++)if (s[o].start <= i && i <= s[o].end)return s[o];
            return null
        }, e
    }(), S = function () {
        function e() {
        }

        return e.rangeContainsPosition = function (e, t) {
            return t.lineNumber < e.startLineNumber || t.lineNumber > e.endLineNumber ? !1 : t.lineNumber === e.startLineNumber && t.column < e.startColumn ? !1 : t.lineNumber === e.endLineNumber && t.column > e.endColumn ? !1 : !0
        }, e.isPositionInsideRange = function (e, t) {
            return e.lineNumber < t.startLineNumber ? !1 : e.lineNumber > t.endLineNumber ? !1 : e.lineNumber === t.startLineNumber && e.column < t.startColumn ? !1 : e.lineNumber === t.endLineNumber && e.column > t.endColumn ? !1 : !0
        }, e.isPositionAtRangeEdges = function (e, t) {
            return e.lineNumber === t.startLineNumber && e.column === t.startColumn ? !0 : e.lineNumber === t.endLineNumber && e.column === t.endColumn ? !0 : !1
        }, e
    }()
}), define("vs/editor/core/controller/cursorCollection", ["require", "exports", "vs/editor/core/controller/oneCursor", "vs/editor/core/selection", "vs/base/errors"], function (e, t, n, i, o) {
    "use strict";
    var r = n, s = i, a = o, u = function () {
        function e(e, t, n, i) {
            this.editorId = e, this.model = t, this.configuration = n, this.viewModelHelper = i, this.modeConfiguration = this.getModeConfiguration(), this.primaryCursor = new r.OneCursor(this.editorId, this.model, this.configuration, this.modeConfiguration, this.viewModelHelper), this.secondaryCursors = [], this.lastAddedCursorIndex = 0
        }

        return e.prototype.dispose = function () {
            this.primaryCursor.dispose(), this.killSecondaryCursors()
        }, e.prototype.getAll = function () {
            var e = [];
            return e.push(this.primaryCursor), e = e.concat(this.secondaryCursors)
        }, e.prototype.getPosition = function (e) {
            return 0 === e ? this.primaryCursor.getPosition() : this.secondaryCursors[e - 1].getPosition()
        }, e.prototype.getViewPosition = function (e) {
            return 0 === e ? this.primaryCursor.getViewPosition() : this.secondaryCursors[e - 1].getViewPosition()
        }, e.prototype.getPositions = function () {
            var e = [];
            e.push(this.primaryCursor.getPosition());
            for (var t = 0, n = this.secondaryCursors.length; n > t; t++)e.push(this.secondaryCursors[t].getPosition());
            return e
        }, e.prototype.getViewPositions = function () {
            var e = [];
            e.push(this.primaryCursor.getViewPosition());
            for (var t = 0, n = this.secondaryCursors.length; n > t; t++)e.push(this.secondaryCursors[t].getViewPosition());
            return e
        }, e.prototype.getSelection = function (e) {
            return 0 === e ? this.primaryCursor.getSelection() : this.secondaryCursors[e - 1].getSelection()
        }, e.prototype.getSelections = function () {
            var e = [];
            e.push(this.primaryCursor.getSelection());
            for (var t = 0, n = this.secondaryCursors.length; n > t; t++)e.push(this.secondaryCursors[t].getSelection());
            return e
        }, e.prototype.getViewSelections = function () {
            var e = [];
            e.push(this.primaryCursor.getViewSelection());
            for (var t = 0, n = this.secondaryCursors.length; n > t; t++)e.push(this.secondaryCursors[t].getViewSelection());
            return e
        }, e.prototype.setSelections = function (e) {
            this.primaryCursor.setSelection(e[0]), this._setSecondarySelections(e.slice(1))
        }, e.prototype.killSecondaryCursors = function () {
            return this._setSecondarySelections([]) > 0
        }, e.prototype.normalize = function () {
            this._mergeCursorsIfNecessary(), this.primaryCursor.adjustBracketDecorations();
            for (var e = 0, t = this.secondaryCursors.length; t > e; e++)this.secondaryCursors[e].adjustBracketDecorations()
        }, e.prototype.addSecondaryCursor = function (e) {
            var t = new r.OneCursor(this.editorId, this.model, this.configuration, this.modeConfiguration, this.viewModelHelper);
            e && t.setSelection(e), this.secondaryCursors.push(t), this.lastAddedCursorIndex = this.secondaryCursors.length
        }, e.prototype.getLastAddedCursor = function () {
            return 0 === this.secondaryCursors.length || 0 === this.lastAddedCursorIndex ? this.primaryCursor : this.secondaryCursors[this.lastAddedCursorIndex - 1]
        }, e.prototype._setSecondarySelections = function (e) {
            var t = this.secondaryCursors.length, n = e.length, i = n - t;
            if (n > t)for (var o = n - t, r = 0; o > r; r++)this.addSecondaryCursor(null); else if (t > n)for (var s = t - n, r = 0; s > r; r++)this._removeSecondaryCursor(this.secondaryCursors.length - 1);
            for (var r = 0; n > r; r++)e[r] && this.secondaryCursors[r].setSelection(e[r]);
            return i
        }, e.prototype._removeSecondaryCursor = function (e) {
            this.lastAddedCursorIndex >= e + 1 && this.lastAddedCursorIndex--, this.secondaryCursors[e].dispose(), this.secondaryCursors.splice(e, 1)
        }, e.prototype._mergeCursorsIfNecessary = function () {
            if (0 !== this.secondaryCursors.length) {
                for (var e = this.getAll(), t = [], n = 0; n < e.length; n++)t.push({index: n, selection: e[n].getSelection()});
                t.sort(function (e, t) {
                    return e.selection.startLineNumber === t.selection.startLineNumber ? e.selection.startColumn - t.selection.startColumn : e.selection.startLineNumber - t.selection.startLineNumber
                });
                for (var i = 0; i < t.length - 1; i++) {
                    var o = t[i], r = t[i + 1], a = o.selection, u = r.selection;
                    if (u.getStartPosition().isBeforeOrEqual(a.getEndPosition())) {
                        var l, d = o.index < r.index ? i : i + 1, c = o.index < r.index ? i + 1 : i, h = t[c].index, p = t[d].index, f = t[c].selection, g = t[d].selection, m = f.plusRange(g), v = f.selectionStartLineNumber === f.startLineNumber && f.selectionStartColumn === f.startColumn, y = g.selectionStartLineNumber === g.startLineNumber && g.selectionStartColumn === g.startColumn;
                        h === this.lastAddedCursorIndex ? (l = v, this.lastAddedCursorIndex = p) : l = y;
                        var b;
                        b = l ? new s.Selection(m.startLineNumber, m.startColumn, m.endLineNumber, m.endColumn) : new s.Selection(m.endLineNumber, m.endColumn, m.startLineNumber, m.startColumn), t[d].selection = b, e[p].setSelection(b);
                        for (var C = 0; C < t.length; C++)t[C].index > h && t[C].index--;
                        e.splice(h, 1), t.splice(c, 1), this._removeSecondaryCursor(h - 1), i--
                    }
                }
            }
        }, e.prototype.getModeConfiguration = function () {
            var e, t, n = {electricChars: {}, autoClosingPairsOpen: {}, autoClosingPairsClose: {}, surroundingPairs: {}};
            if (this.model.getMode().electricCharacterSupport)try {
                t = this.model.getMode().electricCharacterSupport.getElectricCharacters()
            } catch (i) {
                a.onUnexpectedError(i), t = null
            }
            if (t)for (e = 0; e < t.length; e++)n.electricChars[t[e]] = !0;
            var o;
            if (this.model.getMode().characterPairSupport)try {
                o = this.model.getMode().characterPairSupport.getAutoClosingPairs()
            } catch (i) {
                a.onUnexpectedError(i), o = null
            }
            if (o)for (e = 0; e < o.length; e++)n.autoClosingPairsOpen[o[e].open] = o[e].close, n.autoClosingPairsClose[o[e].close] = o[e].open;
            var r;
            if (this.model.getMode().characterPairSupport)try {
                r = this.model.getMode().characterPairSupport.getSurroundingPairs()
            } catch (i) {
                a.onUnexpectedError(i), r = null
            }
            if (r)for (e = 0; e < r.length; e++)n.surroundingPairs[r[e].open] = r[e].close;
            return n
        }, e
    }();
    t.CursorCollection = u
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/controller/cursor", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/editor/core/constants", "vs/editor/core/range", "vs/editor/core/selection", "vs/base/eventEmitter", "vs/editor/core/handlerDispatcher", "vs/editor/editor", "vs/editor/core/controller/cursorCollection", "vs/base/errors", "vs/editor/core/position"], function (e, t, n, i, o, r, s, a, u, l, d, c) {
    "use strict";
    var h = n, p = i, f = o, g = r, m = s, v = a, y = u, b = l, C = d, E = c, w = function (e) {
        function t(t, n, i, o, r) {
            var s = this;
            e.call(this), this.editorId = t, this.configuration = n, this.model = i, this.renderOnce = o, this.viewModelHelper = r, this.viewModelHelper || (this.viewModelHelper = {viewModel: this.model, convertModelPositionToViewPosition: function (e, t) {
                return new E.Position(e, t)
            }, convertViewToModelPosition: function (e, t) {
                return new E.Position(e, t)
            }, validateViewPosition: function (e, t, n) {
                return n
            }}), this.cursors = new b.CursorCollection(this.editorId, this.model, this.configuration, this.viewModelHelper), this.typingListeners = {}, this._isHandling = !1, this.modelUnbind = this.model.addListener(p.EventType.ModelContentChanged, function (e) {
                s._onModelContentChanged(e)
            }), this._registerHandlers()
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this.modelUnbind(), this.modelUnbind = null, this.model = null, this.cursors.dispose(), this.cursors = null, this.configuration.handlerDispatcher.clearHandlers(), this.configuration = null, this.renderOnce = null, this.viewModelHelper = null, e.prototype.dispose.call(this)
        }, t.prototype.saveState = function () {
            for (var e, t = this.cursors.getSelections(), n = [], i = 0; i < t.length; i++)e = t[i], n.push({inSelectionMode: !e.isEmpty(), selectionStart: {lineNumber: e.selectionStartLineNumber, column: e.selectionStartColumn}, position: {lineNumber: e.positionLineNumber, column: e.positionColumn}});
            return n
        }, t.prototype.restoreState = function (e) {
            for (var t, n = this, i = [], o = 0; o < e.length; o++) {
                t = e[o], t.inSelectionMode;
                var r = 1, s = 1;
                t.position && t.position.lineNumber && (r = t.position.lineNumber), t.position && t.position.column && (s = t.position.column);
                var a = r, u = s;
                t.selectionStart && t.selectionStart.lineNumber && (a = t.selectionStart.lineNumber), t.selectionStart && t.selectionStart.column && (u = t.selectionStart.column), i.push({selectionStartLineNumber: a, selectionStartColumn: u, positionLineNumber: r, positionColumn: s})
            }
            this._onHandler("restoreState", function () {
                return n.cursors.setSelections(i), !1
            }, new v.DispatcherEvent("restoreState", null))
        }, t.prototype.setEditableRange = function (e) {
            this.model.setEditableRange(e)
        }, t.prototype.getEditableRange = function () {
            return this.model.getEditableRange()
        }, t.prototype.addTypingListener = function (e, t) {
            this.typingListeners.hasOwnProperty(e) || (this.typingListeners[e] = []), this.typingListeners[e].push(t)
        }, t.prototype.removeTypingListener = function (e, t) {
            if (this.typingListeners.hasOwnProperty(e))for (var n = this.typingListeners[e], i = 0; i < n.length; i++)if (n[i] === t)return n.splice(i, 1), void 0
        }, t.prototype._onModelContentChanged = function (e) {
            var t = this;
            e.changeType === p.EventType.ModelContentChangedFlush ? (this.cursors.dispose(), this.cursors = new b.CursorCollection(this.editorId, this.model, this.configuration, this.viewModelHelper), this.emitCursorPositionChanged("", ""), this.emitCursorSelectionChanged("", ""), this.emitCursorRevealRange(!1, !0)) : this._isHandling || this._onHandler("recoverSelectionFromMarkers", function (e) {
                var n = t._invokeForAll(e, function (e, t, n) {
                    return t.recoverSelectionFromMarkers(n)
                });
                return e.shouldPushStackElementBefore = !1, e.shouldPushStackElementAfter = !1, n
            }, new v.DispatcherEvent("modelChange", null))
        }, t.prototype.getSelection = function () {
            return this.cursors.getSelection(0)
        }, t.prototype.getSelections = function () {
            return this.cursors.getSelections()
        }, t.prototype.getPosition = function () {
            return this.cursors.getPosition(0)
        }, t.prototype.setSelections = function (e, t) {
            var n = this;
            this._onHandler("setSelections", function (e) {
                return e.shouldReveal = !1, n.cursors.setSelections(t), !1
            }, new v.DispatcherEvent(e, null))
        }, t.prototype._createAndInterpretHandlerCtx = function (e, t, n) {
            var i = {cursorPositionChangeReason: "", shouldReveal: !0, shouldRevealVerticalInCenter: !1, shouldRevealHorizontal: !0, eventSource: e, eventData: t, executeCommands: [], postOperationRunnables: [], shouldPushStackElementBefore: !1, shouldPushStackElementAfter: !1};
            n(i), this._interpretHandlerContext(i), this.cursors.normalize()
        }, t.prototype._onHandler = function (e, t, n) {
            var i = this;
            if (this._isHandling)throw new Error("Why am I recursive?");
            this._isHandling = !0, this.charactersTyped = "";
            var o = !1;
            try {
                this.renderOnce(function () {
                    var e, r, s, a, u = i.cursors.getSelections(), l = i.cursors.getViewSelections(), d = n.getSource();
                    i._createAndInterpretHandlerCtx(d, n.getData(), function (n) {
                        o = t(n), e = n.cursorPositionChangeReason, r = n.shouldReveal, s = n.shouldRevealVerticalInCenter, a = n.shouldRevealHorizontal
                    });
                    for (var c = 0; c < i.charactersTyped.length; c++) {
                        var h = i.charactersTyped.charAt(c);
                        if (i.typingListeners.hasOwnProperty(h))for (var p = i.typingListeners[h].slice(0), f = 0, g = p.length; g > f; f++)p[f]()
                    }
                    var m = i.cursors.getSelections(), v = i.cursors.getViewSelections(), y = !1;
                    if (u.length !== m.length)y = !0; else {
                        for (var c = 0, b = u.length; !y && b > c; c++)u[c].equalsSelection(m[c]) || (y = !0);
                        for (var c = 0, b = l.length; !y && b > c; c++)l[c].equalsSelection(v[c]) || (y = !0)
                    }
                    y && (i.emitCursorPositionChanged(d, e), r && i.emitCursorRevealRange(s, a), i.emitCursorSelectionChanged(d, e))
                })
            } catch (r) {
                C.onUnexpectedError(r)
            }
            return this._isHandling = !1, o
        }, t.prototype._interpretHandlerContext = function (e) {
            e.shouldPushStackElementBefore && (this.model.pushStackElement(), e.shouldPushStackElementBefore = !1), this._internalExecuteCommands(e.executeCommands, e.postOperationRunnables), e.executeCommands = [], e.shouldPushStackElementAfter && (this.model.pushStackElement(), e.shouldPushStackElementAfter = !1);
            for (var t = !1, n = 0, i = e.postOperationRunnables.length; i > n; n++)if (e.postOperationRunnables[n]) {
                t = !0;
                break
            }
            if (t) {
                var o = e.postOperationRunnables.slice(0);
                e.postOperationRunnables = [], this._invokeForAll(e, function (e, t, n) {
                    return o[e] && o[e](n), !1
                }), this._interpretHandlerContext(e)
            }
        }, t.prototype._interpretCommandResult = function (e) {
            return e ? (this.cursors.setSelections(e), !0) : !1
        }, t.prototype._getEditOperationsFromCommand = function (e, t, n) {
            var i = this, o = [], r = 0, s = function (e, n) {
                (!e.isEmpty() || n) && o.push({identifier: {major: t, minor: r++}, range: e, text: n})
            }, a = !1, u = function (t) {
                var n, o;
                if (a = !0, t.isEmpty()) {
                    var r = i.model.getLineMaxColumn(t.startLineNumber);
                    t.startColumn === r ? (n = "start", o = "start") : (n = "end", o = "end")
                } else t.getDirection() === y.SelectionDirection.LTR ? (n = "end", o = "start") : (n = "start", o = "end");
                var s = e.selectionStartMarkers.length;
                return e.selectionStartMarkers[s] = i.model._addMarker(t.selectionStartLineNumber - 1, t.selectionStartColumn, n), e.positionMarkers[s] = i.model._addMarker(t.positionLineNumber - 1, t.positionColumn, o), s.toString()
            }, l = {addEditOperation: s, trackSelection: u};
            try {
                n.getEditOperations(this.model, l)
            } catch (d) {
                return C.onUnexpectedError(d, h.localize("vs_editor_core_controller_cursor", 0)), {operations: [], hadTrackedRange: !1}
            }
            return{operations: o, hadTrackedRange: a}
        }, t.prototype._getEditOperations = function (e, t) {
            for (var n, i, o = [], r = [], s = 0; s < t.length; s++)t[s] ? (n = this._getEditOperationsFromCommand(e, s, t[s]), o = o.concat(n.operations), r[s] = n.hadTrackedRange, i = i || r[s]) : r[s] = !1;
            return{operations: o, hadTrackedRanges: r, anyoneHadTrackedRange: i}
        }, t.prototype._getLooserCursorMap = function (e) {
            e = e.slice(0), e.sort(function (e, t) {
                return-f.RangeUtils.compareRangesUsingEnds(e.range, t.range)
            });
            for (var t, n, i, o = {}, r = 1; r < e.length; r++)if (t = e[r - 1], n = e[r], t.range.getStartPosition().isBeforeOrEqual(n.range.getEndPosition())) {
                i = t.identifier.major > n.identifier.major ? t.identifier.major : n.identifier.major, o[i.toString()] = !0;
                for (var s = 0; s < e.length; s++)e[s].identifier.major === i && (e.splice(s, 1), r > s && r--, s--);
                r > 0 && r--
            }
            return o
        }, t.prototype._internalExecuteCommands = function (e, t) {
            for (var n = {selectionStartMarkers: [], positionMarkers: []}, i = this._innerExecuteCommands(n, e, t), o = 0; o < n.selectionStartMarkers.length; o++)this.model._removeMarker(n.selectionStartMarkers[o]), this.model._removeMarker(n.positionMarkers[o]);
            return i
        }, t.prototype._arrayIsEmpty = function (e) {
            var t, n;
            for (t = 0, n = e.length; n > t; t++)if (e[t])return!1;
            return!0
        }, t.prototype._innerExecuteCommands = function (e, t, n) {
            var i = this;
            if (this.configuration.editor.readOnly)return!1;
            if (this._arrayIsEmpty(t))return!1;
            var o = this.cursors.getSelections(), r = this._getEditOperations(e, t);
            if (0 === r.operations.length && !r.anyoneHadTrackedRange)return!1;
            for (var s = r.operations, a = this.model.getEditableRange(), u = a.getStartPosition(), l = a.getEndPosition(), d = 0; d < s.length; d++) {
                var c = s[d].range;
                if (!u.isBeforeOrEqual(c.getStartPosition()) || !c.getEndPosition().isBeforeOrEqual(l))return!1
            }
            var h = this._getLooserCursorMap(s);
            if (h.hasOwnProperty("0"))return console.warn("Ignoring commands"), !1;
            for (var p = [], d = 0; d < s.length; d++)h.hasOwnProperty(s[d].identifier.major.toString()) || p.push(s[d]);
            var f, m = this.model.pushEditOperations(o, p, function (n) {
                for (var s = [], a = 0; a < o.length; a++)s[a] = [];
                for (var a = 0; a < n.length; a++) {
                    var u = n[a];
                    s[u.identifier.major].push(u)
                }
                for (var l = function (e, t) {
                    return e.identifier.minor - t.identifier.minor
                }, d = [], a = 0; a < o.length; a++)s[a].length > 0 || r.hadTrackedRanges[a] ? (s[a].sort(l), d[a] = t[a].computeCursorState(i.model, {getInverseEditOperations: function () {
                    return s[a]
                }, getTrackedSelection: function (t) {
                    var n = parseInt(t, 10), o = i.model._getMarker(e.selectionStartMarkers[n]), r = i.model._getMarker(e.positionMarkers[n]);
                    return new g.Selection(o.lineNumber, o.column, r.lineNumber, r.column)
                }})) : d[a] = o[a];
                return d
            }), v = [];
            for (f in h)h.hasOwnProperty(f) && v.push(parseInt(f, 10));
            v.sort(function (e, t) {
                return t - e
            });
            for (var d = 0; d < v.length; d++)m.splice(v[d], 1), n.splice(v[d], 1);
            return this._interpretCommandResult(m)
        }, t.prototype.emitCursorPositionChanged = function (e, t) {
            var n = this.cursors.getPositions(), i = n[0], o = n.slice(1), r = this.cursors.getViewPositions(), s = r[0], a = r.slice(1), u = !0;
            if (this.model.hasEditableRange()) {
                var l = this.model.getEditableRange();
                l.containsPosition(i) || (u = !1)
            }
            var d = {position: i, viewPosition: s, secondaryPositions: o, secondaryViewPositions: a, reason: t, source: e, isInEditableRange: u};
            this.emit(p.EventType.CursorPositionChanged, d)
        }, t.prototype.emitCursorSelectionChanged = function (e, t) {
            var n = this.cursors.getSelections(), i = n[0], o = n.slice(1), r = {selection: i, secondarySelections: o, source: e, reason: t};
            this.emit(p.EventType.CursorSelectionChanged, r)
        }, t.prototype.emitCursorRevealRange = function (e, t) {
            var n = this.cursors.getPosition(0), i = this.cursors.getViewPosition(0), o = new f.Range(n.lineNumber, n.column, n.lineNumber, n.column), r = new f.Range(i.lineNumber, i.column, i.lineNumber, i.column), s = {range: o, viewRange: r, revealVerticalInCenter: e, revealHorizontal: t};
            this.emit(p.EventType.CursorRevealRange, s)
        }, t.prototype._registerHandlers = function () {
            var e = this, t = p.Handler, n = {};
            n[t.JumpToBracket] = function (t) {
                return e._jumpToBracket(t)
            }, n[t.MoveTo] = function (t) {
                return e._moveTo(!1, t)
            }, n[t.MoveToSelect] = function (t) {
                return e._moveTo(!0, t)
            }, n[t.AddCursorUp] = function (t) {
                return e._addCursorUp(t)
            }, n[t.AddCursorDown] = function (t) {
                return e._addCursorDown(t)
            }, n[t.CreateCursor] = function (t) {
                return e._createCursor(t)
            }, n[t.LastCursorMoveToSelect] = function (t) {
                return e._lastCursorMoveTo(t)
            }, n[t.CursorLeft] = function (t) {
                return e._moveLeft(!1, t)
            }, n[t.CursorLeftSelect] = function (t) {
                return e._moveLeft(!0, t)
            }, n[t.CursorWordLeft] = function (t) {
                return e._moveWordLeft(!1, t)
            }, n[t.CursorWordLeftSelect] = function (t) {
                return e._moveWordLeft(!0, t)
            }, n[t.CursorRight] = function (t) {
                return e._moveRight(!1, t)
            }, n[t.CursorRightSelect] = function (t) {
                return e._moveRight(!0, t)
            }, n[t.CursorWordRight] = function (t) {
                return e._moveWordRight(!1, t)
            }, n[t.CursorWordRightSelect] = function (t) {
                return e._moveWordRight(!0, t)
            }, n[t.CursorUp] = function (t) {
                return e._moveUp(!1, !1, t)
            }, n[t.CursorUpSelect] = function (t) {
                return e._moveUp(!0, !1, t)
            }, n[t.CursorDown] = function (t) {
                return e._moveDown(!1, !1, t)
            }, n[t.CursorDownSelect] = function (t) {
                return e._moveDown(!0, !1, t)
            }, n[t.CursorPageUp] = function (t) {
                return e._moveUp(!1, !0, t)
            }, n[t.CursorPageUpSelect] = function (t) {
                return e._moveUp(!0, !0, t)
            }, n[t.CursorPageDown] = function (t) {
                return e._moveDown(!1, !0, t)
            }, n[t.CursorPageDownSelect] = function (t) {
                return e._moveDown(!0, !0, t)
            }, n[t.CursorHome] = function (t) {
                return e._moveToBeginningOfLine(!1, t)
            }, n[t.CursorHomeSelect] = function (t) {
                return e._moveToBeginningOfLine(!0, t)
            }, n[t.CursorEnd] = function (t) {
                return e._moveToEndOfLine(!1, t)
            }, n[t.CursorEndSelect] = function (t) {
                return e._moveToEndOfLine(!0, t)
            }, n[t.CursorTop] = function (t) {
                return e._moveToBeginningOfBuffer(!1, t)
            }, n[t.CursorTopSelect] = function (t) {
                return e._moveToBeginningOfBuffer(!0, t)
            }, n[t.CursorBottom] = function (t) {
                return e._moveToEndOfBuffer(!1, t)
            }, n[t.CursorBottomSelect] = function (t) {
                return e._moveToEndOfBuffer(!0, t)
            }, n[t.SelectAll] = function (t) {
                return e._selectAll(t)
            }, n[t.LineSelect] = function (t) {
                return e._line(!1, t)
            }, n[t.LineSelectDrag] = function (t) {
                return e._line(!0, t)
            }, n[t.LastCursorLineSelect] = function (t) {
                return e._lastCursorLine(!1, t)
            }, n[t.LastCursorLineSelectDrag] = function (t) {
                return e._lastCursorLine(!0, t)
            }, n[t.LineInsertBefore] = function (t) {
                return e._lineInsertBefore(t)
            }, n[t.LineInsertAfter] = function (t) {
                return e._lineInsertAfter(t)
            }, n[t.LineBreakInsert] = function (t) {
                return e._lineBreakInsert(t)
            }, n[t.WordSelect] = function (t) {
                return e._word(!1, t)
            }, n[t.WordSelectDrag] = function (t) {
                return e._word(!0, t)
            }, n[t.LastCursorWordSelect] = function (t) {
                return e._lastCursorWord(t)
            }, n[t.Escape] = function (t) {
                return e._cancelSelection(t)
            }, n[t.Type] = function (t) {
                return e._type(t)
            }, n[t.Tab] = function (t) {
                return e._tab(t)
            }, n[t.Indent] = function (t) {
                return e._indent(t)
            }, n[t.Outdent] = function (t) {
                return e._outdent(t)
            }, n[t.Paste] = function (t) {
                return e._paste(t)
            }, n[t.DeleteLeft] = function (t) {
                return e._deleteLeft(t)
            }, n[t.DeleteWordLeft] = function (t) {
                return e._deleteWordLeft(t)
            }, n[t.DeleteRight] = function (t) {
                return e._deleteRight(t)
            }, n[t.DeleteWordRight] = function (t) {
                return e._deleteWordRight(t)
            }, n[t.DeleteAllLeft] = function (t) {
                return e._deleteAllLeft(t)
            }, n[t.DeleteAllRight] = function (t) {
                return e._deleteAllRight(t)
            }, n[t.Cut] = function (t) {
                return e._cut(t)
            }, n[t.Undo] = function (t) {
                return e._undo(t)
            }, n[t.Redo] = function (t) {
                return e._redo(t)
            }, n[t.ExecuteCommand] = function (t) {
                return e._externalExecuteCommand(t)
            }, n[t.ExecuteCommands] = function (t) {
                return e._externalExecuteCommands(t)
            };
            var i, o = function (t, n) {
                return function (i) {
                    return e._onHandler(t, n, i)
                }
            };
            for (i in n)n.hasOwnProperty(i) && this.configuration.handlerDispatcher.setHandler(i, o(i, n[i]))
        }, t.prototype._invokeForAll = function (e, t, n, i) {
            "undefined" == typeof n && (n = !0), "undefined" == typeof i && (i = !0);
            var o, r = !1, s = this.cursors.getAll();
            e.shouldPushStackElementBefore = n, e.shouldPushStackElementAfter = i;
            for (var a = 0; a < s.length; a++)o = {cursorPositionChangeReason: "", cursorPositionChangeSource: "", shouldReveal: !0, shouldRevealVerticalInCenter: !1, shouldRevealHorizontal: !0, executeCommand: null, postOperationRunnable: null, shouldPushStackElementBefore: !1, shouldPushStackElementAfter: !1}, r = t(a, s[a], o) || r, 0 === a && (e.cursorPositionChangeReason = o.cursorPositionChangeReason, e.shouldRevealHorizontal = o.shouldRevealHorizontal, e.shouldReveal = o.shouldReveal, e.shouldRevealVerticalInCenter = o.shouldRevealVerticalInCenter), e.shouldPushStackElementBefore = e.shouldPushStackElementBefore || o.shouldPushStackElementBefore, e.shouldPushStackElementAfter = e.shouldPushStackElementAfter || o.shouldPushStackElementAfter, e.executeCommands[a] = o.executeCommand, e.postOperationRunnables[a] = o.postOperationRunnable;
            return r
        }, t.prototype._jumpToBracket = function (e) {
            return this.cursors.killSecondaryCursors(), this._invokeForAll(e, function (e, t, n) {
                return t.jumpToBracket(n)
            })
        }, t.prototype._moveTo = function (e, t) {
            return this.cursors.killSecondaryCursors(), this._invokeForAll(t, function (n, i, o) {
                return i.moveTo(e, t.eventData.position, t.eventData.viewPosition, t.eventSource, o)
            })
        }, t.prototype._createCursor = function (e) {
            if (this.configuration.editor.readOnly || this.model.hasEditableRange())return!1;
            this.cursors.addSecondaryCursor({selectionStartLineNumber: 1, selectionStartColumn: 1, positionLineNumber: 1, positionColumn: 1});
            var t = this.cursors.getLastAddedCursor();
            return this._invokeForAll(e, function (n, i, o) {
                return i === t ? e.eventData.wholeLine ? i.line(!1, e.eventData.position, e.eventData.viewPosition, o) : i.moveTo(!1, e.eventData.position, e.eventData.viewPosition, e.eventSource, o) : !1
            }), e.shouldReveal = !1, e.shouldRevealHorizontal = !1, !0
        }, t.prototype._lastCursorMoveTo = function (e) {
            if (this.configuration.editor.readOnly || this.model.hasEditableRange())return!1;
            var t = this.cursors.getLastAddedCursor();
            return this._invokeForAll(e, function (n, i, o) {
                return i === t ? i.moveTo(!0, e.eventData.position, e.eventData.viewPosition, e.eventSource, o) : !1
            }), e.shouldReveal = !1, e.shouldRevealHorizontal = !1, !0
        }, t.prototype._addCursorUp = function (e) {
            if (this.configuration.editor.readOnly)return!1;
            for (var t = this.cursors.getSelections(), n = t.length, i = 0; n > i; i++)this.cursors.addSecondaryCursor(t[i]);
            return this._invokeForAll(e, function (e, t, i) {
                return e >= n ? t.moveUp(!1, !1, i) : !1
            })
        }, t.prototype._addCursorDown = function (e) {
            if (this.configuration.editor.readOnly)return!1;
            for (var t = this.cursors.getSelections(), n = t.length, i = 0; n > i; i++)this.cursors.addSecondaryCursor(t[i]);
            return this._invokeForAll(e, function (e, t, i) {
                return e >= n ? t.moveDown(!1, !1, i) : !1
            })
        }, t.prototype._moveLeft = function (e, t) {
            return this._invokeForAll(t, function (t, n, i) {
                return n.moveLeft(e, i)
            })
        }, t.prototype._moveWordLeft = function (e, t) {
            return this._invokeForAll(t, function (t, n, i) {
                return n.moveWordLeft(e, i)
            })
        }, t.prototype._moveRight = function (e, t) {
            return this._invokeForAll(t, function (t, n, i) {
                return n.moveRight(e, i)
            })
        }, t.prototype._moveWordRight = function (e, t) {
            return this._invokeForAll(t, function (t, n, i) {
                return n.moveWordRight(e, i)
            })
        }, t.prototype._moveDown = function (e, t, n) {
            return this._invokeForAll(n, function (n, i, o) {
                return i.moveDown(e, t, o)
            })
        }, t.prototype._moveUp = function (e, t, n) {
            return this._invokeForAll(n, function (n, i, o) {
                return i.moveUp(e, t, o)
            })
        }, t.prototype._moveToBeginningOfLine = function (e, t) {
            return this._invokeForAll(t, function (t, n, i) {
                return n.moveToBeginningOfLine(e, i)
            })
        }, t.prototype._moveToEndOfLine = function (e, t) {
            return this._invokeForAll(t, function (t, n, i) {
                return n.moveToEndOfLine(e, i)
            })
        }, t.prototype._moveToBeginningOfBuffer = function (e, t) {
            return this._invokeForAll(t, function (t, n, i) {
                return n.moveToBeginningOfBuffer(e, i)
            })
        }, t.prototype._moveToEndOfBuffer = function (e, t) {
            return this._invokeForAll(t, function (t, n, i) {
                return n.moveToEndOfBuffer(e, i)
            })
        }, t.prototype._selectAll = function (e) {
            return this.cursors.killSecondaryCursors(), this._invokeForAll(e, function (e, t, n) {
                return t.selectAll(n)
            })
        }, t.prototype._line = function (e, t) {
            return this.cursors.killSecondaryCursors(), this._invokeForAll(t, function (n, i, o) {
                return i.line(e, t.eventData.position, t.eventData.viewPosition, o)
            })
        }, t.prototype._lastCursorLine = function (e, t) {
            if (this.configuration.editor.readOnly || this.model.hasEditableRange())return!1;
            var n = this.cursors.getLastAddedCursor();
            return this._invokeForAll(t, function (i, o, r) {
                return o === n ? o.line(e, t.eventData.position, t.eventData.viewPosition, r) : !1
            }), t.shouldReveal = !1, t.shouldRevealHorizontal = !1, !0
        }, t.prototype._lineInsertBefore = function (e) {
            return this._invokeForAll(e, function (e, t, n) {
                return t.lineInsertBefore(n)
            })
        }, t.prototype._lineInsertAfter = function (e) {
            return this._invokeForAll(e, function (e, t, n) {
                return t.lineInsertAfter(n)
            })
        }, t.prototype._lineBreakInsert = function (e) {
            return this._invokeForAll(e, function (e, t, n) {
                return t.lineBreakInsert(n)
            })
        }, t.prototype._word = function (e, t) {
            return this.cursors.killSecondaryCursors(), this._invokeForAll(t, function (n, i, o) {
                return i.word(e, t.eventData.position, t.eventData.preference || "none", o)
            })
        }, t.prototype._lastCursorWord = function (e) {
            if (this.configuration.editor.readOnly || this.model.hasEditableRange())return!1;
            var t = this.cursors.getLastAddedCursor();
            return this._invokeForAll(e, function (n, i, o) {
                return i === t ? i.word(!0, e.eventData.position, e.eventData.preference || "none", o) : !1
            }), e.shouldReveal = !1, e.shouldRevealHorizontal = !1, !0
        }, t.prototype._cancelSelection = function (e) {
            return this.cursors.killSecondaryCursors() ? !0 : this._invokeForAll(e, function (e, t, n) {
                return t.cancelSelection(n)
            })
        }, t.prototype._type = function (e) {
            var t = this, n = e.eventData.text;
            if ("keyboard" === e.eventSource) {
                var i, o, r;
                for (i = 0, o = n.length; o > i; i++)r = n.charAt(i), this.charactersTyped += r, this._createAndInterpretHandlerCtx(e.eventSource, e.eventData, function (n) {
                    t._invokeForAll(n, function (e, t, n) {
                        return t.type(r, n)
                    }, !1, !1), e.cursorPositionChangeReason = n.cursorPositionChangeReason, e.shouldReveal = n.shouldReveal, e.shouldRevealVerticalInCenter = n.shouldRevealVerticalInCenter, e.shouldRevealHorizontal = n.shouldRevealHorizontal
                })
            } else this._invokeForAll(e, function (e, t, i) {
                return t.actualType(n, !1, i)
            });
            return!0
        }, t.prototype._tab = function (e) {
            return this._invokeForAll(e, function (e, t, n) {
                return t.tab(n)
            }, !1, !1)
        }, t.prototype._indent = function (e) {
            return this._invokeForAll(e, function (e, t, n) {
                return t.indent(n)
            })
        }, t.prototype._outdent = function (e) {
            return this._invokeForAll(e, function (e, t, n) {
                return t.outdent(n)
            })
        }, t.prototype._paste = function (e) {
            return this._invokeForAll(e, function (t, n, i) {
                return n.paste(e.eventData.text, e.eventData.sameSource, i)
            })
        }, t.prototype._deleteLeft = function (e) {
            return this._invokeForAll(e, function (e, t, n) {
                return t.deleteLeft(n)
            }, !1, !1)
        }, t.prototype._deleteWordLeft = function (e) {
            return this._invokeForAll(e, function (e, t, n) {
                return t.deleteWordLeft(n)
            }, !1, !1)
        }, t.prototype._deleteRight = function (e) {
            return this._invokeForAll(e, function (e, t, n) {
                return t.deleteRight(n)
            }, !1, !1)
        }, t.prototype._deleteWordRight = function (e) {
            return this._invokeForAll(e, function (e, t, n) {
                return t.deleteWordRight(n)
            }, !1, !1)
        }, t.prototype._deleteAllLeft = function (e) {
            return this._invokeForAll(e, function (e, t, n) {
                return t.deleteAllLeft(n)
            }, !1, !1)
        }, t.prototype._deleteAllRight = function (e) {
            return this._invokeForAll(e, function (e, t, n) {
                return t.deleteAllRight(n)
            }, !1, !1)
        }, t.prototype._cut = function (e) {
            return this._invokeForAll(e, function (e, t, n) {
                return t.cut(n)
            })
        }, t.prototype._undo = function (e) {
            return e.cursorPositionChangeReason = "undo", this._interpretCommandResult(this.model.undo()), !0
        }, t.prototype._redo = function (e) {
            return e.cursorPositionChangeReason = "redo", this._interpretCommandResult(this.model.redo()), !0
        }, t.prototype._externalExecuteCommand = function (e) {
            return this.cursors.killSecondaryCursors(), this._invokeForAll(e, function (t, n, i) {
                return i.shouldPushStackElementBefore = !0, i.shouldPushStackElementAfter = !0, i.executeCommand = e.eventData, !1
            })
        }, t.prototype._externalExecuteCommands = function (e) {
            return this._invokeForAll(e, function (t, n, i) {
                return i.shouldPushStackElementBefore = !0, i.shouldPushStackElementAfter = !0, i.executeCommand = e.eventData[t], !1
            })
        }, t
    }(m.EventEmitter);
    t.Cursor = w
}), define("vs/editor/core/view/model/viewModelCursors", ["require", "exports", "vs/editor/core/range", "vs/editor/core/selection", "vs/editor/core/view/viewContext"], function (e, t, n, i, o) {
    "use strict";
    var r = n, s = i, a = o, u = function () {
        function e(e, t) {
            this.configuration = e, this.converter = t, this.lastCursorPositionChangedEvent = null, this.lastCursorSelectionChangedEvent = null
        }

        return e.prototype.getSelections = function () {
            if (this.lastCursorSelectionChangedEvent) {
                var e = [];
                e.push(this.converter.convertModelSelectionToViewSelection(this.lastCursorSelectionChangedEvent.selection));
                for (var t = 0, n = this.lastCursorSelectionChangedEvent.secondarySelections.length; n > t; t++)e.push(this.converter.convertModelSelectionToViewSelection(this.lastCursorSelectionChangedEvent.secondarySelections[t]));
                return e
            }
            return[new s.Selection(1, 1, 1, 1)]
        }, e.prototype.onCursorPositionChanged = function (e, t) {
            this.lastCursorPositionChangedEvent = e;
            var n = this.converter.validateViewPosition(e.viewPosition.lineNumber, e.viewPosition.column, e.position), i = this.configuration.editor.stopRenderingLineAfter;
            -1 !== i && n.column > i && (n = n.clone(), n.column = i);
            for (var o = [], r = 0, s = e.secondaryPositions.length; s > r; r++)o[r] = this.converter.validateViewPosition(e.secondaryViewPositions[r].lineNumber, e.secondaryViewPositions[r].column, e.secondaryPositions[r]), -1 !== i && o[r].column > i && (o[r] = o[r].clone(), o[r].column = i);
            var u = {position: n, secondaryPositions: o, isInEditableRange: e.isInEditableRange};
            t(a.EventNames.CursorPositionChangedEvent, u)
        }, e.prototype.onCursorSelectionChanged = function (e, t) {
            this.lastCursorSelectionChangedEvent = e;
            for (var n = this.converter.convertModelSelectionToViewSelection(e.selection), i = [], o = 0, r = e.secondarySelections.length; r > o; o++)i[o] = this.converter.convertModelSelectionToViewSelection(e.secondarySelections[o]);
            var s = {selection: n, secondarySelections: i};
            t(a.EventNames.CursorSelectionChangedEvent, s)
        }, e.prototype.onCursorRevealRange = function (e, t) {
            var n = null;
            if (e.viewRange) {
                var i = this.converter.validateViewPosition(e.viewRange.startLineNumber, e.viewRange.startColumn, e.range.getStartPosition()), o = this.converter.validateViewPosition(e.viewRange.endLineNumber, e.viewRange.endColumn, e.range.getEndPosition());
                n = new r.Range(i.lineNumber, i.column, o.lineNumber, o.column)
            } else n = this.converter.convertModelRangeToViewRange(e.range);
            var s = {range: n, revealVerticalInCenter: e.revealVerticalInCenter, revealHorizontal: e.revealHorizontal};
            t(a.EventNames.RevealRangeEvent, s)
        }, e.prototype.onLineMappingChanged = function (e) {
            this.lastCursorPositionChangedEvent && this.onCursorPositionChanged(this.lastCursorPositionChangedEvent, e), this.lastCursorSelectionChangedEvent && this.onCursorSelectionChanged(this.lastCursorSelectionChangedEvent, e)
        }, e
    }();
    t.ViewModelCursors = u
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/model/viewModel", ["require", "exports", "vs/base/eventEmitter", "vs/editor/core/view/viewContext", "vs/editor/core/constants", "vs/editor/core/selection", "vs/editor/core/range", "vs/editor/core/view/model/viewModelDecorations", "vs/editor/core/view/model/viewModelCursors", "vs/base/strings", "vs/editor/core/position"], function (e, t, n, i, o, r, s, a, u, l, d) {
    "use strict";
    var c = n, h = i, p = o, f = r, g = s, m = a, v = u, y = l, b = d, C = function (e) {
        function t(t, n, i, o) {
            var r = this;
            e.call(this), this.lines = t, this.editorId = n, this.configuration = i, this.model = o, this.restoreCurrentCenteredModelLine = 0, this.decorations = new m.ViewModelDecorations(this.editorId, this.configuration, this), this.decorations.reset(this.model), this.cursors = new v.ViewModelCursors(this.configuration, this), this.listenersToRemove = [], this.listenersToRemove.push(this.model.addBulkListener(function (e) {
                return r.onEvents(e)
            })), this.listenersToRemove.push(this.configuration.addBulkListener(function (e) {
                return r.onEvents(e)
            }))
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this.listenersToRemove.forEach(function (e) {
                e()
            }), this.listenersToRemove = [], this.decorations.dispose(), this.decorations = null, this.lines = null, this.configuration = null, this.model = null
        }, t.prototype.setTabSize = function (e) {
            var t = this;
            this.deferredEmit(function () {
                var n = t.lines.setTabSize(e, function (e, n) {
                    return t.emit(e, n)
                });
                n && (t.emit(h.EventNames.LineMappingChangedEvent), t.decorations.onLineMappingChanged(function (e, n) {
                    return t.emit(e, n)
                }), t.cursors.onLineMappingChanged(function (e, n) {
                    return t.emit(e, n)
                }))
            })
        }, t.prototype.restoreCenteredModelLine = function () {
            if (this.restoreCurrentCenteredModelLine) {
                var e = this.convertModelPositionToViewPosition(this.restoreCurrentCenteredModelLine, 1).lineNumber;
                this.restoreCurrentCenteredModelLine = 0, e > 1 && e--;
                var t = {range: new g.Range(e, 1, e, 1), revealVerticalInCenter: !0, revealHorizontal: !1};
                this.emit(h.EventNames.RevealRangeEvent, t)
            }
        }, t.prototype.setWrappingColumn = function (e, t) {
            "undefined" == typeof t && (t = 0);
            var n = this;
            this.restoreCurrentCenteredModelLine = 0;
            var i = !1;
            this.deferredEmit(function () {
                t && (n.restoreCurrentCenteredModelLine = n.convertViewPositionToModelPosition(t, 1).lineNumber), i = n.lines.setWrappingColumn(e, function (e, t) {
                    return n.emit(e, t)
                }), i ? (n.emit(h.EventNames.LineMappingChangedEvent), n.decorations.onLineMappingChanged(function (e, t) {
                    return n.emit(e, t)
                }), n.cursors.onLineMappingChanged(function (e, t) {
                    return n.emit(e, t)
                })) : n.restoreCurrentCenteredModelLine = 0
            })
        }, t.prototype.addEventSource = function (e) {
            var t = this;
            this.listenersToRemove.push(e.addBulkListener(function (e) {
                return t.onEvents(e)
            }))
        }, t.prototype.onEvents = function (e) {
            var t = this;
            this.deferredEmit(function () {
                var n, i, o, r, s, a = !1, u = !1;
                for (n = 0, i = e.length; i > n; n++)switch (o = e[n], r = o.getData(), o.getType()) {
                    case p.EventType.ModelContentChanged:
                        switch (s = r, s.changeType) {
                            case p.EventType.ModelContentChangedFlush:
                                t.onModelFlushed(s), a = !0;
                                break;
                            case p.EventType.ModelContentChangedLinesDeleted:
                                t.onModelLinesDeleted(s), a = !0;
                                break;
                            case p.EventType.ModelContentChangedLinesInserted:
                                t.onModelLinesInserted(s), a = !0;
                                break;
                            case p.EventType.ModelContentChangedLineChanged:
                                u = t.onModelLineChanged(s);
                                break;
                            default:
                                console.info("ViewModel received unkown event: "), console.info(o)
                        }
                        break;
                    case p.EventType.ModelTokensChanged:
                        t.onModelTokensChanged(r);
                        break;
                    case p.EventType.ModelPropertiesChanged:
                        break;
                    case p.EventType.ModelDecorationsChanged:
                        t.onModelDecorationsChanged(r);
                        break;
                    case p.EventType.ModelDispose:
                        break;
                    case p.EventType.CursorPositionChanged:
                        t.onCursorPositionChanged(r);
                        break;
                    case p.EventType.CursorSelectionChanged:
                        t.onCursorSelectionChanged(r);
                        break;
                    case p.EventType.CursorRevealRange:
                        t.onCursorRevealRange(r);
                        break;
                    case p.EventType.ConfigurationChanged:
                        t.setTabSize(t.configuration.editor.tabSize), t.emit(o.getType(), r);
                        break;
                    case p.EventType.ConfigurationLineHeightChanged:
                        t.emit(o.getType(), o.getData());
                        break;
                    case p.EventType.ConfigurationFontChanged:
                        t.emit(o.getType(), o.getData());
                        break;
                    default:
                        console.info("View received unkown event: "), console.info(o)
                }
                !a && u && (t.emit(h.EventNames.LineMappingChangedEvent), t.decorations.onLineMappingChanged(function (e, n) {
                    return t.emit(e, n)
                }), t.cursors.onLineMappingChanged(function (e, n) {
                    return t.emit(e, n)
                }))
            }), this.restoreCenteredModelLine()
        }, t.prototype.onModelFlushed = function () {
            var e = this;
            this.lines.onModelFlushed(function (t, n) {
                return e.emit(t, n)
            }), this.decorations.reset(this.model)
        }, t.prototype.onModelDecorationsChanged = function (e) {
            var t = this;
            this.decorations.onModelDecorationsChanged(e, function (e, n) {
                return t.emit(e, n)
            })
        }, t.prototype.onModelLinesDeleted = function (e) {
            var t = this;
            this.lines.onModelLinesDeleted(e.fromLineNumber, e.toLineNumber, function (e, n) {
                return t.emit(e, n)
            })
        }, t.prototype.onModelTokensChanged = function (e) {
            var t = this.convertModelPositionToViewPosition(e.fromLineNumber, 1).lineNumber, n = this.convertModelPositionToViewPosition(e.toLineNumber, this.model.getLineMaxColumn(e.toLineNumber)).lineNumber, e = {fromLineNumber: t, toLineNumber: n};
            this.emit(h.EventNames.TokensChangedEvent, e)
        }, t.prototype.onModelLineChanged = function (e) {
            var t = this, n = this.lines.onModelLineChanged(e.lineNumber, e.detail, function (e, n) {
                return t.emit(e, n)
            });
            return n
        }, t.prototype.onModelLinesInserted = function (e) {
            var t = this;
            this.lines.onModelLinesInserted(e.fromLineNumber, e.toLineNumber, e.detail.split("\n"), function (e, n) {
                return t.emit(e, n)
            })
        }, t.prototype.validateViewPosition = function (e, t, n) {
            1 > e && (e = 1);
            var i = this.getLineCount();
            e > i && (e = i);
            var o = this.getLineMaxColumn(e);
            1 > t && (t = 1), t > o && (t = o);
            var r = this.convertViewPositionToModelPosition(e, t);
            return r.equals(n) ? new b.Position(e, t) : this.convertModelPositionToViewPosition(n.lineNumber, n.column)
        }, t.prototype.onCursorPositionChanged = function (e) {
            var t = this;
            this.cursors.onCursorPositionChanged(e, function (e, n) {
                return t.emit(e, n)
            })
        }, t.prototype.onCursorSelectionChanged = function (e) {
            var t = this;
            this.cursors.onCursorSelectionChanged(e, function (e, n) {
                return t.emit(e, n)
            })
        }, t.prototype.onCursorRevealRange = function (e) {
            var t = this;
            this.cursors.onCursorRevealRange(e, function (e, n) {
                return t.emit(e, n)
            })
        }, t.prototype.getLineCount = function () {
            return this.lines.getOutputLineCount()
        }, t.prototype.getLineContent = function (e) {
            return this.lines.getOutputLineContent(e)
        }, t.prototype.getLineMaxColumn = function (e) {
            return this.lines.getOutputLineMaxColumn(e)
        }, t.prototype.getLineFirstNonWhitespaceColumn = function (e) {
            var t = y.firstNonWhitespaceIndex(this.getLineContent(e));
            return-1 === t ? 0 : t + 1
        }, t.prototype.getLineLastNonWhitespaceColumn = function (e) {
            var t = y.lastNonWhitespaceIndex(this.getLineContent(e));
            return-1 === t ? 0 : t + 2
        }, t.prototype.getLineTokens = function (e) {
            return this.lines.getOutputLineTokens(e)
        }, t.prototype.getInlineDecorations = function (e) {
            return this.decorations.getInlineDecorations(e)
        }, t.prototype.getLineRenderLineNumber = function (e) {
            var t = this.convertViewPositionToModelPosition(e, 1);
            if (1 !== t.column)return"";
            var n = t.lineNumber;
            return"function" == typeof this.configuration.editor.lineNumbers ? this.configuration.editor.lineNumbers(n) : n.toString()
        }, t.prototype.getDecorationsInRange = function (e) {
            return this.decorations.getDecorationsInRange(e)
        }, t.prototype.getAllDecorations = function () {
            return this.decorations.getAllDecorations()
        }, t.prototype.getValueInRange = function (e, t) {
            var n = this.convertViewRangeToModelRange(e);
            return this.model.getValueInRange(n, t)
        }, t.prototype.getModelLineContent = function (e) {
            return this.model.getLineContent(e)
        }, t.prototype.getSelections = function () {
            return this.cursors.getSelections()
        }, t.prototype.getModelLineMaxColumn = function (e) {
            return this.model.getLineMaxColumn(e)
        }, t.prototype.validateModelPosition = function (e) {
            return this.model.validatePosition(e)
        }, t.prototype.convertViewPositionToModelPosition = function (e, t) {
            return this.lines.convertOutputPositionToInputPosition(e, t)
        }, t.prototype.convertViewRangeToModelRange = function (e) {
            var t = this.convertViewPositionToModelPosition(e.startLineNumber, e.startColumn), n = this.convertViewPositionToModelPosition(e.endLineNumber, e.endColumn);
            return new g.Range(t.lineNumber, t.column, n.lineNumber, n.column)
        }, t.prototype.convertModelPositionToViewPosition = function (e, t) {
            return this.lines.convertInputPositionToOutputPosition(e, t)
        }, t.prototype.convertModelSelectionToViewSelection = function (e) {
            var t = this.convertModelPositionToViewPosition(e.selectionStartLineNumber, e.selectionStartColumn), n = this.convertModelPositionToViewPosition(e.positionLineNumber, e.positionColumn);
            return new f.Selection(t.lineNumber, t.column, n.lineNumber, n.column)
        }, t.prototype.convertModelRangeToViewRange = function (e) {
            var t = this.convertModelPositionToViewPosition(e.startLineNumber, e.startColumn), n = this.convertModelPositionToViewPosition(e.endLineNumber, e.endColumn);
            return new g.Range(t.lineNumber, t.column, n.lineNumber, n.column)
        }, t
    }(c.EventEmitter);
    t.ViewModel = C
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/editorExtensions", ["require", "exports", "vs/base/ui/actions", "vs/editor/core/constants", "vs/base/lib/winjs.base", "vs/editor/editor", "vs/platform/platform", "vs/platform/services"], function (e, t, n, i, o, r, s, a) {
    "use strict";
    var u = n, l = i, d = o, c = s;
    !function (e) {
        e[e.TextFocus = 1] = "TextFocus", e[e.WidgetFocus = 2] = "WidgetFocus", e[e.Writeable = 4] = "Writeable", e[e.UpdateOnModelChange = 8] = "UpdateOnModelChange", e[e.UpdateOnConfigurationChange = 16] = "UpdateOnConfigurationChange"
    }(t.Precondition || (t.Precondition = {}));
    var h = t.Precondition;
    t.defaultPrecondition = h.TextFocus | h.Writeable | h.UpdateOnModelChange;
    var p = function (e) {
        function n(n, i, o) {
            "undefined" == typeof o && (o = t.defaultPrecondition);
            var r = this;
            e.call(this, i.id), this.descriptor = i, this.editor = n, this.needsTextFocus = !!(o & h.TextFocus), this.needsWidgetFocus = !!(o & h.WidgetFocus), this.needsWritable = !!(o & h.Writeable), this.toUnhook = [], this.bindings = [], i.label && (this.label = i.label), this.hasFocus = !1, this.needsTextFocus && (this.toUnhook.push(this.editor.addListener("focus", function () {
                return r.onFocusChanged(!0)
            })), this.toUnhook.push(this.editor.addListener("blur", function () {
                return r.onFocusChanged(!1)
            }))), this.hasWidgetFocus = !1, this.needsWidgetFocus && (this.toUnhook.push(this.editor.addListener("widgetFocus", function () {
                return r.onWidgetFocusChanges(!0)
            })), this.toUnhook.push(this.editor.addListener("widgetBlur", function () {
                return r.onWidgetFocusChanges(!1)
            }))), this.isReadOnly = this.editor.getConfiguration().readOnly, this.needsWritable && this.toUnhook.push(this.editor.addListener(l.EventType.ConfigurationChanged, function (e) {
                return r.onConfigurationChanged(e)
            })), o & h.UpdateOnModelChange && this.toUnhook.push(this.editor.addListener(l.EventType.ModelChanged, function () {
                return r.updateEnablementState()
            })), o & h.UpdateOnConfigurationChange && this.toUnhook.push(this.editor.addListener(l.EventType.ConfigurationChanged, function () {
                return r.updateEnablementState()
            })), this.enabled = this.getEnablementState()
        }

        return __extends(n, e), n.prototype.getId = function () {
            return this.id
        }, n.prototype.injectTelemetryService = function (e) {
            this.telemetryService = e
        }, n.prototype.injectHandlerService = function (e) {
            var t = this;
            this.handlerService = e;
            for (var n = function () {
                return t.enabled ? (t.telemetryService.publicLog("editorActionInvoked", {name: t.label}), d.Promise.as(t.run()).done(), !0) : !1
            }, i = 0; i < this.descriptor.keybindings.length; i++)this.bindings.push(this.handlerService.bind(this.descriptor.keybindings[i], n));
            this.updateEnablementState()
        }, n.prototype.getDescriptor = function () {
            return this.descriptor
        }, n.prototype.onFocusChanged = function (e) {
            this.hasFocus = e, this.enabled = this.getEnablementState()
        }, n.prototype.onWidgetFocusChanges = function (e) {
            this.hasWidgetFocus = e, this.enabled = this.getEnablementState()
        }, n.prototype.onConfigurationChanged = function () {
            this.isReadOnly = this.editor.getConfiguration().readOnly, this.enabled = this.getEnablementState()
        }, n.prototype.getEnablementState = function () {
            return this.editor.getModel() ? this.needsTextFocus && !this.hasFocus ? !1 : this.needsWidgetFocus && !this.hasWidgetFocus ? !1 : this.needsWritable && this.isReadOnly ? !1 : !!this.handlerService && !!this.telemetryService : !1
        }, n.prototype.updateEnablementState = function () {
            this.enabled = this.getEnablementState()
        }, n.prototype.dispose = function () {
            for (; this.toUnhook.length > 0;)this.toUnhook.pop()();
            for (var t = 0; t < this.bindings.length; t++)this.bindings[t].dispose();
            this.bindings = [], e.prototype.dispose.call(this)
        }, n
    }(u.Action);
    t.EditorAction = p, t.Extensions = {EditorContributions: "editor.contributions"};
    var f = function () {
        function e() {
            this.editorContributions = []
        }

        return e.prototype.registerEditorContribution = function (e) {
            this.editorContributions.push(e)
        }, e.prototype.getEditorContributions = function () {
            return this.editorContributions.slice(0)
        }, e
    }();
    c.Registry.add(t.Extensions.EditorContributions, new f)
}), define("vs/css!vs/editor/css/editor", ["vs/css!vs/editor/editor.main"], {}), define("vs/css!vs/editor/css/default-theme", ["vs/css!vs/editor/editor.main"], {}), define("vs/css!vs/editor/core/view/viewCursors/viewCursors", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/viewCursors/viewCursors", ["require", "exports", "vs/editor/core/view/viewEventHandler", "vs/editor/core/view/viewCursors/viewCursor", "vs/css!./viewCursors"], function (e, t, n, i) {
    "use strict";
    var o, r = n, s = i;
    !function (e) {
        e[e.Hidden = 0] = "Hidden", e[e.Visible = 1] = "Visible", e[e.Blink = 2] = "Blink"
    }(o || (o = {}));
    var a = function (e) {
        function t(t) {
            e.call(this), this.context = t, this.primaryCursor = new s.ViewCursor(this.context, !1), this.secondaryCursors = [], this.domNode = document.createElement("div"), this.domNode.className = "cursors-layer", this.currentLine = document.createElement("div"), this.currentLine.className = "current-line", this.currentLineIsVisible = !0, this.currentLine.style.width = "0px", this.currentLine.style.height = this.context.configuration.editor.lineHeight + "px", this.domNode.appendChild(this.currentLine), this.domNode.appendChild(this.primaryCursor.getDomNode()), this.blinkTimer = -1, this.selectionIsEmpty = !0, this.editorHasFocus = !1, this.updateCurrentLine(), this.updateBlinking(), this.context.addEventHandler(this)
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this.context.removeEventHandler(this), -1 !== this.blinkTimer && (window.clearInterval(this.blinkTimer), this.blinkTimer = -1)
        }, t.prototype.getDomNode = function () {
            return this.domNode
        }, t.prototype.onModelFlushed = function () {
            this.primaryCursor.onModelFlushed();
            for (var e = 0, t = this.secondaryCursors.length; t > e; e++) {
                var n = this.secondaryCursors[e].getDomNode();
                n.parentNode.removeChild(n)
            }
            return this.secondaryCursors = [], !0
        }, t.prototype.onModelDecorationsChanged = function () {
            return!1
        }, t.prototype.onModelLinesDeleted = function () {
            return!0
        }, t.prototype.onModelLineChanged = function () {
            return!0
        }, t.prototype.onModelLinesInserted = function () {
            return!0
        }, t.prototype.onCursorPositionChanged = function (e) {
            if (this.primaryCursor.onCursorPositionChanged(e.position, e.isInEditableRange), this.updateBlinking(), this.updateCurrentLine(), this.secondaryCursors.length < e.secondaryPositions.length)for (var t = e.secondaryPositions.length - this.secondaryCursors.length, n = 0; t > n; n++) {
                var i = new s.ViewCursor(this.context, !0);
                this.primaryCursor.getDomNode().parentNode.insertBefore(i.getDomNode(), this.primaryCursor.getDomNode().nextSibling), this.secondaryCursors.push(i)
            } else if (this.secondaryCursors.length > e.secondaryPositions.length)for (var o = this.secondaryCursors.length - e.secondaryPositions.length, n = 0; o > n; n++)this.secondaryCursors[0].getDomNode().parentNode.removeChild(this.secondaryCursors[0].getDomNode()), this.secondaryCursors.splice(0, 1);
            for (var n = 0; n < e.secondaryPositions.length; n++)this.secondaryCursors[n].onCursorPositionChanged(e.secondaryPositions[n], e.isInEditableRange);
            return!0
        }, t.prototype.onCursorSelectionChanged = function (e) {
            return this.selectionIsEmpty = e.selection.isEmpty(), this.updateCurrentLine(), !1
        }, t.prototype.onConfigurationChanged = function (e) {
            this.primaryCursor.onConfigurationChanged(e);
            for (var t = 0, n = this.secondaryCursors.length; n > t; t++)this.secondaryCursors[t].onConfigurationChanged(e);
            return!0
        }, t.prototype.onConfigurationFontChanged = function () {
            return!0
        }, t.prototype.onConfigurationLineHeightChanged = function () {
            this.primaryCursor.onConfigurationLineHeightChanged();
            for (var e = 0, t = this.secondaryCursors.length; t > e; e++)this.secondaryCursors[e].onConfigurationLineHeightChanged();
            return this.currentLine.style.height = this.context.configuration.editor.lineHeight + "px", !0
        }, t.prototype.onLayoutChanged = function (e) {
            return this.domNode.style.left = e.contentLeft + "px", !0
        }, t.prototype.onScrollChanged = function () {
            return!0
        }, t.prototype.onZonesChanged = function () {
            return!0
        }, t.prototype.onScrollWidthChanged = function () {
            return!0
        }, t.prototype.onScrollHeightChanged = function () {
            return!1
        }, t.prototype.onViewFocusChanged = function (e) {
            return this.editorHasFocus = e, this.updateBlinking(), !1
        }, t.prototype.getPosition = function () {
            return this.primaryCursor.getPosition()
        }, t.prototype._shouldShowCurrentLine = function () {
            return this.selectionIsEmpty && this.primaryCursor.getIsInEditableRange() && !this.context.configuration.editor.readOnly
        }, t.prototype.updateCurrentLine = function () {
            this._shouldShowCurrentLine() ? this.currentLineIsVisible || (this.currentLine.style.display = "block", this.currentLineIsVisible = !0) : this.currentLineIsVisible && (this.currentLine.style.display = "none", this.currentLineIsVisible = !1)
        }, t.prototype.getRenderType = function () {
            return this.editorHasFocus ? this.primaryCursor.getIsInEditableRange() && !this.context.configuration.editor.readOnly ? o.Blink : o.Visible : o.Hidden
        }, t.prototype.updateBlinking = function () {
            var e = this;
            -1 !== this.blinkTimer && (window.clearInterval(this.blinkTimer), this.blinkTimer = -1);
            var n = this.getRenderType();
            n === o.Visible || n === o.Blink ? this._show() : this._hide(), n === o.Blink && (this.blinkTimer = window.setInterval(function () {
                return e._blink()
            }, t.BLINK_INTERVAL))
        }, t.prototype._blink = function () {
            this.isVisible ? this._hide() : this._show()
        }, t.prototype._show = function () {
            this.primaryCursor.show();
            for (var e = 0, t = this.secondaryCursors.length; t > e; e++)this.secondaryCursors[e].show();
            this.isVisible = !0
        }, t.prototype._hide = function () {
            this.primaryCursor.hide();
            for (var e = 0, t = this.secondaryCursors.length; t > e; e++)this.secondaryCursors[e].hide();
            this.isVisible = !1
        }, t.prototype.prepareRender = function (e) {
            if (this.shouldRender) {
                this.primaryCursor.prepareRender(e);
                for (var t = 0, n = this.secondaryCursors.length; n > t; t++)this.secondaryCursors[t].prepareRender(e)
            }
        }, t.prototype.render = function (e) {
            if (this.shouldRender) {
                this.shouldRender = !1, this.primaryCursor.render(e);
                for (var t = 0, n = this.secondaryCursors.length; n > t; t++)this.secondaryCursors[t].render(e);
                this.currentLine.style.top = this.primaryCursor.getPositionTop() + "px", this.currentLine.style.width = e.scrollWidth + "px"
            }
        }, t.BLINK_INTERVAL = 500, t
    }(r.ViewEventHandler);
    t.ViewCursors = a
}), define("vs/css!vs/editor/core/view/contentWidgets/contentWidgets", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/contentWidgets/contentWidgets", ["require", "exports", "vs/editor/core/view/viewContext", "vs/editor/editor", "vs/editor/core/view/viewEventHandler", "vs/css!./contentWidgets"], function (e, t, n, i, o) {
    "use strict";
    var r = n, s = i, a = o, u = function (e) {
        function t(t) {
            e.call(this), this.context = t, this.widgets = {}, this.contentWidth = 0, this.shouldRender = !0, this.domNode = document.createElement("div"), this.domNode.className = r.ClassNames.CONTENT_WIDGETS, this.context.addEventHandler(this)
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this.context.removeEventHandler(this), this.context = null, this.widgets = null, this.domNode = null
        }, t.prototype.onModelFlushed = function () {
            return!0
        }, t.prototype.onModelDecorationsChanged = function () {
            return!1
        }, t.prototype.onModelLinesDeleted = function () {
            return!0
        }, t.prototype.onModelLineChanged = function () {
            return!0
        }, t.prototype.onModelLinesInserted = function () {
            return!0
        }, t.prototype.onCursorPositionChanged = function () {
            return!1
        }, t.prototype.onCursorSelectionChanged = function () {
            return!1
        }, t.prototype.onCursorRevealRange = function () {
            return!1
        }, t.prototype.onConfigurationChanged = function () {
            return!0
        }, t.prototype.onConfigurationFontChanged = function () {
            return!0
        }, t.prototype.onConfigurationLineHeightChanged = function () {
            return!0
        }, t.prototype.onLayoutChanged = function (e) {
            this.contentWidth = e.contentWidth;
            var t;
            for (t in this.widgets)this.widgets.hasOwnProperty(t) && (this.widgets[t].widget.getDomNode().style.maxWidth = this.contentWidth + "px");
            return!0
        }, t.prototype.onScrollChanged = function (e) {
            return e.vertical
        }, t.prototype.onZonesChanged = function () {
            return!0
        }, t.prototype.onScrollWidthChanged = function () {
            return!1
        }, t.prototype.onScrollHeightChanged = function () {
            return!1
        }, t.prototype.addWidget = function (e) {
            this.widgets[e.getId()] = {widget: e, position: null, preference: null, isVisible: !1};
            var t = e.getDomNode();
            t.style.position = "absolute", t.style.maxWidth = this.contentWidth + "px", t.style.top = "-1000px", t.setAttribute("widgetId", e.getId()), this.domNode.appendChild(t), this.shouldRender = !0
        }, t.prototype.setWidgetPosition = function (e, t, n) {
            var i = this.widgets[e.getId()];
            i.position = t, i.preference = n, this.shouldRender = !0
        }, t.prototype.removeWidget = function (e) {
            var t = e.getId();
            if (this.widgets.hasOwnProperty(t)) {
                var n = this.widgets[t], i = n.widget.getDomNode();
                i.parentNode.removeChild(i), delete this.widgets[t]
            }
        }, t.prototype.layoutBoxInViewport = function (e, t, n) {
            var i = n.visibleRangeForPosition(e);
            if (!i)return null;
            var o = t.clientWidth, r = t.clientHeight, s = i.top, a = s, u = i.top + i.height, l = n.viewportHeight - u, d = s - r, c = a >= r, h = u, p = l >= r, f = i.left;
            return f + o > n.viewportLeft + n.viewportWidth && (f = n.viewportLeft + n.viewportWidth - o), f < n.viewportLeft && (f = n.viewportLeft), {aboveTop: d, fitsAbove: c, belowTop: h, fitsBelow: p, left: f}
        }, t.prototype.prepareRenderWidgetAtExactPosition = function (e, t) {
            var n = t.visibleRangeForPosition(e);
            return n ? {top: n.top, left: n.left} : null
        }, t.prototype.prepareRenderWidget = function (e, t) {
            var n = this;
            if (!e.position || !e.preference)return null;
            var i, o, r, a = this.context.model.validateModelPosition(e.position), u = this.context.model.convertModelPositionToViewPosition(a.lineNumber, a.column), l = null, d = function () {
                if (!l) {
                    var i = e.widget.getDomNode();
                    l = n.layoutBoxInViewport(u, i, t)
                }
            };
            for (o = 1; 2 >= o; o++)for (r = 0; r < e.preference.length; r++)if (i = e.preference[r], i === s.ContentWidgetPositionPreference.ABOVE) {
                if (d(), !l)return null;
                if (2 === o || l.fitsAbove)return{top: l.aboveTop, left: l.left}
            } else {
                if (i !== s.ContentWidgetPositionPreference.BELOW)return this.prepareRenderWidgetAtExactPosition(u, t);
                if (d(), !l)return null;
                if (2 === o || l.fitsBelow)return{top: l.belowTop, left: l.left}
            }
        }, t.prototype.prepareRender = function (e, t) {
            if (!this.shouldRender)return null;
            var n, i, o = {};
            for (i in this.widgets)this.widgets.hasOwnProperty(i) && (n = this.prepareRenderWidget(this.widgets[i], e), n && (t && t.renderedContentWidgets++, o[i] = n));
            return o
        }, t.prototype.render = function (e) {
            if (this.shouldRender) {
                this.shouldRender = !1;
                var t, n, i;
                for (t in this.widgets)this.widgets.hasOwnProperty(t) && (n = this.widgets[t], i = this.widgets[t].widget.getDomNode(), e.hasOwnProperty(t) ? (i.style.top = e[t].top + "px", i.style.left = e[t].left + "px", n.isVisible || (n.isVisible = !0)) : n.isVisible && (n.isVisible = !1, i.style.top = "-1000px"))
            }
        }, t
    }(a.ViewEventHandler);
    t.ViewContentWidgets = u
}), define("vs/css!vs/editor/core/view/overlayWidgets/overlayWidgets", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/overlayWidgets/overlayWidgets", ["require", "exports", "vs/editor/core/view/viewContext", "vs/editor/editor", "vs/editor/core/view/viewEventHandler", "vs/css!./overlayWidgets"], function (e, t, n, i, o) {
    "use strict";
    var r = n, s = i, a = o, u = function (e) {
        function t(t) {
            e.call(this), this.context = t, this.widgets = {}, this.verticalScrollbarWidth = 0, this.domNode = document.createElement("div"), this.domNode.className = r.ClassNames.OVERLAY_WIDGETS, this.domNode.setAttribute("aria-hidden", "true"), this.domNode.setAttribute("role", "presentation"), this.context.addEventHandler(this)
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this.context.removeEventHandler(this), this.context = null, this.widgets = null
        }, t.prototype.onLayoutChanged = function (e) {
            return this.verticalScrollbarWidth = e.verticalScrollbarWidth, this.domNode.style.width = e.width + "px", !0
        }, t.prototype.addWidget = function (e) {
            this.widgets[e.getId()] = {widget: e, preference: null};
            var t = e.getDomNode();
            t.style.position = "absolute", t.setAttribute("widgetId", e.getId()), this.domNode.appendChild(t)
        }, t.prototype.setWidgetPosition = function (e, t) {
            var n = this.widgets[e.getId()];
            n.preference = t, this._renderWidget(n)
        }, t.prototype.removeWidget = function (e) {
            var t = e.getId();
            if (this.widgets.hasOwnProperty(t)) {
                var n = this.widgets[t], i = n.widget.getDomNode();
                i.parentNode.removeChild(i), delete this.widgets[t]
            }
        }, t.prototype._renderWidget = function (e) {
            if (null !== e.preference && e.preference === s.OverlayWidgetPositionPreference.TOP_RIGHT_CORNER) {
                var t = e.widget.getDomNode();
                t.style.top = "0px", t.style.right = 2 * this.verticalScrollbarWidth + "px"
            }
        }, t.prototype.prepareRender = function (e, t) {
            if (t) {
                var n;
                for (n in this.widgets)this.widgets.hasOwnProperty(n) && t.renderedOverlayWidgets++
            }
            return null
        }, t.prototype.render = function () {
            if (this.shouldRender) {
                this.shouldRender = !1;
                var e;
                for (e in this.widgets)this.widgets.hasOwnProperty(e) && this._renderWidget(this.widgets[e])
            }
        }, t
    }(a.ViewEventHandler);
    t.ViewOverlayWidgets = u
}), define("vs/css!vs/base/ui/scrollbar/impl/scrollbars", ["vs/css!vs/editor/editor.main"], {}), define("vs/base/ui/scrollbar/impl/scrollableElement", ["require", "exports", "vs/base/dom/dom", "vs/base/dom/mouseEvent", "vs/base/env", "vs/base/ui/scrollbar/impl/common", "vs/base/ui/scrollbar/impl/domNodeScrollable", "vs/base/ui/scrollbar/impl/horizontalScrollbar", "vs/base/ui/scrollbar/impl/verticalScrollbar", "vs/base/lifecycle", "vs/css!./scrollbars"], function (e, t, n, i, o, r, s, a, u, l) {
    "use strict";
    var d = n, c = i, h = o, p = r, f = s, g = a, m = u, v = l, y = 500, b = 50, C = function () {
        function e(e, t) {
            var n = this;
            this.originalElement = e, this.originalElement.style.overflow = "hidden", this.options = this._createOptions(t), this.scrollable = this.options.scrollable ? this.options.scrollable : new f.DomNodeScrollable(this.originalElement), this.verticalScrollbarWidth = this.options.verticalScrollbarSize, this.horizontalScrollbarHeight = this.options.horizontalScrollbarSize, this.verticalScrollbar = new m.VerticalScrollbar(this.scrollable, this, this.options), this.horizontalScrollbar = new g.HorizontalScrollbar(this.scrollable, this, this.options), this.domNode = document.createElement("div"), this.domNode.className = "monaco-scrollable-element " + this.options.className, this.domNode.setAttribute("aria-hidden", "true"), this.domNode.setAttribute("role", "presentation"), this.domNode.style.position = "relative", this.domNode.style.overflow = "hidden", this.domNode.appendChild(this.originalElement), this.domNode.appendChild(this.horizontalScrollbar.domNode), this.domNode.appendChild(this.verticalScrollbar.domNode), this.options.useShadows && (this.leftShadowDomNode = document.createElement("div"), this.leftShadowDomNode.className = "shadow", this.domNode.appendChild(this.leftShadowDomNode), this.topShadowDomNode = document.createElement("div"), this.topShadowDomNode.className = "shadow", this.domNode.appendChild(this.topShadowDomNode), this.topLeftShadowDomNode = document.createElement("div"), this.topLeftShadowDomNode.className = "shadow top-left-corner", this.domNode.appendChild(this.topLeftShadowDomNode)), this.listenOnDomNode = this.options.listenOnDomNode || this.domNode, this.toDispose = [], this.toDispose.push(this.scrollable.addScrollListener(function () {
                return n._onScroll()
            })), this.options.handleMouseWheel && this.handleMouseWheel(), this.toDispose.push(d.addDisposableListener(this.listenOnDomNode, "mouseover", function (e) {
                return n._onMouseOver(e)
            })), this.toDispose.push(d.addDisposableNonBubblingMouseOutListener(this.listenOnDomNode, function (e) {
                return n._onMouseOut(e)
            })), this.onElementDimensionsTimeout = -1, this.onElementInternalDimensionsTimeout = -1, this.hideTimeout = -1, this.isDragging = !1, this.mouseIsOver = !1, this.onElementDimensions(!0), this.onElementInternalDimensions(!0)
        }

        return e.prototype.dispose = function () {
            this.toDispose = v.disposeAll(this.toDispose), this.verticalScrollbar.destroy(), this.horizontalScrollbar.destroy(), -1 !== this.onElementDimensionsTimeout && (window.clearTimeout(this.onElementDimensionsTimeout), this.onElementDimensionsTimeout = -1), -1 !== this.onElementInternalDimensionsTimeout && (window.clearTimeout(this.onElementInternalDimensionsTimeout), this.onElementInternalDimensionsTimeout = -1)
        }, e.prototype.destroy = function () {
            this.dispose()
        }, e.prototype.getDomNode = function () {
            return this.domNode
        }, e.prototype.getOverviewRulerLayoutInfo = function () {
            return{parent: this.domNode, insertBefore: this.verticalScrollbar.domNode, top: this.options.verticalHasArrows ? this.options.arrowSize : 0, bottom: (this.options.verticalHasArrows ? this.options.arrowSize : 0) + this.options.horizontalScrollbarSize, width: this.options.verticalScrollbarSize}
        }, e.prototype.getVerticalSliderDomNode = function () {
            return this.verticalScrollbar.slider
        }, e.prototype.delegateVerticalScrollbarMouseDown = function (e) {
            return this.verticalScrollbar.onMouseDown(e)
        }, e.prototype.onElementDimensions = function (e) {
            "undefined" == typeof e && (e = !1);
            var t = this;
            e ? this.actualElementDimensions() : -1 === this.onElementDimensionsTimeout && (this.onElementDimensionsTimeout = window.setTimeout(function () {
                return t.actualElementDimensions()
            }, 0))
        }, e.prototype.actualElementDimensions = function () {
            this.onElementDimensionsTimeout = -1, this.dimensions = this._computeDimensions(), this.verticalScrollbar.onElementSize(this.dimensions.height), this.horizontalScrollbar.onElementSize(this.dimensions.width)
        }, e.prototype.onElementInternalDimensions = function (e) {
            "undefined" == typeof e && (e = !1);
            var t = this;
            e ? this.actualElementInternalDimensions() : -1 === this.onElementInternalDimensionsTimeout && (this.onElementInternalDimensionsTimeout = window.setTimeout(function () {
                return t.actualElementInternalDimensions()
            }, 0))
        }, e.prototype.actualElementInternalDimensions = function () {
            this.onElementInternalDimensionsTimeout = -1, this.horizontalScrollbar.onElementScrollSize(this.scrollable.getScrollWidth()), this.verticalScrollbar.onElementScrollSize(this.scrollable.getScrollHeight())
        }, e.prototype.updateClassName = function (e) {
            this.options.className = e, h.browser.isMacintosh && (this.options.className += " mac"), this.domNode.className = "monaco-scrollable-element " + this.options.className
        }, e.prototype.handleMouseWheel = function () {
            var e = this, t = function (t) {
                var n = new c.StandardMouseWheelEvent(t);
                e.onMouseWheel(n)
            };
            this.toDispose.push(d.addDisposableListener(this.listenOnDomNode, "mousewheel", t)), this.toDispose.push(d.addDisposableListener(this.listenOnDomNode, "DOMMouseScroll", t))
        }, e.prototype.onMouseWheel = function (e) {
            if (this.options.handleMouseWheel) {
                var t = -1, n = -1, i = function () {
                    -1 !== t && (this.verticalScrollbar.setDesiredScrollPosition(t), t = -1), -1 !== n && (this.horizontalScrollbar.setDesiredScrollPosition(n), n = -1)
                }.bind(this);
                if (e.deltaY || e.deltaX) {
                    var o = e.deltaY, r = e.deltaX;
                    if (this.options.flipAxes && (o = e.deltaX, r = e.deltaY), o) {
                        var s = this.scrollable.getScrollTop();
                        t = this.verticalScrollbar.validateScrollPosition((-1 !== t ? t : s) - b * o), t === s && (t = -1)
                    }
                    if (r) {
                        var a = this.scrollable.getScrollLeft();
                        n = this.horizontalScrollbar.validateScrollPosition((-1 !== n ? n : a) - b * r), n === a && (n = -1)
                    }
                    (-1 !== t || -1 !== n) && (e.preventDefault(), e.stopPropagation(), d.scheduleAtNextAnimationFrame(i))
                }
            }
        }, e.prototype._onScroll = function () {
            var e = this.scrollable.getScrollHeight(), t = this.scrollable.getScrollTop(), n = this.scrollable.getScrollWidth(), i = this.scrollable.getScrollLeft();
            if (this.verticalScrollbar.onElementScrollPosition(t), this.horizontalScrollbar.onElementScrollPosition(i), this.options.useShadows) {
                var o = e > 0 && t > 0, r = n > 0 && i > 0;
                d.toggleClass(this.topShadowDomNode, "top", o), d.toggleClass(this.topLeftShadowDomNode, "top", o), d.toggleClass(this.leftShadowDomNode, "left", r), d.toggleClass(this.topLeftShadowDomNode, "left", r)
            }
            this._reveal()
        }, e.prototype.onDragStart = function () {
            this.isDragging = !0, this._reveal()
        }, e.prototype.onDragEnd = function () {
            this.isDragging = !1, this._hide()
        }, e.prototype._onMouseOut = function () {
            this.mouseIsOver = !1, this._hide()
        }, e.prototype._onMouseOver = function () {
            this.mouseIsOver = !0, this._reveal()
        }, e.prototype._reveal = function () {
            this.verticalScrollbar.beginReveal(), this.horizontalScrollbar.beginReveal(), this._scheduleHide()
        }, e.prototype._hide = function () {
            this.mouseIsOver || this.isDragging || (this.verticalScrollbar.beginHide(), this.horizontalScrollbar.beginHide())
        }, e.prototype._scheduleHide = function () {
            -1 !== this.hideTimeout && window.clearTimeout(this.hideTimeout), this.hideTimeout = window.setTimeout(this._hide.bind(this), y)
        }, e.prototype._computeDimensions = function () {
            var e = this.domNode.clientWidth, t = this.domNode.clientHeight, n = t - (this.options.verticalHasArrows ? 2 * this.options.arrowSize : 0) - this.options.horizontalScrollbarSize, i = e - (this.options.horizontalHasArrows ? 2 * this.options.arrowSize : 0) - this.options.verticalScrollbarSize;
            return{width: e, height: t, representableHeight: n, representableWidth: i}
        }, e.prototype._createOptions = function (e) {
            function t(e, t, n) {
                return e.hasOwnProperty(t) ? e[t] : n
            }

            var n = {className: t(e, "className", ""), useShadows: t(e, "useShadows", !0), handleMouseWheel: t(e, "handleMouseWheel", !0), flipAxes: t(e, "flipAxes", !1), arrowSize: t(e, "arrowSize", 11), scrollable: t(e, "scrollable", null), listenOnDomNode: t(e, "listenOnDomNode", null), horizontal: p.visibilityFromString(t(e, "horizontal", "auto")), horizontalScrollbarSize: t(e, "horizontalScrollbarSize", 10), horizontalHasArrows: t(e, "horizontalHasArrows", !1), vertical: p.visibilityFromString(t(e, "vertical", "auto")), verticalScrollbarSize: t(e, "verticalScrollbarSize", 10), verticalHasArrows: t(e, "verticalHasArrows", !1)};
            return h.browser.isMacintosh && (n.className += " mac"), n
        }, e
    }();
    t.ScrollableElement = C
}), define("vs/editor/core/view/layout/scroll/scrollManager", ["require", "exports", "vs/base/ui/scrollbar/impl/scrollableElement", "vs/editor/core/constants", "vs/editor/core/view/viewContext", "vs/editor/core/view/layout/scroll/editorScrollable", "vs/base/dom/dom", "vs/base/lifecycle"], function (e, t, n, i, o, r, s, a) {
    "use strict";
    function u(e, t, n) {
        e.hasOwnProperty(n) && (t[n] = e[n])
    }

    var l = n, d = i, c = o, h = r, p = s, f = a, g = function () {
        function e(e, t, n, i) {
            var o = this;
            this.toDispose = [], this.configuration = e, this.privateViewEventBus = t, this.linesContent = n, this.scrollable = new h.EditorScrollable(n), this.toDispose.push(this.scrollable), this.toDispose.push(this.scrollable.addScrollListener(function (e) {
                o.privateViewEventBus.emit(d.EventType.ViewScrollChanged, e)
            }));
            var r = {scrollable: this.scrollable, listenOnDomNode: i, vertical: this.configuration.editor.scrollbar.vertical, horizontal: this.configuration.editor.scrollbar.horizontal, className: c.ClassNames.SCROLLABLE_ELEMENT + " " + this.configuration.editor.theme};
            u(this.configuration.editor.scrollbar, r, "verticalHasArrows"), u(this.configuration.editor.scrollbar, r, "horizontalHasArrows"), u(this.configuration.editor.scrollbar, r, "verticalScrollbarSize"), u(this.configuration.editor.scrollbar, r, "horizontalScrollbarSize"), u(this.configuration.editor.scrollbar, r, "useShadows"), u(this.configuration.editor.scrollbar, r, "handleMouseWheel"), u(this.configuration.editor.scrollbar, r, "arrowSize"), this.scrollbar = new l.ScrollableElement(n, r), this.toDispose.push(this.scrollbar), this.toDispose.push(this.scrollable.addInternalSizeChangeListener(function () {
                o.scrollbar.onElementInternalDimensions()
            })), this.toDispose.push(this.configuration.addListener2(d.EventType.ConfigurationChanged, function () {
                o.scrollbar.updateClassName(o.configuration.editor.theme)
            }));
            var s = function (e, t, n) {
                if (t) {
                    var i = e.scrollTop;
                    i && (o.scrollable.setScrollTop(o.getScrollTop() + i), e.scrollTop = 0)
                }
                if (n) {
                    var r = e.scrollLeft;
                    r && (o.scrollable.setScrollLeft(o.getScrollLeft() + r), e.scrollLeft = 0)
                }
            };
            this.toDispose.push(p.addDisposableListener(i, "scroll", function () {
                return s(i, !0, !0)
            })), this.toDispose.push(p.addDisposableListener(n, "scroll", function () {
                return s(n, !0, !1)
            }))
        }

        return e.prototype.dispose = function () {
            this.toDispose = f.disposeAll(this.toDispose)
        }, e.prototype.getVerticalScrollbarWidth = function () {
            return this.scrollbar.verticalScrollbarWidth
        }, e.prototype.getHorizontalScrollbarHeight = function () {
            return this.scrollbar.horizontalScrollbarHeight
        }, e.prototype.onSizeProviderLayoutChanged = function () {
            this.scrollbar && this.scrollbar.onElementDimensions()
        }, e.prototype.getScrolledTopFromAbsoluteTop = function (e) {
            return e - this.scrollable.getScrollTop()
        }, e.prototype.getOverviewRulerLayoutInfo = function () {
            return this.scrollbar ? this.scrollbar.getOverviewRulerLayoutInfo() : null
        }, e.prototype.getScrollbarContainerDomNode = function () {
            return this.scrollbar ? this.scrollbar.getDomNode() : this.linesContent
        }, e.prototype.delegateVerticalScrollbarMouseDown = function (e) {
            this.scrollbar && this.scrollbar.delegateVerticalScrollbarMouseDown(e)
        }, e.prototype.getWidth = function () {
            return this.scrollable.getWidth()
        }, e.prototype.setWidth = function (e) {
            this.scrollable.setWidth(e)
        }, e.prototype.getHeight = function () {
            return this.scrollable.getHeight()
        }, e.prototype.setHeight = function (e) {
            this.scrollable.setHeight(e)
        }, e.prototype.getScrollHeight = function () {
            return this.scrollable.getScrollHeight()
        }, e.prototype.setScrollHeight = function (e) {
            this.scrollable.setScrollHeight(e)
        }, e.prototype.getScrollWidth = function () {
            return this.scrollable.getScrollWidth()
        }, e.prototype.setScrollWidth = function (e) {
            this.scrollable.setScrollWidth(e)
        }, e.prototype.getScrollLeft = function () {
            return this.scrollable.getScrollLeft()
        }, e.prototype.setScrollLeft = function (e) {
            this.scrollable.setScrollLeft(e)
        }, e.prototype.getScrollTop = function () {
            return this.scrollable.getScrollTop()
        }, e.prototype.setScrollTop = function (e) {
            this.scrollable.setScrollTop(e)
        }, e.prototype.addScrollListener = function (e) {
            return this.scrollable.addScrollListener(e)
        }, e
    }();
    t.ScrollManager = g
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/layout/layoutProvider", ["require", "exports", "vs/editor/core/constants", "vs/editor/core/view/layout/lines/linesLayout", "vs/editor/core/view/viewEventHandler", "vs/editor/core/view/layout/elementSizeObserver", "vs/editor/core/view/layout/characterSizeProvider", "vs/editor/core/view/layout/editorLayoutProvider", "vs/editor/core/view/layout/scroll/scrollManager"], function (e, t, n, i, o, r, s, a, u) {
    "use strict";
    var l = n, d = i, c = o, h = r, p = s, f = a, g = u, m = function (e) {
        function t(t, n, i, o, r, s) {
            var a = this;
            e.call(this), this.configuration = n, this.privateViewEventBus = o, this.model = i, this.scrollManager = new g.ScrollManager(n, o, r, s), this.charSizeProvider = new p.CharacterSizeProvider(this.configuration), this.editorLayoutProvider = new f.EditorLayoutProvider(-1, -1, this.configuration.editor.lineHeight, this.configuration.editor.glyphMargin, this.configuration.editor.lineNumbers, this.configuration.editor.lineNumbersMinChars, this.charSizeProvider.maxDigitWidth()), this.editorLayoutProvider.setLineCount(this.model.getLineCount()), this.editorLayoutProvider.setScrollbarSize(this.scrollManager.getVerticalScrollbarWidth(), this.scrollManager.getHorizontalScrollbarHeight()), this.elementSizeObserver = new h.ElementSizeObserver(t, function (e, t) {
                return a._onContainerSizeChanged(e, t)
            }), this.configuration.editor.automaticLayout && this.elementSizeObserver.startObserving(), this.linesLayout = new d.LinesLayout(n, i), this._updatePageSize(), this._updateHeight()
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this.elementSizeObserver.dispose(), this.scrollManager.dispose()
        }, t.prototype.layout = function () {
            this.elementSizeObserver.observe()
        }, t.prototype.updateLineCount = function () {
            var e = this.editorLayoutProvider.setLineCount(this.model.getLineCount());
            e && this._emitLayoutChangedEvent()
        }, t.prototype.onZonesChanged = function () {
            return this._updateHeight(), !1
        }, t.prototype.onModelFlushed = function () {
            return this.linesLayout.onModelFlushed(), this.updateLineCount(), this._updateHeight(), !1
        }, t.prototype.onModelLinesDeleted = function (e) {
            return this.linesLayout.onModelLinesDeleted(e), this.updateLineCount(), this._updateHeight(), !1
        }, t.prototype.onModelLineChanged = function () {
            return!1
        }, t.prototype.onModelLinesInserted = function (e) {
            return this.linesLayout.onModelLinesInserted(e), this.updateLineCount(), this._updateHeight(), !1
        }, t.prototype.onConfigurationChanged = function () {
            var e = this.linesLayout.getCenteredLineInViewport(this.getCurrentViewport()), t = this.editorLayoutProvider.setShowLineNumbers(this.configuration.editor.lineNumbers);
            return t = this.editorLayoutProvider.setLineNumbersMinChars(this.configuration.editor.lineNumbersMinChars) || t, t = this.editorLayoutProvider.setGlyphMargin(this.configuration.editor.glyphMargin) || t, this._updateWrappingColumn(this.getLayoutInfo(), e), t && this._emitLayoutChangedEvent(), this._updateHeight(), !1
        }, t.prototype.onConfigurationLineHeightChanged = function () {
            this._updatePageSize();
            var e = this.editorLayoutProvider.setLineHeight(this.configuration.editor.lineHeight);
            return e && this._emitLayoutChangedEvent(), this._updateHeight(), !1
        }, t.prototype.onConfigurationFontChanged = function () {
            var e = this.linesLayout.getCenteredLineInViewport(this.getCurrentViewport()), t = this.charSizeProvider.doMeasurements();
            if (t) {
                var n = this.editorLayoutProvider.setMaxDigitWidth(this.charSizeProvider.maxDigitWidth());
                n && this._emitLayoutChangedEvent()
            }
            return this._updateWrappingColumn(this.getLayoutInfo(), e), !1
        }, t.prototype._updateHeight = function () {
            var e = this.scrollManager.getScrollHeight();
            this.scrollManager.setScrollHeight(this.getTotalHeight());
            var t = this.scrollManager.getScrollHeight();
            e !== t && this.privateViewEventBus.emit(l.EventType.ViewScrollHeightChanged, t)
        }, t.prototype._updateWrappingColumn = function (e, t) {
            "undefined" == typeof t && (t = 0);
            var n = this.configuration.getWrappingColumn(), i = -1;
            0 === n ? i = Math.max(1, Math.floor(e.contentWidth / this.configuration.editor.thinnestCharacterWidth)) : n > 0 && (i = n), this.model.setWrappingColumn(i, t)
        }, t.prototype._onContainerSizeChanged = function (e, t) {
            var n = this.editorLayoutProvider.setDimensions(e, t);
            n && (this._updatePageSize(), this._emitLayoutChangedEvent())
        }, t.prototype._updatePageSize = function () {
            var e = this.editorLayoutProvider.getLayoutInfo();
            this.configuration.editor.pageSize = Math.floor(e.height / this.configuration.editor.lineHeight) - 2
        }, t.prototype.getLayoutInfo = function () {
            var e = this.editorLayoutProvider.getLayoutInfo(), t = this.scrollManager.getOverviewRulerLayoutInfo();
            return e.overviewRuler = {top: t.top, width: t.width, height: e.height - t.top - t.bottom, right: 0}, e
        }, t.prototype.getCurrentViewport = function () {
            var e = this.editorLayoutProvider.getLayoutInfo();
            return{top: this.scrollManager.getScrollTop(), left: this.scrollManager.getScrollLeft(), width: e.contentWidth, height: e.contentHeight}
        }, t.prototype._emitLayoutChangedEvent = function () {
            this.scrollManager.onSizeProviderLayoutChanged();
            var e = this.getLayoutInfo();
            this.scrollManager.setWidth(e.contentWidth), this.scrollManager.setHeight(e.contentHeight), this._updateWrappingColumn(e), this.privateViewEventBus.emit(l.EventType.ViewLayoutChanged, e)
        }, t.prototype.emitLayoutChangedEvent = function () {
            this._emitLayoutChangedEvent()
        }, t.prototype._computeScrollWidth = function (e, n) {
            var i = this.configuration.getWrappingColumn(), o = 0 === i;
            return o ? Math.max(e, n) : Math.max(e + t.LINES_HORIZONTAL_EXTRA_PX, n)
        }, t.prototype.onMaxLineWidthChanged = function (e) {
            var t = this._computeScrollWidth(e, this.getCurrentViewport().width), n = this.scrollManager.getScrollWidth();
            this.scrollManager.setScrollWidth(t);
            var t = this.scrollManager.getScrollWidth();
            t !== n && (this.privateViewEventBus.emit(l.EventType.ViewScrollWidthChanged), this._updateHeight())
        }, t.prototype.saveState = function () {
            return{scrollTop: this.scrollManager.getScrollTop(), scrollLeft: this.scrollManager.getScrollLeft(), linesDomNodeWidth: this.scrollManager.getScrollWidth()}
        }, t.prototype.restoreState = function (e) {
            this.scrollManager.setScrollTop(e.scrollTop), this.scrollManager.setScrollLeft(e.scrollLeft)
        }, t.prototype.addWhitespace = function (e, t) {
            return this.linesLayout.insertWhitespace(e, t)
        }, t.prototype.changeWhitespace = function (e, t) {
            return this.linesLayout.changeWhitespace(e, t)
        }, t.prototype.changeAfterLineNumberForWhitespace = function (e, t) {
            return this.linesLayout.changeAfterLineNumberForWhitespace(e, t)
        }, t.prototype.removeWhitespace = function (e) {
            return this.linesLayout.removeWhitespace(e)
        }, t.prototype.getVerticalOffsetForLineNumber = function (e) {
            return this.linesLayout.getVerticalOffsetForLineNumber(e)
        }, t.prototype.heightInPxForLine = function (e) {
            return this.linesLayout.getHeightForLineNumber(e)
        }, t.prototype.getLineNumberAtVerticalOffset = function (e) {
            return this.linesLayout.getLineNumberAtOrAfterVerticalOffset(e)
        }, t.prototype.getTotalHeight = function () {
            var e = 0;
            return this.scrollManager.getScrollWidth() > this.scrollManager.getWidth() && (e = this.scrollManager.getHorizontalScrollbarHeight()), this.linesLayout.getTotalHeight(this.getCurrentViewport(), e)
        }, t.prototype.getWhitespaceAtVerticalOffset = function (e) {
            return this.linesLayout.getWhitespaceAtVerticalOffset(e)
        }, t.prototype.getLinesViewportData = function () {
            return this.linesLayout.getLinesViewportData(this.getCurrentViewport())
        }, t.prototype.getWhitespaceViewportData = function () {
            return this.linesLayout.getWhitespaceViewportData(this.getCurrentViewport())
        }, t.prototype.getOverviewRulerInsertData = function () {
            var e = this.scrollManager.getOverviewRulerLayoutInfo();
            return{parent: e.parent, insertBefore: e.insertBefore}
        }, t.prototype.getScrollbarContainerDomNode = function () {
            return this.scrollManager.getScrollbarContainerDomNode()
        }, t.prototype.delegateVerticalScrollbarMouseDown = function (e) {
            this.scrollManager.delegateVerticalScrollbarMouseDown(e)
        }, t.prototype.getScrollHeight = function () {
            return this.scrollManager.getScrollHeight()
        }, t.prototype.getScrollWidth = function () {
            return this.scrollManager.getScrollWidth()
        }, t.prototype.getScrollLeft = function () {
            return this.scrollManager.getScrollLeft()
        }, t.prototype.setScrollLeft = function (e) {
            this.scrollManager.setScrollLeft(e)
        }, t.prototype.getScrollTop = function () {
            return this.scrollManager.getScrollTop()
        }, t.prototype.setScrollTop = function (e) {
            this.scrollManager.setScrollTop(e)
        }, t.prototype.getScrolledTopFromAbsoluteTop = function (e) {
            return this.scrollManager.getScrolledTopFromAbsoluteTop(e)
        }, t.LINES_HORIZONTAL_EXTRA_PX = 30, t
    }(c.ViewEventHandler);
    t.LayoutProvider = m
}), define("vs/css!vs/editor/core/view/selections/selections", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/selections/selections", ["require", "exports", "vs/editor/core/view/viewEventHandler", "vs/css!./selections"], function (e, t, n) {
    "use strict";
    var i, o = n;
    !function (e) {
        e[e.EXTERN = 0] = "EXTERN", e[e.INTERN = 1] = "INTERN", e[e.FLAT = 2] = "FLAT"
    }(i || (i = {}));
    var r = function (e) {
        function t(t) {
            e.call(this), this.context = t, this.selections = [], this.contentLeft = 0, this.previousRender = null, this.horizontalScrollChanged = !1, this.context.addEventHandler(this)
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this.context.removeEventHandler(this), this.context = null, this.selections = null, this.previousRender = null
        }, t.prototype.onModelFlushed = function () {
            return!0
        }, t.prototype.onModelDecorationsChanged = function () {
            return!1
        }, t.prototype.onModelLinesDeleted = function () {
            return!0
        }, t.prototype.onModelLineChanged = function () {
            return!0
        }, t.prototype.onModelLinesInserted = function () {
            return!0
        }, t.prototype.onCursorPositionChanged = function () {
            return!1
        }, t.prototype.onCursorSelectionChanged = function (e) {
            return this.selections = [e.selection], this.selections = this.selections.concat(e.secondarySelections), !0
        }, t.prototype.onCursorRevealRange = function () {
            return!1
        }, t.prototype.onConfigurationChanged = function () {
            return!0
        }, t.prototype.onConfigurationFontChanged = function () {
            return!0
        }, t.prototype.onConfigurationLineHeightChanged = function () {
            return!0
        }, t.prototype.onLayoutChanged = function (e) {
            return this.contentLeft = e.contentLeft, !0
        }, t.prototype.onScrollChanged = function (e) {
            return e.horizontal && (this.horizontalScrollChanged = !0), e.vertical
        }, t.prototype.onZonesChanged = function () {
            return!0
        }, t.prototype.onScrollWidthChanged = function () {
            return!1
        }, t.prototype.onScrollHeightChanged = function () {
            return!1
        }, t.prototype.visibleRangesHaveGaps = function (e) {
            if (e.length <= 1)return!1;
            var t, n, i, o;
            for (t = e[0].top, i = 1, o = e.length; o > i; i++) {
                if (n = e[i].top, n === t)return!0;
                t = n
            }
            return!1
        }, t.prototype.enrichVisibleRangesWithStyle = function (e) {
            var t, n, o, r, s, a, u, l, d, c, h;
            for (c = 0, h = e.length; h > c; c++)t = e[c], n = t.left, o = t.left + t.width, l = {top: i.EXTERN, bottom: i.EXTERN}, d = {top: i.EXTERN, bottom: i.EXTERN}, c > 0 && (r = e[c - 1].left, s = e[c - 1].left + e[c - 1].width, n === r ? l.top = i.FLAT : n > r && (l.top = i.INTERN), o === s ? d.top = i.FLAT : o > r && s > o && (d.top = i.INTERN)), h > c + 1 && (a = e[c + 1].left, u = e[c + 1].left + e[c + 1].width, n === a ? l.bottom = i.FLAT : n > a && u > n && (l.bottom = i.INTERN), o === u ? d.bottom = i.FLAT : u > o && (d.bottom = i.INTERN)), t.startStyle = l, t.endStyle = d
        }, t.prototype.getVisibleRangesWithStyle = function (e, t) {
            var n = t.visibleRangesForRange(e, !0), i = n ? n.toArray() : [], o = this.visibleRangesHaveGaps(i);
            return!o && this.context.configuration.editor.roundedSelection && this.enrichVisibleRangesWithStyle(i), i
        }, t.prototype.createSelectionPiece = function (e, t, n, i, o, r, s, a, u) {
            s.push('<div class="'), s.push(e), s.push('" style="top:'), s.push(t.toString()), s.push("px;left:"), a.push(n), u.push(s.length), s.push((n - r).toString()), s.push("px;width:"), s.push(i.toString()), s.push("px;height:"), s.push(o), s.push('px;"></div>')
        }, t.prototype.actualRenderOneSelection = function (e, n, o, r, s) {
            var a, u, l, d = e.length > 0 && e[0].startStyle, c = this.context.configuration.editor.lineHeight.toString(), h = 0;
            for (u = 0; u < e.length; u++)l = e[u], d && ((l.startStyle.top === i.INTERN || l.startStyle.bottom === i.INTERN) && (h++, this.createSelectionPiece(t.SELECTION_CLASS_NAME, l.top, l.left - t.ROUNDED_PIECE_WIDTH, t.ROUNDED_PIECE_WIDTH, c, n, o, r, s), a = t.EDITOR_BACKGROUND_CLASS_NAME, l.startStyle.top === i.INTERN && (a += " " + t.SELECTION_TOP_RIGHT), l.startStyle.bottom === i.INTERN && (a += " " + t.SELECTION_BOTTOM_RIGHT), h++, this.createSelectionPiece(a, l.top, l.left - t.ROUNDED_PIECE_WIDTH, t.ROUNDED_PIECE_WIDTH, c, n, o, r, s)), (l.endStyle.top === i.INTERN || l.endStyle.bottom === i.INTERN) && (h++, this.createSelectionPiece(t.SELECTION_CLASS_NAME, l.top, l.left + l.width, t.ROUNDED_PIECE_WIDTH, c, n, o, r, s), a = t.EDITOR_BACKGROUND_CLASS_NAME, l.endStyle.top === i.INTERN && (a += " " + t.SELECTION_TOP_LEFT), l.endStyle.bottom === i.INTERN && (a += " " + t.SELECTION_BOTTOM_LEFT), h++, this.createSelectionPiece(a, l.top, l.left + l.width, t.ROUNDED_PIECE_WIDTH, c, n, o, r, s))), a = t.SELECTION_CLASS_NAME, d && (l.startStyle.top === i.EXTERN && (a += " " + t.SELECTION_TOP_LEFT), l.startStyle.bottom === i.EXTERN && (a += " " + t.SELECTION_BOTTOM_LEFT), l.endStyle.top === i.EXTERN && (a += " " + t.SELECTION_TOP_RIGHT), l.endStyle.bottom === i.EXTERN && (a += " " + t.SELECTION_BOTTOM_RIGHT)), h++, this.createSelectionPiece(a, l.top, l.left, l.width, c, n, o, r, s);
            return h
        }, t.prototype.actualRender = function (e) {
            var t, n, i, o = [], r = [], s = [], a = 0;
            for (o.push('<div class="selections-layer" style="left:'), o.push(this.contentLeft.toString()), o.push("px;width:"), o.push(e.scrollWidth.toString()), o.push("px;height:"), o.push(e.scrollHeight.toString()), o.push('px;">'), i = 0; i < this.selections.length; i++)t = this.selections[i], t.isEmpty() || (n = this.getVisibleRangesWithStyle(t, e), a += this.actualRenderOneSelection(n, e.viewportLeft, o, r, s));
            return o.push("</div>"), {html: o, lefts: r, leftsIndices: s, piecesCount: a}
        }, t.prototype.shouldCallRender = function () {
            return this.shouldRender || this.horizontalScrollChanged
        }, t.prototype.render = function (e, t) {
            if (this.shouldRender)this.previousRender = this.actualRender(e), this.shouldRender = !1, this.horizontalScrollChanged = !1; else if (this.horizontalScrollChanged) {
                var n, i, o = this.previousRender.html, r = this.previousRender.lefts, s = this.previousRender.leftsIndices;
                for (n = 0, i = r.length; i > n; n++)o[s[n]] = (r[n] - e.viewportLeft).toString();
                this.horizontalScrollChanged = !1
            }
            return t && (t.renderedSelectionPieces += this.previousRender.piecesCount), this.previousRender.html
        }, t.SELECTION_CLASS_NAME = "selected-text", t.SELECTION_TOP_LEFT = "top-left-radius", t.SELECTION_BOTTOM_LEFT = "bottom-left-radius", t.SELECTION_TOP_RIGHT = "top-right-radius", t.SELECTION_BOTTOM_RIGHT = "bottom-right-radius", t.EDITOR_BACKGROUND_CLASS_NAME = "monaco-editor-background", t.ROUNDED_PIECE_WIDTH = 10, t
    }(o.ViewEventHandler);
    t.SelectionsOverlay = r
}), define("vs/css!vs/editor/core/view/decorations/decorations", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/decorations/decorations", ["require", "exports", "vs/editor/core/view/viewEventHandler", "vs/css!./decorations"], function (e, t, n) {
    "use strict";
    var i = n, o = function (e) {
        function t(t) {
            e.call(this), this.context = t, this.contentLeft = 0, this.previousRender = null, this.horizontalScrollChanged = !1, this.context.addEventHandler(this)
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this.context.removeEventHandler(this), this.context = null, this.previousRender = null
        }, t.prototype.onModelFlushed = function () {
            return!0
        }, t.prototype.onModelDecorationsChanged = function () {
            return!0
        }, t.prototype.onModelLinesDeleted = function () {
            return!0
        }, t.prototype.onModelLineChanged = function () {
            return!0
        }, t.prototype.onModelLinesInserted = function () {
            return!0
        }, t.prototype.onCursorPositionChanged = function () {
            return!1
        }, t.prototype.onCursorSelectionChanged = function () {
            return!1
        }, t.prototype.onCursorRevealRange = function () {
            return!1
        }, t.prototype.onConfigurationChanged = function () {
            return!0
        }, t.prototype.onConfigurationFontChanged = function () {
            return!0
        }, t.prototype.onConfigurationLineHeightChanged = function () {
            return!0
        }, t.prototype.onLayoutChanged = function (e) {
            return this.contentLeft = e.contentLeft, !0
        }, t.prototype.onScrollChanged = function (e) {
            return e.horizontal && (this.horizontalScrollChanged = !0), e.vertical
        }, t.prototype.onZonesChanged = function () {
            return!0
        }, t.prototype.onScrollWidthChanged = function () {
            return!0
        }, t.prototype.onScrollHeightChanged = function () {
            return!1
        }, t.prototype.actualRender = function (e) {
            var t, n, i, o, r, s, a, u, l = [], d = [], c = [], h = this.context.model.getDecorationsInRange(e.visibleRange), p = this.context.configuration.editor.lineHeight.toString(), f = 0;
            for (l.push('<div class="decorations-layer" style="left:'), l.push(this.contentLeft.toString()), l.push("px;width:"), l.push(e.scrollWidth.toString()), l.push("px;height:"), l.push(e.scrollHeight.toString()), l.push('px;">'), s = 0, a = h.length; a > s; s++)if (t = h[s], n = t.range, t.options.className)if (t.options.isWholeLine)for (u = n.startLineNumber; u <= n.endLineNumber; u++)e.lineIsVisible(u) && (o = e.heightInPxForLine(u), r = e.getViewportVerticalOffsetForLineNumber(u), f++, l.push('<div class="'), l.push(t.options.className), l.push('" style="top:'), l.push(r.toString()), l.push("px;left:0;width:100%;height:"), l.push(o.toString()), l.push('px;"></div>')); else if (i = e.visibleRangesForRange(n, !1))for (; i.next();)f++, l.push('<div class="'), l.push(t.options.className), l.push('" style="top:'), l.push(i.getTop().toString()), l.push("px;left:"), d.push(i.getLeft()), c.push(l.length), l.push((i.getLeft() - e.viewportLeft).toString()), l.push("px;width:"), l.push(i.getWidth().toString()), l.push("px;height:"), l.push(p.toString()), l.push('px;"></div>');
            return l.push("</div>"), {html: l, lefts: d, leftsIndices: c, piecesCount: f}
        }, t.prototype.shouldCallRender = function () {
            return this.shouldRender || this.horizontalScrollChanged
        }, t.prototype.render = function (e, t) {
            if (this.shouldRender)this.previousRender = this.actualRender(e), this.shouldRender = !1, this.horizontalScrollChanged = !1; else if (this.horizontalScrollChanged) {
                var n, i, o = this.previousRender.html, r = this.previousRender.lefts, s = this.previousRender.leftsIndices;
                for (n = 0, i = r.length; i > n; n++)o[s[n]] = (r[n] - e.viewportLeft).toString();
                this.horizontalScrollChanged = !1
            }
            return t && (t.renderedDecorationsPieces += this.previousRender.piecesCount), this.previousRender.html
        }, t
    }(i.ViewEventHandler);
    t.DecorationsOverlay = o
}), define("vs/css!vs/editor/core/view/glyphMargin/glyphMargin", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/glyphMargin/glyphMargin", ["require", "exports", "vs/editor/core/view/viewContext", "vs/editor/core/view/viewEventHandler", "vs/css!./glyphMargin"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function (e) {
        function t(t) {
            e.call(this), this.context = t, this.glyphMarginLeft = 0, this.glyphMarginWidth = 0, this.previousRender = null, this.context.addEventHandler(this)
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this.context.removeEventHandler(this), this.context = null, this.previousRender = null
        }, t.prototype.onModelFlushed = function () {
            return!0
        }, t.prototype.onModelDecorationsChanged = function () {
            return!0
        }, t.prototype.onModelLinesDeleted = function () {
            return!0
        }, t.prototype.onModelLineChanged = function () {
            return!0
        }, t.prototype.onModelLinesInserted = function () {
            return!0
        }, t.prototype.onCursorPositionChanged = function () {
            return!1
        }, t.prototype.onCursorSelectionChanged = function () {
            return!1
        }, t.prototype.onCursorRevealRange = function () {
            return!1
        }, t.prototype.onConfigurationChanged = function () {
            return!0
        }, t.prototype.onConfigurationFontChanged = function () {
            return!0
        }, t.prototype.onConfigurationLineHeightChanged = function () {
            return!0
        }, t.prototype.onLayoutChanged = function (e) {
            return this.glyphMarginLeft = e.glyphMarginLeft, this.glyphMarginWidth = e.glyphMarginWidth, !0
        }, t.prototype.onScrollChanged = function (e) {
            return e.vertical
        }, t.prototype.onZonesChanged = function () {
            return!0
        }, t.prototype.onScrollWidthChanged = function () {
            return!1
        }, t.prototype.onScrollHeightChanged = function () {
            return!1
        }, t.prototype.actualRender = function (e) {
            var t = [], n = 0;
            if (!this.context.configuration.editor.glyphMargin)return{html: t, count: n};
            var i, r, s, a, u, l, d, c, h, p = this.context.model.getDecorationsInRange(e.visibleRange), f = this.context.configuration.editor.lineHeight.toString(), g = {};
            for (a = 0, u = p.length; u > a; a++)if (i = p[a], i.options.glyphMarginClassName)if (r = i.range, i.options.isWholeLine)for (h = r.startLineNumber; h <= r.endLineNumber; h++)e.lineIsVisible(h) && (l = e.getViewportVerticalOffsetForLineNumber(h), g.hasOwnProperty(l.toString()) || (g[l.toString()] = {}), g[l.toString()][i.options.glyphMarginClassName] = !0); else if (s = e.visibleRangesForRange(r, !1))for (; s.next();)l = s.getTop(), g.hasOwnProperty(l.toString()) || (g[l.toString()] = {}), g[l.toString()][i.options.glyphMarginClassName] = !0;
            t.push('<div class="'), t.push(o.ClassNames.GLYPH_MARGIN), t.push('" style="left:'), t.push(this.glyphMarginLeft.toString()), t.push("px;width:"), t.push(this.glyphMarginWidth.toString()), t.push("px;height:"), t.push(e.scrollHeight.toString()), t.push('px;">');
            for (d in g) {
                t.push('<div class="');
                for (c in g[d])n++, t.push(" "), t.push(c);
                t.push('" style="top:'), t.push(d), t.push("px;height:"), t.push(f), t.push('px;"></div>')
            }
            return t.push("</div>"), {html: t, count: n}
        }, t.prototype.shouldCallRender = function () {
            return this.shouldRender
        }, t.prototype.render = function (e, t) {
            return this.shouldRender && (this.previousRender = this.actualRender(e), this.shouldRender = !1), t && (t.renderedMarginGlyphs += this.previousRender.count), this.previousRender.html
        }, t
    }(r.ViewEventHandler);
    t.GlyphMarginOverlay = s
}), define("vs/css!vs/editor/core/view/linesDecorations/linesDecorations", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/linesDecorations/linesDecorations", ["require", "exports", "vs/editor/core/view/viewContext", "vs/editor/core/view/viewEventHandler", "vs/css!./linesDecorations"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function (e) {
        function t(t) {
            e.call(this), this.context = t, this.decorationsLeft = 0, this.decorationsWidth = 0, this.previousRender = null, this.context.addEventHandler(this)
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this.context.removeEventHandler(this), this.context = null, this.previousRender = null
        }, t.prototype.onModelFlushed = function () {
            return!0
        }, t.prototype.onModelDecorationsChanged = function () {
            return!0
        }, t.prototype.onModelLinesDeleted = function () {
            return!0
        }, t.prototype.onModelLineChanged = function () {
            return!0
        }, t.prototype.onModelLinesInserted = function () {
            return!0
        }, t.prototype.onCursorPositionChanged = function () {
            return!1
        }, t.prototype.onCursorSelectionChanged = function () {
            return!1
        }, t.prototype.onCursorRevealRange = function () {
            return!1
        }, t.prototype.onConfigurationChanged = function () {
            return!0
        }, t.prototype.onConfigurationFontChanged = function () {
            return!0
        }, t.prototype.onConfigurationLineHeightChanged = function () {
            return!0
        }, t.prototype.onLayoutChanged = function (e) {
            return this.decorationsLeft = e.decorationsLeft, this.decorationsWidth = e.decorationsWidth, !0
        }, t.prototype.onScrollChanged = function (e) {
            return e.vertical
        }, t.prototype.onZonesChanged = function () {
            return!0
        }, t.prototype.onScrollWidthChanged = function () {
            return!1
        }, t.prototype.onScrollHeightChanged = function () {
            return!1
        }, t.prototype.actualRender = function (e) {
            var t, n, i, r, s, a, u, l, d, c = [], h = 0, p = this.context.model.getDecorationsInRange(e.visibleRange), f = this.context.configuration.editor.lineHeight.toString(), g = {};
            for (r = 0, s = p.length; s > r; r++)if (t = p[r], t.options.linesDecorationsClassName)if (n = t.range, t.options.isWholeLine)for (d = n.startLineNumber; d <= n.endLineNumber; d++)e.lineIsVisible(d) && (a = e.getViewportVerticalOffsetForLineNumber(d), g.hasOwnProperty(a.toString()) || (g[a.toString()] = {}), g[a.toString()][t.options.linesDecorationsClassName] = !0); else if (i = e.visibleRangesForRange(n, !1))for (; i.next();)a = i.getTop(), g.hasOwnProperty(a.toString()) || (g[a.toString()] = {}), g[a.toString()][t.options.linesDecorationsClassName] = !0;
            c.push('<div class="'), c.push(o.ClassNames.LINES_DECORATIONS), c.push('" style="left:'), c.push(this.decorationsLeft.toString()), c.push("px;width:"), c.push(this.decorationsWidth.toString()), c.push("px;height:"), c.push(e.scrollHeight.toString()), c.push('px;">');
            for (u in g) {
                c.push('<div class="');
                for (l in g[u])h++, c.push(" "), c.push(l);
                c.push('" style="top:'), c.push(u), c.push("px;height:"), c.push(f), c.push('px;"></div>')
            }
            return c.push("</div>"), {html: c, renderedCount: h}
        }, t.prototype.shouldCallRender = function () {
            return this.shouldRender
        }, t.prototype.render = function (e, t) {
            return this.shouldRender && (this.previousRender = this.actualRender(e), this.shouldRender = !1), t && (t.renderedLinesDecorations += this.previousRender.renderedCount), this.previousRender.html
        }, t
    }(r.ViewEventHandler);
    t.LinesDecorationsOverlay = s
}), define("vs/css!vs/editor/core/view/lineNumbers/lineNumbers", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/lineNumbers/lineNumbers", ["require", "exports", "vs/editor/core/view/viewContext", "vs/editor/core/view/viewEventHandler", "vs/css!./lineNumbers"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function (e) {
        function t(t) {
            e.call(this), this.context = t, this.lineNumbersLeft = 0, this.lineNumbersWidth = 0, this.previousRender = [], this.context.addEventHandler(this)
        }

        return __extends(t, e), t.prototype.dispose = function () {
            this.context.removeEventHandler(this), this.context = null, this.previousRender = null
        }, t.prototype.onModelFlushed = function () {
            return!0
        }, t.prototype.onModelDecorationsChanged = function () {
            return!1
        }, t.prototype.onModelLinesDeleted = function () {
            return!0
        }, t.prototype.onModelLineChanged = function () {
            return!0
        }, t.prototype.onModelLinesInserted = function () {
            return!0
        }, t.prototype.onCursorPositionChanged = function () {
            return!1
        }, t.prototype.onCursorSelectionChanged = function () {
            return!1
        }, t.prototype.onCursorRevealRange = function () {
            return!1
        }, t.prototype.onConfigurationChanged = function () {
            return!0
        }, t.prototype.onConfigurationFontChanged = function () {
            return!0
        }, t.prototype.onConfigurationLineHeightChanged = function () {
            return!0
        }, t.prototype.onLayoutChanged = function (e) {
            return this.lineNumbersLeft = e.lineNumbersLeft, this.lineNumbersWidth = e.lineNumbersWidth, !0
        }, t.prototype.onScrollChanged = function (e) {
            return e.vertical
        }, t.prototype.onZonesChanged = function () {
            return!0
        }, t.prototype.onScrollWidthChanged = function () {
            return!1
        }, t.prototype.onScrollHeightChanged = function () {
            return!1
        }, t.prototype.actualRender = function (e) {
            var t = [];
            if (!this.context.configuration.editor.lineNumbers)return t;
            var n, i;
            for (t.push('<div class="'), t.push(o.ClassNames.LINE_NUMBERS), t.push('" style="left:'), t.push(this.lineNumbersLeft.toString()), t.push("px;width:"), t.push(this.lineNumbersWidth.toString()), t.push("px;height:"), t.push(e.scrollHeight.toString()), t.push('px;">'), i = e.visibleRange.startLineNumber; i <= e.visibleRange.endLineNumber; i++)n = e.getViewportVerticalOffsetForLineNumber(i), t.push('<div style="top:'), t.push(n.toString()), t.push('px;">'), t.push(this.context.model.getLineRenderLineNumber(i)), t.push("</div>");
            return t.push("</div>"), t
        }, t.prototype.shouldCallRender = function () {
            return this.shouldRender
        }, t.prototype.render = function (e) {
            return this.shouldRender && (this.previousRender = this.actualRender(e), this.shouldRender = !1), this.previousRender
        }, t
    }(r.ViewEventHandler);
    t.LineNumbersOverlay = s
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/view/view", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/dom/dom", "vs/base/eventEmitter", "vs/editor/core/constants", "vs/editor/core/view/viewContext", "vs/editor/core/controller/keyboardHandler", "vs/editor/core/controller/pointerHandler", "vs/editor/core/view/zones/zones", "vs/editor/core/view/lines/viewLines", "vs/editor/core/view/overviewRuler/overviewRuler", "vs/editor/core/view/overviewRuler/decorationsOverviewRuler", "vs/editor/core/view/viewCursors/viewCursors", "vs/editor/core/view/contentWidgets/contentWidgets", "vs/editor/core/view/overlayWidgets/overlayWidgets", "vs/editor/core/view/layout/layoutProvider", "vs/editor/core/view/viewEventHandler", "vs/editor/core/view/viewEventDispatcher", "vs/editor/core/range", "vs/base/env", "vs/base/errors", "vs/editor/core/view/viewController", "vs/editor/core/view/viewOverlays", "vs/editor/core/view/selections/selections", "vs/editor/core/view/decorations/decorations", "vs/editor/core/view/glyphMargin/glyphMargin", "vs/editor/core/view/linesDecorations/linesDecorations", "vs/editor/core/view/lineNumbers/lineNumbers", "vs/base/lifecycle"], function (e, t, n, i, o, r, s, a, u, l, d, c, h, p, f, g, m, v, y, b, C, E, w, _, S, T, L, N, x, M) {
    "use strict";
    var I = n, R = i, D = o, P = r, O = s, k = a, A = u, H = l, W = d, V = c, F = h, U = p, B = f, z = g, q = m, j = v, G = y, K = b, Z = C, X = E, Y = w, $ = _, J = S, Q = T, et = L, tt = N, nt = x, it = M, ot = function (e) {
        function t(t, n, i, o) {
            var r = this;
            e.call(this), this.outgoingEventBus = new D.EventEmitter;
            var s = new Y.ViewController(o, i, this.outgoingEventBus);
            this.listenersToRemove = [], this.listenersToDispose = [], this.eventDispatcher = new G.ViewEventDispatcher(function (e) {
                return r._renderOnce(e)
            }), this.linesContent = document.createElement("div"), this.linesContent.className = "lines-content", this.domNode = document.createElement("div"), this.domNode.className = i.getEditorClassName(), this.layoutProvider = new q.LayoutProvider(n, i, o, this.eventDispatcher, this.linesContent, this.domNode), this.eventDispatcher.addEventHandler(this.layoutProvider), this.context = new O.ViewContext(t, i, o, this.eventDispatcher, function (e) {
                return r.eventDispatcher.addEventHandler(e)
            }, function (e) {
                return r.eventDispatcher.removeEventHandler(e)
            }), this.createTextArea(), this.createViewParts(), this.keyboardHandler = new k.KeyboardHandler(this.context, s, this.createKeyboardHandlerHelper()), this.pointerHandler = new A.PointerHandler(this.context, s, this.createPointerHandlerHelper()), this.hasFocus = !1, this.renderOnceCount = 0, this.isRendering = !1, this.codeEditorHelper = null, this.eventDispatcher.addEventHandler(this), this.listenersToRemove.push(o.addBulkListener(function (e) {
                return r.eventDispatcher.emitMany(e)
            }))
        }

        return __extends(t, e), t.prototype.createTextArea = function () {
            var e = this;
            this.textArea = document.createElement("textarea"), this.textArea.className = O.ClassNames.TEXTAREA, this.textArea.setAttribute("wrap", "off"), this.textArea.setAttribute("autocorrect", "off"), this.textArea.setAttribute("autocapitalize", "off"), this.textArea.setAttribute("spellcheck", "false"), this.textArea.setAttribute("aria-label", I.localize("vs_editor_core_view_view", 0)), this.textArea.style.top = "0px", this.textArea.style.left = "0px", this.textArea.style.fontSize = this.context.configuration.editor.fontSize + "px", this.textArea.style.lineHeight = this.context.configuration.editor.lineHeight + "px", this.accessiblilityOutput = document.createElement("div"), this.accessiblilityOutput.className = "accessibility-output", this.accessiblilityOutput.setAttribute("aria-live", "assertive"), this.accessiblilityOutput.setAttribute("aria-label", I.localize("vs_editor_core_view_view", 1)), this.accessiblilityOutput.setAttribute("role", "alert"), this.listenersToDispose.push(R.addDisposableListener(this.textArea, "focus", function () {
                return e._setHasFocus(!0)
            })), this.listenersToDispose.push(R.addDisposableListener(this.textArea, "blur", function () {
                return e._setHasFocus(!1)
            })), this.textAreaCover = document.createElement("div"), this.textAreaCover.className = this.context.configuration.editor.glyphMargin ? O.ClassNames.GLYPH_MARGIN + " " + O.ClassNames.TEXTAREA_COVER : this.context.configuration.editor.lineNumbers ? O.ClassNames.LINE_NUMBERS + " " + O.ClassNames.TEXTAREA_COVER : "monaco-editor-background " + O.ClassNames.TEXTAREA_COVER, this.textAreaCover.style.position = "absolute", this.textAreaCover.style.width = "4px", this.textAreaCover.style.height = "4px", this.textAreaCover.style.top = "0px", this.textAreaCover.style.left = "0px"
        }, t.prototype.createViewParts = function () {
            var e = this;
            this.viewParts = [], this.viewLines = new W.ViewLines(this.context, this.layoutProvider), this.viewZones = new H.ViewZones(this.context, this.layoutProvider), this.viewParts.push(this.viewZones);
            var t = new F.DecorationsOverviewRuler(this.context, this.layoutProvider.getScrollHeight(), function (t) {
                return e.layoutProvider.getVerticalOffsetForLineNumber(t)
            });
            this.viewParts.push(t);
            var n = new $.ViewOverlays(this.context);
            if (this.viewParts.push(n), n.addDynamicOverlay(new et.GlyphMarginOverlay(this.context)), n.addDynamicOverlay(new tt.LinesDecorationsOverlay(this.context)), n.addDynamicOverlay(new nt.LineNumbersOverlay(this.context)), n.addDynamicOverlay(new J.SelectionsOverlay(this.context)), n.addDynamicOverlay(new Q.DecorationsOverlay(this.context)), n.addOverlay(new U.ViewCursors(this.context)), this.contentWidgets = new B.ViewContentWidgets(this.context), this.viewParts.push(this.contentWidgets), this.overlayWidgets = new z.ViewOverlayWidgets(this.context), this.viewParts.push(this.overlayWidgets), this.linesContentContainer = this.layoutProvider.getScrollbarContainerDomNode(), this.linesContentContainer.style.position = "absolute", t) {
                var i = this.layoutProvider.getOverviewRulerInsertData();
                i.parent.insertBefore(t.getDomNode(), i.insertBefore)
            }
            this.linesContent.appendChild(this.viewZones.domNode), this.linesContent.appendChild(this.viewLines.domNode), this.linesContent.appendChild(this.contentWidgets.domNode), this.domNode.appendChild(n.domNode), this.domNode.appendChild(this.linesContentContainer), this.domNode.appendChild(this.overlayWidgets.domNode), this.domNode.appendChild(this.textArea), this.domNode.appendChild(this.accessiblilityOutput), this.domNode.appendChild(this.textAreaCover)
        }, t.prototype.createPointerHandlerHelper = function () {
            var e = this;
            return{viewDomNode: this.domNode, linesContentDomNode: this.linesContent, focusTextArea: function () {
                e.focus()
            }, getScrollTop: function () {
                return e.layoutProvider.getScrollTop()
            }, setScrollTop: function (t) {
                return e.layoutProvider.setScrollTop(t)
            }, getScrollLeft: function () {
                return e.layoutProvider.getScrollLeft()
            }, setScrollLeft: function (t) {
                return e.layoutProvider.setScrollLeft(t)
            }, getLineNumberAtVerticalOffset: function (t) {
                return e.layoutProvider.getLineNumberAtVerticalOffset(t)
            }, getWhitespaceAtVerticalOffset: function (t) {
                return e.layoutProvider.getWhitespaceAtVerticalOffset(t)
            }, getPositionFromDOMInfo: function (t, n) {
                return e.viewLines.getPositionFromDOMInfo(t, n)
            }, visibleRangeForPosition2: function (t, n) {
                var i = e.viewLines.visibleRangesForRange2(new K.Range(t, n, t, n), 0, 0, !1);
                if (!i)return null;
                i.next();
                var o = {top: i.getTop(), left: i.getLeft(), width: i.getWidth(), height: i.getHeight()};
                return o
            }, getLineWidth: function (t) {
                return e.viewLines.getLineWidth(t)
            }}
        }, t.prototype.createKeyboardHandlerHelper = function () {
            var e = this;
            return{viewDomNode: this.domNode, textArea: this.textArea, accessiblilityOutput: this.accessiblilityOutput, visibleRangeForPositionRelativeToEditor: function (t, n) {
                var i = e.layoutProvider.getLinesViewportData(), o = e.viewLines.visibleRangesForRange2(new K.Range(t, n, t, n), i.visibleRangesDeltaTop, 0, !1);
                if (!o)return null;
                o.next();
                var r = {top: o.getTop(), left: o.getLeft(), width: o.getWidth(), height: o.getHeight()};
                return r
            }}
        }, t.prototype.onLayoutChanged = function (e) {
            return this.domNode.style.width = e.width + "px", this.domNode.style.height = e.height + "px", this.linesContent.style.width = e.contentWidth + "px", this.linesContent.style.height = e.contentHeight + "px", this.linesContentContainer.style.left = e.contentLeft + "px", this.linesContentContainer.style.width = e.contentWidth + "px", this.linesContentContainer.style.height = e.contentHeight + "px", this.outgoingEventBus.emit(P.EventType.ViewLayoutChanged, e), !1
        }, t.prototype.onConfigurationChanged = function () {
            return this.domNode.className = this.context.configuration.getEditorClassName(), this.textArea.style.fontSize = this.context.configuration.editor.fontSize + "px", this.textArea.style.lineHeight = this.context.configuration.editor.lineHeight + "px", !1
        }, t.prototype.onScrollChanged = function () {
            return this.outgoingEventBus.emit("scroll", {scrollTop: this.layoutProvider.getScrollTop(), scrollLeft: this.layoutProvider.getScrollLeft()}), !1
        }, t.prototype.onViewFocusChanged = function (e) {
            return R.toggleClass(this.domNode, "focused", e), e ? this.outgoingEventBus.emit(P.EventType.ViewFocusGained, {}) : this.outgoingEventBus.emit(P.EventType.ViewFocusLost, {}), !1
        }, t.prototype.dispose = function () {
            this.eventDispatcher.removeEventHandler(this), this.outgoingEventBus.dispose(), this.listenersToRemove.forEach(function (e) {
                e()
            }), this.listenersToRemove = [], this.listenersToDispose = it.disposeAll(this.listenersToDispose), this.keyboardHandler.dispose(), this.pointerHandler.dispose(), this.viewLines.dispose();
            for (var e = 0, t = this.viewParts.length; t > e; e++)this.viewParts[e].dispose();
            this.viewParts = [], this.layoutProvider.dispose()
        }, t.prototype.injectTelemetryService = function (e) {
            this.telemetryService = e
        }, t.prototype.getCodeEditorHelper = function () {
            var e = this;
            return this.codeEditorHelper || (this.codeEditorHelper = {getScrollTop: function () {
                return e.layoutProvider.getScrollTop()
            }, setScrollTop: function (t) {
                return e.layoutProvider.setScrollTop(t)
            }, getScrollLeft: function () {
                return e.layoutProvider.getScrollLeft()
            }, setScrollLeft: function (t) {
                return e.layoutProvider.setScrollLeft(t)
            }, getLayoutInfo: function () {
                return e.layoutProvider.getLayoutInfo()
            }, getVerticalOffsetForLineNumber: function (t) {
                return e.layoutProvider.getVerticalOffsetForLineNumber(t)
            }, delegateVerticalScrollbarMouseDown: function (t) {
                return e.layoutProvider.delegateVerticalScrollbarMouseDown(t)
            }, getOffsetForColumn: function (t, n) {
                var i = e.viewLines.visibleRangesForRange2(new K.Range(t, n, t, n), 0, 0, !1);
                return i ? (i.next(), i.getLeft()) : -1
            }}), this.codeEditorHelper
        }, t.prototype.layout = function () {
            var e = this;
            this._renderOnce(function () {
                e.layoutProvider.layout()
            })
        }, t.prototype.getInternalEventBus = function () {
            return this.outgoingEventBus
        }, t.prototype.saveState = function () {
            return this.layoutProvider.saveState()
        }, t.prototype.restoreState = function (e) {
            return this.layoutProvider.restoreState(e)
        }, t.prototype.focus = function () {
            this.textArea.focus(), R.selectTextInInputElement(this.textArea), this._setHasFocus(!0)
        }, t.prototype.createOverviewRuler = function (e, t, n) {
            var i = this;
            return new V.OverviewRuler(this.context, e, this.layoutProvider.getScrollHeight(), t, n, function (e) {
                return i.layoutProvider.getVerticalOffsetForLineNumber(e)
            })
        }, t.prototype.change = function (e) {
            var t = this;
            this._renderOnce(function () {
                var n = !1, i = {addZone: function (e) {
                    return n = !0, t.viewZones.addZone(e)
                }, removeZone: function (e) {
                    n = t.viewZones.removeZone(e) || n
                }}, o = e(i);
                return i.addZone = null, i.removeZone = null, n && t.context.privateViewEventBus.emit(P.EventType.ViewZonesChanged, null), o
            })
        }, t.prototype.addContentWidget = function (e) {
            var t = this;
            this._renderOnce(function () {
                t.contentWidgets.addWidget(e.widget), t.layoutContentWidget(e)
            })
        }, t.prototype.layoutContentWidget = function (e) {
            var t = this;
            this._renderOnce(function () {
                var n = e.position ? e.position.position : null, i = e.position ? e.position.preference : null;
                t.contentWidgets.setWidgetPosition(e.widget, n, i)
            })
        }, t.prototype.removeContentWidget = function (e) {
            this.contentWidgets.removeWidget(e.widget)
        }, t.prototype.addOverlayWidget = function (e) {
            this.overlayWidgets.addWidget(e.widget), this.layoutOverlayWidget(e)
        }, t.prototype.layoutOverlayWidget = function (e) {
            var t = e.position ? e.position.preference : null;
            this.overlayWidgets.setWidgetPosition(e.widget, t)
        }, t.prototype.removeOverlayWidget = function (e) {
            this.overlayWidgets.removeWidget(e.widget)
        }, t.prototype.render = function () {
            this.layoutProvider.emitLayoutChangedEvent()
        }, t.prototype.renderOnce = function (e) {
            return this._renderOnce(e)
        }, t.prototype._renderOnce = function (e) {
            var t = this;
            return this.outgoingEventBus.deferredEmit(function () {
                t.renderOnceCount++;
                try {
                    var n = e ? e() : null
                } finally {
                    t.renderOnceCount--
                }
                if (0 === t.renderOnceCount && !t.isRendering)try {
                    t.isRendering = !0, t.actualRender()
                } finally {
                    t.isRendering = !1
                }
                return n
            })
        }, t.prototype.createRenderingContext = function (e) {
            var t = this, n = 0, i = this.layoutProvider.getCurrentViewport(), o = {scrollWidth: this.layoutProvider.getScrollWidth(), scrollHeight: this.layoutProvider.getScrollHeight(), visibleRange: e.visibleRange, viewportWidth: i.width, viewportHeight: i.height, viewportLeft: i.left, getScrolledTopFromAbsoluteTop: function (e) {
                return t.layoutProvider.getScrolledTopFromAbsoluteTop(e)
            }, getViewportVerticalOffsetForLineNumber: function (e) {
                var n = t.layoutProvider.getVerticalOffsetForLineNumber(e), i = t.layoutProvider.getScrolledTopFromAbsoluteTop(n);
                return i
            }, heightInPxForLine: function (e) {
                return t.layoutProvider.heightInPxForLine(e)
            }, visibleRangesForRange: function (i, o) {
                return t.viewLines.visibleRangesForRange2(i, e.visibleRangesDeltaTop, n, o)
            }, visibleRangeForPosition: function (i) {
                var o = t.viewLines.visibleRangesForRange2(new K.Range(i.lineNumber, i.column, i.lineNumber, i.column), e.visibleRangesDeltaTop, n, !1);
                if (!o)return null;
                o.next();
                var r = {top: o.getTop(), left: o.getLeft(), width: o.getWidth(), height: o.getHeight()};
                return r
            }, visibleRangeForPosition2: function (i, o) {
                var r = t.viewLines.visibleRangesForRange2(new K.Range(i, o, i, o), e.visibleRangesDeltaTop, n, !1);
                if (!r)return null;
                r.next();
                var s = {top: r.getTop(), left: r.getLeft(), width: r.getWidth(), height: r.getHeight()};
                return s
            }, lineIsVisible: function (t) {
                return e.visibleRange.startLineNumber <= t && t <= e.visibleRange.endLineNumber
            }};
            return o
        }, t.prototype.actualRender = function () {
            if (R.isInDOM(this.domNode)) {
                var e, t, n = !1;
                Z.enableTelemetry && (n = !0);
                var i = null, o = (new Date).getTime();
                try {
                    if (n) {
                        var r = this.layoutProvider.getLayoutInfo();
                        i = {lines: {editorWidth: r.width, editorHeight: r.height, totalVisibleLinesCount: 0, totalVisiblePartsCount: 0, totalVisibleCharactersCount: 0, renderedVisibleLinesCount: 0, renderedVisiblePartsCount: 0, renderedVisibleCharactersCount: 0, time: 0}, parts: {renderedContentWidgets: 0, renderedOverlayWidgets: 0, renderedDecorationsPieces: 0, renderedMarginGlyphs: 0, renderedLinesDecorations: 0, renderedSelectionPieces: 0, renderedViewZones: 0, time: 0}, time: 0}
                    }
                    var s = (new Date).getTime(), a = this.viewLines.render(n ? i.lines : null);
                    n && (i.lines.time = (new Date).getTime() - s);
                    var u = [], l = this.createRenderingContext(a), d = (new Date).getTime();
                    for (e = 0, t = this.viewParts.length; t > e; e++)u[e] = this.viewParts[e].prepareRender(l, n ? i.parts : null);
                    for (e = 0, t = this.viewParts.length; t > e; e++)this.viewParts[e].render(u[e], l);
                    n && (i.parts.time = (new Date).getTime() - d, i.time = (new Date).getTime() - o, i.time >= 100 && this.telemetryService && this.telemetryService.publicLog("editorSlowRender", i))
                } catch (c) {
                    X.onUnexpectedError(c)
                }
            }
        }, t.prototype._setHasFocus = function (e) {
            this.hasFocus !== e && (this.hasFocus = e, this.context.privateViewEventBus.emit(P.EventType.ViewFocusChanged, this.hasFocus))
        }, t
    }(j.ViewEventHandler);
    t.View = ot
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/codeEditorWidget", ["require", "exports", "vs/base/lib/winjs.base", "vs/editor/core/constants", "vs/base/objects", "vs/base/types", "vs/platform/platform", "vs/base/dom/dom", "vs/base/eventEmitter", "vs/editor/core/configuration", "vs/editor/core/controller/cursor", "vs/editor/core/view/view", "vs/editor/core/view/model/characterHardWrappingLineMapper", "vs/editor/core/view/model/splitLinesCollection", "vs/editor/core/view/model/viewModel", "vs/editor/core/position", "vs/editor/core/range", "vs/editor/core/selection", "vs/base/performance/timer", "vs/editor/editorExtensions", "vs/base/ui/actions", "vs/editor/editor", "vs/css!./../css/editor", "vs/css!./../css/default-theme"], function (e, t, n, i, o, r, s, a, u, l, d, c, h, p, f, g, m, v, y, b, C, E) {
    "use strict";
    var w = n, _ = i, S = o, T = r, L = s, N = a, x = u, M = l, I = d, R = c, D = h, P = p, O = f, k = g, A = m, H = v, W = y, V = b, F = C, U = E, B = 0, z = function (e) {
        function t(t, n, i) {
            var o = this;
            e.call(this);
            var r = W.start(W.Topic.EDITOR, "CodeEditor.ctor");
            this.id = ++B, this.domElement = t, this.lifetimeListeners = [], n = n || {};
            var s = null;
            n.model && (s = n.model, delete n.model), this.configuration = new M.Configuration(n), this.focusTracker = N.trackFocus(this.domElement), this.focusTracker.addFocusListener(function () {
                o.emit("widgetFocus", {})
            }), this.focusTracker.addBlurListener(function () {
                o.emit("widgetBlur", {})
            }), this.handlerService = null, this.injectorService = i, i && T.isFunction(i.injectTo) && i.injectTo(this), this.handlerService ? (this.bindings = this.configuration.bindKeys(this.handlerService), this.bindings.deactivate(), this.lifetimeListeners.push(this.addListener("blur", function () {
                return o.bindings.deactivate()
            })), this.lifetimeListeners.push(this.addListener("focus", function () {
                return o.bindings.activate()
            }))) : this.bindings = null, this._attachModel(s), this.contentWidgets = {}, this.overlayWidgets = {}, this.contributions = {};
            for (var a = L.Registry.as(V.Extensions.EditorContributions), u = a.getEditorContributions(), l = 0, d = u.length; d > l; l++) {
                var c = u[l], h = c.createNew(this, c);
                i && T.isFunction(i.injectTo) && i.injectTo(h), this.contributions[h.getId()] = h
            }
            r.stop()
        }

        return __extends(t, e), t.prototype.getEditorType = function () {
            return _.EditorType.ICodeEditor
        }, t.prototype.injectHandlerService = function (e) {
            this.handlerService = e
        }, t.prototype.destroy = function () {
            for (; this.lifetimeListeners.length > 0;)this.lifetimeListeners.pop()();
            var t;
            for (t in this.contributions)this.contributions.hasOwnProperty(t) && this.contributions[t].dispose();
            this.contributions = {}, this.contentWidgets = {}, this.overlayWidgets = {}, this.bindings && (this.bindings.dispose(), this.bindings = null), this.focusTracker.dispose(), this._detachModel(), this.configuration.dispose(), this.emit(_.EventType.Disposed, {}), e.prototype.dispose.call(this)
        }, t.prototype.updateOptions = function (e) {
            e = e || {}, this.configuration.updateOptions(e)
        }, t.prototype.getConfiguration = function () {
            return S.clone(this.configuration.editor)
        }, t.prototype.normalizeIndentation = function (e) {
            return this.configuration.normalizeIndentation(e)
        }, t.prototype.getValue = function (e) {
            if ("undefined" == typeof e && (e = null), this.model) {
                var t = e && e.preserveBOM ? !0 : !1, n = U.EndOfLinePreference.TextDefined;
                return e && e.lineEnding && "\n" === e.lineEnding ? n = U.EndOfLinePreference.LF : e && e.lineEnding && "\r\n" === e.lineEnding && (n = U.EndOfLinePreference.CRLF), this.model.getValue(n, t)
            }
            return""
        }, t.prototype.setValue = function (e) {
            this.model && this.model.setValue(e)
        }, t.prototype.getView = function () {
            return this.view
        }, t.prototype.getModel = function () {
            return this.model
        }, t.prototype.setModel = function (e) {
            "undefined" == typeof e && (e = null), this.model !== e && (this._detachModel(), this._attachModel(e), this.emit(_.EventType.ModelChanged))
        }, t.prototype.getDomNode = function () {
            return this.hasView ? this.view.domNode : null
        }, t.prototype.getPosition = function () {
            return this.cursor ? this.cursor.getPosition().clone() : null
        }, t.prototype.setPosition = function (e, t, n, i) {
            if ("undefined" == typeof t && (t = !1), "undefined" == typeof n && (n = !1), "undefined" == typeof i && (i = !1), this.cursor) {
                if (!k.isIPosition(e))throw new Error("Invalid arguments");
                this.cursor.setSelections("api", [
                    {selectionStartLineNumber: e.lineNumber, selectionStartColumn: e.column, positionLineNumber: e.lineNumber, positionColumn: e.column}
                ]), t && this.revealPosition(e, n, i)
            }
        }, t.prototype.revealPosition = function (e, t, n) {
            if ("undefined" == typeof t && (t = !1), "undefined" == typeof n && (n = !1), !k.isIPosition(e))throw new Error("Invalid arguments");
            this.revealRange({startLineNumber: e.lineNumber, startColumn: e.column, endLineNumber: e.lineNumber, endColumn: e.column}, t, n)
        }, t.prototype.getSelection = function () {
            return this.cursor ? this.cursor.getSelection().clone() : null
        }, t.prototype.getSelections = function () {
            if (!this.cursor)return null;
            for (var e = this.cursor.getSelections(), t = [], n = 0, i = e.length; i > n; n++)t[n] = e[n].clone();
            return t
        }, t.prototype.setSelection = function (e, t, n, i) {
            "undefined" == typeof t && (t = !1), "undefined" == typeof n && (n = !1), "undefined" == typeof i && (i = !1);
            var o = H.isISelection(e), r = A.isIRange(e);
            if (!o && !r)throw new Error("Invalid arguments");
            if (o)this._setSelectionImpl(e, t, n, i); else if (r) {
                var s = {selectionStartLineNumber: e.startLineNumber, selectionStartColumn: e.startColumn, positionLineNumber: e.endLineNumber, positionColumn: e.endColumn};
                this._setSelectionImpl(s, t, n, i)
            }
        }, t.prototype._setSelectionImpl = function (e, t, n, i) {
            if (this.cursor) {
                var o = new H.Selection(e.selectionStartLineNumber, e.selectionStartColumn, e.positionLineNumber, e.positionColumn);
                this.cursor.setSelections("api", [o]), t && this.revealRange(o, n, i)
            }
        }, t.prototype.revealRange = function (e, t, n) {
            if ("undefined" == typeof t && (t = !1), "undefined" == typeof n && (n = !1), this.model && this.cursor) {
                if (!A.isIRange(e))throw new Error("Invalid arguments");
                var i = this.model.validateRange(e), o = {range: i, viewRange: null, revealVerticalInCenter: t, revealHorizontal: n};
                this.cursor.emit(_.EventType.CursorRevealRange, o)
            }
        }, t.prototype.setSelections = function (e) {
            if (this.cursor) {
                if (!e || 0 === e.length)throw new Error("Invalid arguments");
                for (var t = 0, n = e.length; n > t; t++)if (!H.isISelection(e[t]))throw new Error("Invalid arguments");
                this.cursor.setSelections("api", e)
            }
        }, t.prototype.setScrollTop = function (e) {
            if (this.hasView) {
                if ("number" != typeof e)throw new Error("Invalid arguments");
                this.view.getCodeEditorHelper().setScrollTop(e)
            }
        }, t.prototype.getScrollTop = function () {
            return this.hasView ? this.view.getCodeEditorHelper().getScrollTop() : -1
        }, t.prototype.delegateVerticalScrollbarMouseDown = function (e) {
            this.hasView && this.view.getCodeEditorHelper().delegateVerticalScrollbarMouseDown(e)
        }, t.prototype.setScrollLeft = function (e) {
            if (this.hasView) {
                if ("number" != typeof e)throw new Error("Invalid arguments");
                this.view.getCodeEditorHelper().setScrollLeft(e)
            }
        }, t.prototype.getScrollLeft = function () {
            return this.hasView ? this.view.getCodeEditorHelper().getScrollLeft() : -1
        }, t.prototype.saveViewState = function () {
            if (!this.cursor || !this.hasView)return null;
            var e = this.cursor.saveState(), t = this.view.saveState();
            return{cursorState: e, viewState: t}
        }, t.prototype.restoreViewState = function (e) {
            if (this.cursor && this.hasView) {
                var t = e;
                if (t && t.cursorState && t.viewState) {
                    var n = t, i = n.cursorState;
                    T.isArray(i) ? this.cursor.restoreState(i) : this.cursor.restoreState([i]), this.view.restoreState(n.viewState)
                }
            }
        }, t.prototype.layout = function () {
            this.hasView && this.view.layout()
        }, t.prototype.onVisible = function () {
        }, t.prototype.onHide = function () {
        }, t.prototype.focus = function () {
            this.hasView && this.view.focus()
        }, t.prototype.getContribution = function (e) {
            return this.contributions[e] || null
        }, t.prototype.getActions = function () {
            var e, t = [];
            for (e in this.contributions)if (this.contributions.hasOwnProperty(e)) {
                var n = this.contributions[e];
                F.isAction(n) && t.push(n)
            }
            return t
        }, t.prototype.getAction = function (e) {
            var t = this.contributions[e];
            return t && F.isAction(t) ? t : null
        }, t.prototype.trigger = function (e, t, n) {
            var i = this.getAction(t);
            null !== i ? i.enabled && w.Promise.as(i.run()).done() : this.configuration.handlerDispatcher.trigger(e, t, n)
        }, t.prototype.executeCommand = function (e, t) {
            return this.configuration.handlerDispatcher.trigger(e, _.Handler.ExecuteCommand, t)
        }, t.prototype.executeCommands = function (e, t) {
            return this.configuration.handlerDispatcher.trigger(e, _.Handler.ExecuteCommands, t)
        }, t.prototype.addContentWidget = function (e) {
            var t = {widget: e, position: e.getPosition()};
            this.contentWidgets[e.getId()] = t, this.hasView && this.view.addContentWidget(t)
        }, t.prototype.layoutContentWidget = function (e) {
            var t = e.getId();
            if (this.contentWidgets.hasOwnProperty(t)) {
                var n = this.contentWidgets[t];
                n.position = e.getPosition(), this.hasView && this.view.layoutContentWidget(n)
            }
        }, t.prototype.removeContentWidget = function (e) {
            var t = e.getId();
            if (this.contentWidgets.hasOwnProperty(t)) {
                var n = this.contentWidgets[t];
                delete this.contentWidgets[t], this.hasView && this.view.removeContentWidget(n)
            }
        }, t.prototype.addOverlayWidget = function (e) {
            var t = {widget: e, position: e.getPosition()};
            this.overlayWidgets[e.getId()] = t, this.hasView && this.view.addOverlayWidget(t)
        }, t.prototype.layoutOverlayWidget = function (e) {
            var t = e.getId();
            if (this.overlayWidgets.hasOwnProperty(t)) {
                var n = this.overlayWidgets[t];
                n.position = e.getPosition(), this.hasView && this.view.layoutOverlayWidget(n)
            }
        }, t.prototype.removeOverlayWidget = function (e) {
            var t = e.getId();
            if (this.overlayWidgets.hasOwnProperty(t)) {
                var n = this.overlayWidgets[t];
                delete this.overlayWidgets[t], this.hasView && this.view.removeOverlayWidget(n)
            }
        }, t.prototype.changeDecorations = function (e) {
            return this.model ? this.model.changeDecorations(e, this.id) : null
        }, t.prototype.getLineDecorations = function (e) {
            return this.model ? this.model.getLineDecorations(e, this.id, this.configuration.editor.readOnly) : null
        }, t.prototype.deltaDecorations = function (e, t) {
            return this.model ? this.model.deltaDecorations(e, t, this.id) : null
        }, t.prototype.changeViewZones = function (e) {
            this.hasView && this.view.change(e)
        }, t.prototype.addTypingListener = function (e, t) {
            var n = this;
            return this.cursor ? (this.cursor.addTypingListener(e, t), function () {
                n.cursor && n.cursor.removeTypingListener(e, t)
            }) : null
        }, t.prototype.getTopForLineNumber = function (e) {
            return this.hasView ? this.view.getCodeEditorHelper().getVerticalOffsetForLineNumber(e) : -1
        }, t.prototype.getOffsetForColumn = function (e, t) {
            return this.hasView ? this.view.getCodeEditorHelper().getOffsetForColumn(e, t) : -1
        }, t.prototype.getLayoutInfo = function () {
            return this.hasView ? this.view.getCodeEditorHelper().getLayoutInfo() : null
        }, t.prototype._attachModel = function (e) {
            var t = this;
            if (this.model = e ? e : null, this.listenersToRemove = [], this.view = null, this.viewModel = null, this.cursor = null, this.model) {
                this.model.setStopLineTokenizationAfter(this.configuration.editor.stopLineTokenizationAfter), this.configuration.setIsDominatedByLongLines(this.model.isDominatedByLongLines(this.configuration.editor.longLineBoundary));
                var n = this.configuration.getWrappingColumn(), i = -1;
                n > 0 && (i = n);
                var o = new D.CharacterHardWrappingLineMapperFactory(this.configuration.editor.wordWrapBreakBeforeCharacters, this.configuration.editor.wordWrapBreakAfterCharacters, this.configuration.editor.wordWrapBreakObtrusiveCharacters), r = new P.SplitLinesCollection(this.model, o, this.configuration.editor.tabSize, i);
                this.viewModel = new O.ViewModel(r, this.id, this.configuration, this.model);
                var s = {viewModel: this.viewModel, convertModelPositionToViewPosition: function (e, n) {
                    return t.viewModel.convertModelPositionToViewPosition(e, n)
                }, convertViewToModelPosition: function (e, n) {
                    return t.viewModel.convertViewPositionToModelPosition(e, n)
                }, validateViewPosition: function (e, n, i) {
                    return t.viewModel.validateViewPosition(e, n, i)
                }};
                this.cursor = new I.Cursor(this.id, this.configuration, this.model, function (e) {
                    return t.view.renderOnce(e)
                }, s), this.viewModel.addEventSource(this.cursor), this.view = new R.View(this.id, this.domElement, this.configuration, this.viewModel), this.injectorService && this.injectorService.injectTo(this.view), this.listenersToRemove.push(this.view.getInternalEventBus().addListener(_.EventType.ViewFocusGained, function () {
                    t.emit("focus"), t.emit("widgetFocus", {})
                })), this.listenersToRemove.push(this.view.getInternalEventBus().addListener("scroll", function (e) {
                    return t.emit("scroll", e)
                })), this.listenersToRemove.push(this.view.getInternalEventBus().addListener(_.EventType.ViewFocusLost, function () {
                    return t.emit("blur")
                })), this.listenersToRemove.push(this.view.getInternalEventBus().addListener(_.EventType.ContextMenu, function (e) {
                    return t.emit(_.EventType.ContextMenu, e)
                })), this.listenersToRemove.push(this.view.getInternalEventBus().addListener(_.EventType.MouseDown, function (e) {
                    return t.emit(_.EventType.MouseDown, e)
                })), this.listenersToRemove.push(this.view.getInternalEventBus().addListener(_.EventType.MouseUp, function (e) {
                    return t.emit(_.EventType.MouseUp, e)
                })), this.listenersToRemove.push(this.view.getInternalEventBus().addListener(_.EventType.KeyUp, function (e) {
                    return t.emit(_.EventType.KeyUp, e)
                })), this.listenersToRemove.push(this.view.getInternalEventBus().addListener(_.EventType.MouseMove, function (e) {
                    return t.emit(_.EventType.MouseMove, e)
                })), this.listenersToRemove.push(this.view.getInternalEventBus().addListener(_.EventType.MouseLeave, function (e) {
                    return t.emit(_.EventType.MouseLeave, e)
                })), this.listenersToRemove.push(this.view.getInternalEventBus().addListener(_.EventType.KeyDown, function (e) {
                    return t.emit(_.EventType.KeyDown, e)
                })), this.listenersToRemove.push(this.view.getInternalEventBus().addListener(_.EventType.ViewLayoutChanged, function (e) {
                    return t.emit(_.EventType.EditorLayout, e)
                })), this.listenersToRemove.push(this.model.addListener(_.EventType.ModelContentChanged, function (e) {
                    e.changeType === _.EventType.ModelContentChangedFlush && e.modeChanged && t.emit(_.EventType.ModelModeChanged), t.emit("change", {})
                })), this.listenersToRemove.push(this.cursor.addListener(_.EventType.CursorPositionChanged, function (e) {
                    return t.emit(_.EventType.CursorPositionChanged, e)
                })), this.listenersToRemove.push(this.cursor.addListener(_.EventType.CursorSelectionChanged, function (e) {
                    return t.emit(_.EventType.CursorSelectionChanged, e)
                })), this.listenersToRemove.push(this.configuration.addListener(_.EventType.ConfigurationChanged, function (e) {
                    return t.emit(_.EventType.ConfigurationChanged, e)
                })), this.listenersToRemove.push(this.model.addListener(_.EventType.ModelDispose, function () {
                    t.setModel(null)
                })), this.domElement.appendChild(this.view.domNode), this.view.renderOnce(function () {
                    var e;
                    for (e in t.contentWidgets)t.contentWidgets.hasOwnProperty(e) && t.view.addContentWidget(t.contentWidgets[e]);
                    for (e in t.overlayWidgets)t.overlayWidgets.hasOwnProperty(e) && t.view.addOverlayWidget(t.overlayWidgets[e]);
                    t.view.render(), t.hasView = !0
                })
            } else this.hasView = !1
        }, t.prototype._detachModel = function () {
            this.hasView = !1, this.listenersToRemove.forEach(function (e) {
                e()
            }), this.listenersToRemove = [], this.cursor && (this.cursor.dispose(), this.cursor = null), this.view && (this.view.dispose(), this.domElement.removeChild(this.view.domNode), this.view = null), this.viewModel && (this.viewModel.dispose(), this.viewModel = null), this.model && (this.model.removeAllDecorationsWithOwnerId(this.id), this.model = null)
        }, t
    }(x.EventEmitter);
    t.CodeEditorWidget = z
}), define("vs/base/dom/browserService", ["require", "exports", "vs/base/dom/mockDom"], function (e, t, n) {
    "use strict";
    function i() {
        return s
    }

    var o = n, r = function () {
        function e() {
            this.document = window.document, this.window = window
        }

        return e.prototype.mock = function () {
            this.document = new o.MockDocument, this.window = new o.MockWindow
        }, e.prototype.restore = function () {
            this.document = window.document, this.window = window
        }, e
    }(), s = new r;
    t.getService = i
}), define("vs/css!vs/base/dom/builder", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/base/dom/builder", ["require", "exports", "vs/base/lib/winjs.base", "vs/base/types", "vs/base/strings", "vs/base/assert", "vs/base/dom/dom", "vs/base/dom/browserService", "vs/css!./builder"], function (e, t, n, i, o, r, s, a) {
    "use strict";
    function u(e, t) {
        return T.ok(!(e instanceof k), "Expected HTMLElement as parameter"), new k(e, t)
    }

    function l(e) {
        return new A(e)
    }

    function d(e, t) {
        return T.ok(e instanceof k || e instanceof A, "Expected Builder as parameter"), e instanceof A ? new A(e) : new k(e.getHTMLElement(), t)
    }

    function c(e) {
        return new A(e)
    }

    function h() {
        return new k(null, !0)
    }

    function p(e, t) {
        T.ok(_.isString(e), "Expected String as parameter");
        var n = N.getService().document.getElementById(e);
        return n ? new k(n, t) : null
    }

    function f(e, n) {
        T.ok(_.isString(e), "Expected String as parameter");
        for (var i = N.getService().document.querySelectorAll(e), o = [], r = 0; r < i.length; r++)o.push(t.withElement(i.item(r), n));
        return new A(o)
    }

    function g(e) {
        return e[x] || (e[x] = {}), e[x]
    }

    function m(e, t, n) {
        g(e)[t] = n
    }

    function v(e, t, n) {
        var i = g(e)[t];
        return _.isUndefined(i) ? n : i
    }

    function y(e, t) {
        delete g(e)[t]
    }

    function b(e, n) {
        t.setPropertyOnElement(e, M, n)
    }

    function C(e) {
        t.removePropertyFromElement(e, M)
    }

    function E(e) {
        return t.getPropertyFromElement(e, M)
    }

    var w = n, _ = i, S = o, T = r, L = s, N = a, x = "_msDataKey", M = "__$binding", I = "__$listeners", R = "__$visibility", D = function () {
        function e(e, t) {
            this.x = e, this.y = t
        }

        return e
    }();
    t.Position = D;
    var P = function () {
        function e(e, t, n, i) {
            this.top = e, this.right = t, this.bottom = n, this.left = i
        }

        return e
    }();
    t.Box = P;
    var O = function () {
        function e(e, t) {
            this.width = e, this.height = t
        }

        return e.prototype.substract = function (t) {
            return new e(this.width - t.left - t.right, this.height - t.top - t.bottom)
        }, e
    }();
    t.Dimension = O, t.withElement = u, t.withElements = l, t.withBuilder = d, t.withBuilders = c, t.offDOM = h, t.withElementById = p, t.withElementsBySelector = f, t.Select = function (e, n) {
        return t.withElementsBySelector(e, n)
    }, t.Build = {withElement: t.withElement, withBuilder: t.withBuilder, offDOM: t.offDOM, withElementById: t.withElementById, withElementsBySelector: t.withElementsBySelector}, t.setPropertyOnElement = m, t.getPropertyFromElement = v, t.removePropertyFromElement = y, t.bindElement = b, t.unbindElement = C, t.getBindingFromElement = E, t.Binding = {setPropertyOnElement: t.setPropertyOnElement, getPropertyFromElement: t.getPropertyFromElement, removePropertyFromElement: t.removePropertyFromElement, bindElement: t.bindElement, unbindElement: t.unbindElement, getBindingFromElement: t.getBindingFromElement};
    var k = function () {
        function e(e, t) {
            this.offdom = t, this.container = e, this.currentElement = e, this.createdElements = [], this.toUnbind = {}, this.captureToUnbind = {}, this.browserService = N.getService()
        }

        return e.prototype.asContainer = function () {
            return t.withBuilder(this, this.offdom)
        }, e.prototype.clone = function () {
            var t = new e(this.container, this.offdom);
            return t.currentElement = this.currentElement, t.createdElements = this.createdElements, t.captureToUnbind = this.captureToUnbind, t.toUnbind = this.toUnbind, t
        }, e.prototype.and = function (t) {
            t instanceof e || t instanceof A || (t = new e(t, this.offdom));
            var n = [this];
            if (t instanceof A)for (var i = 0; i < t.length; i++)n.push(t.item(i)); else n.push(t);
            return new A(n)
        }, e.prototype.build = function (t, n) {
            T.ok(this.offdom, "This builder was not created off-dom, so build() can not be called."), t ? t instanceof e && (t = t.getHTMLElement()) : t = this.container, T.ok(t, "Builder can only be build() with a container provided."), T.ok(L.isHTMLElement(t), "The container must either be a HTMLElement or a Builder.");
            var i, o, r = t, s = r.childNodes;
            if (_.isNumber(n) && n < s.length)for (i = 0, o = this.createdElements.length; o > i; i++)r.insertBefore(this.createdElements[i], s[n++]); else for (i = 0, o = this.createdElements.length; o > i; i++)r.appendChild(this.createdElements[i]);
            return this
        }, e.prototype.appendTo = function (t, n) {
            t ? t instanceof e && (t = t.getHTMLElement()) : t = this.container, T.ok(t, "Builder can only be build() with a container provided."), T.ok(L.isHTMLElement(t), "The container must either be a HTMLElement or a Builder.");
            var i = t;
            this.currentElement.parentNode && this.currentElement.parentNode.removeChild(this.currentElement);
            var o = i.childNodes;
            return _.isNumber(n) && n < o.length ? i.insertBefore(this.currentElement, o[n]) : i.appendChild(this.currentElement), this
        }, e.prototype.append = function (n, i) {
            return T.ok(n, "Need a child to append"), L.isHTMLElement(n) && (n = t.withElement(n)), T.ok(n instanceof e || n instanceof A, "Need a child to append"), n.appendTo(this, i), this
        }, e.prototype.offDOM = function () {
            return this.currentElement.parentNode && this.currentElement.parentNode.removeChild(this.currentElement), this
        }, e.prototype.getHTMLElement = function () {
            return this.currentElement
        }, e.prototype.getContainer = function () {
            return this.container
        }, e.prototype.div = function (e, t) {
            return this.doElement("div", e, t)
        }, e.prototype.p = function (e, t) {
            return this.doElement("p", e, t)
        }, e.prototype.ul = function (e, t) {
            return this.doElement("ul", e, t)
        }, e.prototype.ol = function (e, t) {
            return this.doElement("ol", e, t)
        }, e.prototype.li = function (e, t) {
            return this.doElement("li", e, t)
        }, e.prototype.span = function (e, t) {
            return this.doElement("span", e, t)
        }, e.prototype.img = function (e, t) {
            return this.doElement("img", e, t)
        }, e.prototype.a = function (e, t) {
            return this.doElement("a", e, t)
        }, e.prototype.header = function (e, t) {
            return this.doElement("header", e, t)
        }, e.prototype.section = function (e, t) {
            return this.doElement("section", e, t)
        }, e.prototype.footer = function (e, t) {
            return this.doElement("footer", e, t)
        }, e.prototype.element = function (e, t, n) {
            return this.doElement(e, t, n)
        }, e.prototype.doElement = function (t, n, i) {
            var o = this.browserService.document.createElement(t);
            if (this.currentElement = o, this.offdom && this.createdElements.push(o), _.isObject(n) && this.attr(n), _.isFunction(n) && (i = n), _.isFunction(i)) {
                var r = new e(o);
                i.call(r, r)
            }
            return this.offdom || this.container.appendChild(o), this
        }, e.prototype.domFocus = function () {
            return this.currentElement.focus(), this
        }, e.prototype.hasFocus = function () {
            var e = this.browserService.document.activeElement;
            return e === this.currentElement
        }, e.prototype.domSelect = function () {
            return this.currentElement.select(), this
        }, e.prototype.domBlur = function () {
            return this.currentElement.blur(), this
        }, e.prototype.domClick = function () {
            return this.currentElement.click(), this
        }, e.prototype.on = function (e, t, n, i) {
            var o = this;
            if (_.isArray(e))e.forEach(function (e) {
                o.on(e, t, n, i)
            }); else {
                var r = e, s = L.addListener(this.currentElement, r, function (e) {
                    t(e, o, s)
                }, i || !1);
                i ? (this.captureToUnbind[r] || (this.captureToUnbind[r] = []), this.captureToUnbind[r].push(s)) : (this.toUnbind[r] || (this.toUnbind[r] = []), this.toUnbind[r].push(s));
                var a = this.getProperty(I, []);
                a.push(s), this.setProperty(I, a), n && _.isArray(n) && n.push(s)
            }
            return this
        }, e.prototype.off = function (e, t) {
            var n = this;
            if (_.isArray(e))e.forEach(function (e) {
                n.off(e)
            }); else {
                var i = e;
                if (t) {
                    if (this.captureToUnbind[i])for (; this.captureToUnbind[i].length;)this.captureToUnbind[i].pop()()
                } else if (this.toUnbind[i])for (; this.toUnbind[i].length;)this.toUnbind[i].pop()()
            }
            return this
        }, e.prototype.once = function (e, t, n, i) {
            var o = this;
            if (_.isArray(e))e.forEach(function (e) {
                o.once(e, t)
            }); else var r = e, s = L.addListener(this.currentElement, r, function (e) {
                t(e, o, s), s()
            }, i || !1);
            return this
        }, e.prototype.preventDefault = function (e, t, n) {
            var i = function (e) {
                e.preventDefault(), t && (e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0)
            };
            return this.on(e, i, n)
        }, e.prototype.attr = function (e, t) {
            if (_.isObject(e)) {
                for (var n in e)if (e.hasOwnProperty(n)) {
                    var i = e[n];
                    this.doSetAttr(n, i)
                }
                return this
            }
            return _.isString(e) && !_.isString(t) ? this.currentElement.getAttribute(e) : (_.isString(e) && (_.isString(t) || (t = String(t)), this.doSetAttr(e, t)), this)
        }, e.prototype.doSetAttr = function (e, t) {
            "class" === e && (e = "addClass"), this[e] ? _.isArray(t) ? this[e].apply(this, t) : this[e].call(this, t) : this.currentElement.setAttribute(e, t)
        }, e.prototype.id = function (e) {
            return this.currentElement.setAttribute("id", e), this
        }, e.prototype.src = function (e) {
            return this.currentElement.setAttribute("src", e), this
        }, e.prototype.href = function (e) {
            return this.currentElement.setAttribute("href", e), this
        }, e.prototype.title = function (e) {
            return this.currentElement.setAttribute("title", e), this
        }, e.prototype.name = function (e) {
            return this.currentElement.setAttribute("name", e), this
        }, e.prototype.type = function (e) {
            return this.currentElement.setAttribute("type", e), this
        }, e.prototype.value = function (e) {
            return this.currentElement.setAttribute("value", e), this
        }, e.prototype.alt = function (e) {
            return this.currentElement.setAttribute("alt", e), this
        }, e.prototype.draggable = function (e) {
            return this.currentElement.setAttribute("draggable", e ? "true" : "false"), this
        }, e.prototype.tabindex = function (e) {
            return this.currentElement.setAttribute("tabindex", e.toString()), this
        }, e.prototype.style = function (e, t) {
            if (_.isObject(e)) {
                for (var n in e)if (e.hasOwnProperty(n)) {
                    var i = e[n];
                    this.doSetStyle(n, i)
                }
            } else {
                if (_.isString(e) && !_.isString(t))return this.currentElement.style[this.cssKeyToJavaScriptProperty(e)];
                _.isString(e) && _.isString(t) && this.doSetStyle(e, t)
            }
            return this
        }, e.prototype.doSetStyle = function (e, t) {
            if (e.indexOf("-") >= 0) {
                var n = e.split("-");
                e = n[0];
                for (var i = 1; i < n.length; i++) {
                    var o = n[i];
                    e = e + o.charAt(0).toUpperCase() + o.substr(1)
                }
            }
            this.currentElement.style[this.cssKeyToJavaScriptProperty(e)] = t
        }, e.prototype.cssKeyToJavaScriptProperty = function (e) {
            if (e.indexOf("-") >= 0) {
                var t = e.split("-");
                e = t[0];
                for (var n = 1; n < t.length; n++) {
                    var i = t[n];
                    e = e + i.charAt(0).toUpperCase() + i.substr(1)
                }
            } else"float" === e && (e = "cssFloat");
            return e
        }, e.prototype.getComputedStyle = function () {
            return L.getComputedStyle(this.currentElement)
        }, e.prototype.addClass = function () {
            for (var e = [], t = 0; t < arguments.length - 0; t++)e[t] = arguments[t + 0];
            var n = this;
            return e.forEach(function (e) {
                var t = e.split(" ");
                t.forEach(function (e) {
                    L.addClass(n.currentElement, e)
                })
            }), this
        }, e.prototype.setClass = function (e, t) {
            return"undefined" == typeof t && (t = null), null === t ? this.currentElement.className = e : t ? this.addClass(e) : this.removeClass(e), this
        }, e.prototype.hasClass = function (e) {
            return L.hasClass(this.currentElement, e)
        }, e.prototype.removeClass = function () {
            for (var e = [], t = 0; t < arguments.length - 0; t++)e[t] = arguments[t + 0];
            var n = this;
            return e.forEach(function (e) {
                var t = e.split(" ");
                t.forEach(function (e) {
                    L.removeClass(n.currentElement, e)
                })
            }), this
        }, e.prototype.swapClass = function (e, t) {
            return this.hasClass(e) ? (this.removeClass(e), this.addClass(t)) : (this.removeClass(t), this.addClass(e)), this
        }, e.prototype.toggleClass = function (e) {
            return this.hasClass(e) ? this.removeClass(e) : this.addClass(e), this
        }, e.prototype.color = function (e) {
            return this.currentElement.style.color = e, this
        }, e.prototype.background = function (e) {
            return this.currentElement.style.backgroundColor = e, this
        }, e.prototype.padding = function (e, t, n, i) {
            return _.isString(e) && e.indexOf(" ") >= 0 ? this.padding.apply(this, e.split(" ")) : (null !== e && (this.currentElement.style.paddingTop = this.toPixel(e)), null !== t && (this.currentElement.style.paddingRight = this.toPixel(t)), null !== n && (this.currentElement.style.paddingBottom = this.toPixel(n)), null !== i && (this.currentElement.style.paddingLeft = this.toPixel(i)), this)
        }, e.prototype.margin = function (e, t, n, i) {
            return _.isString(e) && e.indexOf(" ") >= 0 ? this.margin.apply(this, e.split(" ")) : (null !== e && (this.currentElement.style.marginTop = this.toPixel(e)), null !== t && (this.currentElement.style.marginRight = this.toPixel(t)), null !== n && (this.currentElement.style.marginBottom = this.toPixel(n)), null !== i && (this.currentElement.style.marginLeft = this.toPixel(i)), this)
        }, e.prototype.position = function (e, t, n, i, o) {
            return _.isString(e) && e.indexOf(" ") >= 0 ? this.position.apply(this, e.split(" ")) : (null !== e && (this.currentElement.style.top = this.toPixel(e)), null !== t && (this.currentElement.style.right = this.toPixel(t)), null !== n && (this.currentElement.style.bottom = this.toPixel(n)), null !== i && (this.currentElement.style.left = this.toPixel(i)), o || (o = "absolute"), this.currentElement.style.position = o, this)
        }, e.prototype.size = function (e, t) {
            return _.isString(e) && e.indexOf(" ") >= 0 ? this.size.apply(this, e.split(" ")) : (null !== e && (this.currentElement.style.width = this.toPixel(e)), null !== t && (this.currentElement.style.height = this.toPixel(t)), this)
        }, e.prototype.minSize = function (e, t) {
            return _.isString(e) && e.indexOf(" ") >= 0 ? this.minSize.apply(this, e.split(" ")) : (null !== e && (this.currentElement.style.minWidth = this.toPixel(e)), null !== t && (this.currentElement.style.minHeight = this.toPixel(t)), this)
        }, e.prototype.maxSize = function (e, t) {
            return _.isString(e) && e.indexOf(" ") >= 0 ? this.maxSize.apply(this, e.split(" ")) : (null !== e && (this.currentElement.style.maxWidth = this.toPixel(e)), null !== t && (this.currentElement.style.maxHeight = this.toPixel(t)), this)
        }, e.prototype.float = function (e) {
            return this.currentElement.style.cssFloat = e, this.currentElement.style.styleFloat = e, this
        }, e.prototype.clear = function (e) {
            return this.currentElement.style.clear = e, this
        }, e.prototype.normal = function () {
            return this.currentElement.style.fontStyle = "normal", this.currentElement.style.fontWeight = "normal", this.currentElement.style.textDecoration = "none", this
        }, e.prototype.italic = function () {
            return this.currentElement.style.fontStyle = "italic", this
        }, e.prototype.bold = function () {
            return this.currentElement.style.fontWeight = "bold", this
        }, e.prototype.underline = function () {
            return this.currentElement.style.textDecoration = "underline", this
        }, e.prototype.overflow = function (e) {
            return this.currentElement.style.overflow = e, this
        }, e.prototype.display = function (e) {
            return this.currentElement.style.display = e, this
        }, e.prototype.show = function () {
            return this.hasClass("hidden") && this.removeClass("hidden"), this.attr("aria-hidden", "false"), this.cancelVisibilityPromise(), this
        }, e.prototype.showDelayed = function (e) {
            var t = this;
            this.cancelVisibilityPromise();
            var n = w.Promise.timeout(e);
            return this.setProperty(R, n), n.done(function () {
                t.removeProperty(R), t.show()
            }), this
        }, e.prototype.hide = function () {
            return this.hasClass("hidden") || this.addClass("hidden"), this.attr("aria-hidden", "true"), this.cancelVisibilityPromise(), this
        }, e.prototype.isHidden = function () {
            return this.hasClass("hidden") || "none" === this.currentElement.style.display
        }, e.prototype.toggleVisibility = function () {
            return this.cancelVisibilityPromise(), this.swapClass("builder-visible", "hidden"), this.isHidden() ? this.attr("aria-hidden", "true") : this.attr("aria-hidden", "false"), this
        }, e.prototype.cancelVisibilityPromise = function () {
            var e = this.getProperty(R);
            e && (e.cancel(), this.removeProperty(R))
        }, e.prototype.border = function (e, t, n) {
            return _.isString(e) && e.indexOf(" ") >= 0 ? this.border.apply(this, e.split(" ")) : (this.currentElement.style.borderWidth = this.toPixel(e), n && (this.currentElement.style.borderColor = n), t && (this.currentElement.style.borderStyle = t), this)
        }, e.prototype.borderTop = function (e, t, n) {
            return _.isString(e) && e.indexOf(" ") >= 0 ? this.borderTop.apply(this, e.split(" ")) : (this.currentElement.style.borderTopWidth = this.toPixel(e), n && (this.currentElement.style.borderTopColor = n), t && (this.currentElement.style.borderTopStyle = t), this)
        }, e.prototype.borderBottom = function (e, t, n) {
            return _.isString(e) && e.indexOf(" ") >= 0 ? this.borderBottom.apply(this, e.split(" ")) : (this.currentElement.style.borderBottomWidth = this.toPixel(e), n && (this.currentElement.style.borderBottomColor = n), t && (this.currentElement.style.borderBottomStyle = t), this)
        }, e.prototype.borderLeft = function (e, t, n) {
            return _.isString(e) && e.indexOf(" ") >= 0 ? this.borderLeft.apply(this, e.split(" ")) : (this.currentElement.style.borderLeftWidth = this.toPixel(e), n && (this.currentElement.style.borderLeftColor = n), t && (this.currentElement.style.borderLeftStyle = t), this)
        }, e.prototype.borderRight = function (e, t, n) {
            return _.isString(e) && e.indexOf(" ") >= 0 ? this.borderRight.apply(this, e.split(" ")) : (this.currentElement.style.borderRightWidth = this.toPixel(e), n && (this.currentElement.style.borderRightColor = n), t && (this.currentElement.style.borderRightStyle = t), this)
        }, e.prototype.textAlign = function (e) {
            return this.currentElement.style.textAlign = e, this
        }, e.prototype.verticalAlign = function (e) {
            return this.currentElement.style.verticalAlign = e, this
        }, e.prototype.toPixel = function (e) {
            return-1 === e.toString().indexOf("px") ? e.toString() + "px" : e
        }, e.prototype.innerHtml = function (e, t) {
            return t ? this.currentElement.innerHTML += e : this.currentElement.innerHTML = e, this
        }, e.prototype.text = function (e, t) {
            return t ? 0 === this.currentElement.children.length ? this.currentElement.textContent += e : this.currentElement.appendChild(this.browserService.document.createTextNode(e)) : this.currentElement.textContent = e, this
        }, e.prototype.safeInnerHtml = function (e, t) {
            return this.innerHtml(S.escape(e), t)
        }, e.prototype.insertHtmlBeforeBegin = function (e) {
            return this.currentElement.insertAdjacentHTML("beforeBegin", e), this
        }, e.prototype.insertHtmlAfterBegin = function (e) {
            return this.currentElement.insertAdjacentHTML("afterBegin", e), this
        }, e.prototype.insertHtmlBeforeEnd = function (e) {
            return this.currentElement.insertAdjacentHTML("beforeEnd", e), this
        }, e.prototype.insertHtmlAfterEnd = function (e) {
            return this.currentElement.insertAdjacentHTML("afterEnd", e), this
        }, e.prototype.bind = function (e) {
            return t.bindElement(this.currentElement, e), this
        }, e.prototype.unbind = function () {
            return t.unbindElement(this.currentElement), this
        }, e.prototype.getBinding = function () {
            return t.getBindingFromElement(this.currentElement)
        }, e.prototype.setProperty = function (e, n) {
            return t.setPropertyOnElement(this.currentElement, e, n), this
        }, e.prototype.getProperty = function (e, n) {
            return t.getPropertyFromElement(this.currentElement, e, n)
        }, e.prototype.removeProperty = function (e) {
            return delete g(this.currentElement)[e], this
        }, e.prototype.parent = function (e) {
            return T.ok(!this.offdom, "Builder was created with offdom = true and thus has no parent set"), t.withElement(this.currentElement.parentNode, e)
        }, e.prototype.children = function (e) {
            for (var n = this.currentElement.children, i = [], o = 0; o < n.length; o++)i.push(t.withElement(n.item(o), e));
            return new A(i)
        }, e.prototype.removeChild = function (e) {
            return this.currentElement === e.parent().getHTMLElement() && this.currentElement.removeChild(e.getHTMLElement()), this
        }, e.prototype.select = function (e, n) {
            T.ok(_.isString(e), "Expected String as parameter");
            for (var i = this.currentElement.querySelectorAll(e), o = [], r = 0; r < i.length; r++)o.push(t.withElement(i.item(r), n));
            return new A(o)
        }, e.prototype.matches = function (e) {
            var t = this.currentElement, n = t.webkitMatchesSelector || t.mozMatchesSelector || t.msMatchesSelector || t.oMatchesSelector;
            return n && n.call(t, e)
        }, e.prototype.isEmpty = function () {
            return!this.currentElement.childNodes || 0 === this.currentElement.childNodes.length
        }, e.prototype.unbindDescendants = function (e) {
            for (var t = 0, n = e.children.length; n > t; t++) {
                var i = e.children.item(t);
                if (g(i)) {
                    var o = g(i)[I];
                    if (_.isArray(o))for (; o.length;)o.pop()();
                    delete i[x]
                }
                this.unbindDescendants(i)
            }
        }, e.prototype.empty = function () {
            return this.unbindDescendants(this.currentElement), L.clearNode(this.currentElement), this.offdom && (this.createdElements = []), this
        }, e.prototype.destroy = function () {
            if (this.currentElement.parentNode && this.currentElement.parentNode.removeChild(this.currentElement), this.empty(), g(this.currentElement)) {
                var e = g(this.currentElement)[I];
                if (_.isArray(e))for (; e.length;)e.pop()();
                delete this.currentElement[x]
            }
            var t;
            for (t in this.toUnbind)if (this.toUnbind.hasOwnProperty(t) && _.isArray(this.toUnbind[t]))for (; this.toUnbind[t].length;)this.toUnbind[t].pop()();
            for (t in this.captureToUnbind)if (this.captureToUnbind.hasOwnProperty(t) && _.isArray(this.captureToUnbind[t]))for (; this.captureToUnbind[t].length;)this.captureToUnbind[t].pop()();
            this.currentElement = null, this.container = null, this.offdom = null, this.createdElements = null, this.captureToUnbind = null, this.toUnbind = null
        }, e.prototype.getPositionRelativeTo = function (t) {
            t instanceof e && (t = t.getHTMLElement());
            var n = L.getRelativeLeft(this.currentElement, t), i = L.getRelativeTop(this.currentElement, t);
            return new P(i, -1, -1, n)
        }, e.prototype.getPosition = function () {
            var e = L.getTopLeftOffset(this.currentElement);
            return new P(e.top, -1, -1, e.left)
        }, e.prototype.getTotalSize = function () {
            var e = L.getTotalWidth(this.currentElement), t = L.getTotalHeight(this.currentElement);
            return new O(e, t)
        }, e.prototype.getContentSize = function () {
            var e = L.getContentWidth(this.currentElement), t = L.getContentHeight(this.currentElement);
            return new O(e, t)
        }, e.prototype.getClientArea = function () {
            if (this.currentElement !== this.browserService.document.body) {
                var e = L.getDomNodePosition(this.currentElement);
                return new O(e.width, e.height)
            }
            if (this.browserService.window.innerWidth && this.browserService.window.innerHeight)return new O(this.browserService.window.innerWidth, this.browserService.window.innerHeight);
            if (this.browserService.document.body && this.browserService.document.body.clientWidth && this.browserService.document.body.clientWidth)return new O(this.browserService.document.body.clientWidth, this.browserService.document.body.clientHeight);
            if (this.browserService.document.documentElement && this.browserService.document.documentElement.clientWidth && this.browserService.document.documentElement.clientHeight)return new O(this.browserService.document.documentElement.clientWidth, this.browserService.document.documentElement.clientHeight);
            throw new Error("Unable to figure out browser width and height")
        }, e
    }();
    t.Builder = k;
    var A = function (e) {
        function n(i) {
            if (T.ok(_.isArray(i) || i instanceof n, "Expected Array or MultiBuilder as parameter"), e.call(this), this.length = 0, this.builders = [], _.isArray(i))for (var o = 0; o < i.length; o++)i[o]instanceof HTMLElement ? this.push(t.withElement(i[o])) : this.push(i[o]); else for (var o = 0; o < i.length; o++)this.push(i.item(o));
            var r = this, s = function (e) {
                r[e] = function () {
                    for (var t, i = Array.prototype.slice.call(arguments), o = !1, s = 0; s < r.length; s++) {
                        var a = r.item(s)[e].apply(r.item(s), i);
                        if (a instanceof n) {
                            t || (t = []), o = !0;
                            for (var u = 0; u < a.length; u++)t.push(a.item(u))
                        } else _.isUndefined(a) || a instanceof k || (t || (t = []), t.push(a))
                    }
                    return t && o ? new n(t) : t || r
                }
            };
            for (var a in k.prototype)"clone" !== a && "and" !== a && k.prototype.hasOwnProperty(a) && _.isFunction(k.prototype[a]) && s(a)
        }

        return __extends(n, e), n.prototype.item = function (e) {
            return this.builders[e]
        }, n.prototype.push = function () {
            for (var e = [], t = 0; t < arguments.length - 0; t++)e[t] = arguments[t + 0];
            for (var n = 0; n < e.length; n++)this.builders.push(e[n]);
            this.length = this.builders.length
        }, n.prototype.pop = function () {
            var e = this.builders.pop();
            return this.length = this.builders.length, e
        }, n.prototype.concat = function (e) {
            var t = this.builders.concat(e);
            return this.length = this.builders.length, t
        }, n.prototype.shift = function () {
            var e = this.builders.shift();
            return this.length = this.builders.length, e
        }, n.prototype.unshift = function (e) {
            var t = this.builders.unshift(e);
            return this.length = this.builders.length, t
        }, n.prototype.slice = function (e, t) {
            var n = this.builders.slice(e, t);
            return this.length = this.builders.length, n
        }, n.prototype.splice = function (e, t) {
            var n = this.builders.splice(e, t);
            return this.length = this.builders.length, n
        }, n.prototype.clone = function () {
            return new n(this)
        }, n.prototype.and = function (e) {
            e instanceof k || e instanceof n || (e = new k(e));
            var t = [];
            if (e instanceof n)for (var i = 0; i < e.length; i++)t.push(e.item(i)); else t.push(e);
            return this.push.apply(this, t), this
        }, n
    }(k);
    t.MultiBuilder = A;
    var H = /([\w\-]+)?(#([\w\-]+))?((.([\w\-]+))*)/;
    t.$ = function (e) {
        if (_.isUndefined(e))return t.offDOM();
        if (!e)throw new Error("Bad use of $");
        if (L.isHTMLElement(e) || e === window)return t.withElement(e);
        if (e instanceof k)return t.withBuilder(e);
        if (_.isString(e)) {
            if ("<" === e[0]) {
                var n, i = N.getService().document.createElement("div");
                if (i.innerHTML = S.format.apply(S, arguments), 0 === i.children.length)throw new Error("Bad use of $");
                if (1 === i.children.length)return n = i.firstChild, i.removeChild(n), t.withElement(n);
                for (var o = []; i.firstChild;)n = i.firstChild, i.removeChild(n), o.push(t.withElement(n));
                return new A(o)
            }
            if (1 === arguments.length) {
                var r = H.exec(e);
                if (!r)throw new Error("Bad use of $");
                var s = r[1] || "div", a = r[3] || void 0, u = (r[4] || "").replace(/\./g, " "), l = {};
                return a && (l.id = a), u && (l["class"] = u), t.offDOM().element(s, l)
            }
            var d = t.offDOM();
            return d.element.apply(d, arguments), d
        }
        throw new Error("Bad use of $")
    }, t.$.Box = P, t.$.Dimension = O, t.$.Position = D, t.$.Builder = k, t.$.MultiBuilder = A, t.$.Select = t.Select, t.$.Build = t.Build, t.$.Binding = t.Binding
}), define("vs/css!vs/base/ui/widgets/sash", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/base/ui/widgets/sash", ["require", "exports", "vs/base/dom/builder", "vs/base/dom/dom", "vs/base/eventEmitter", "vs/base/dom/mouseEvent", "vs/css!./sash"], function (e, t, n, i, o, r) {
    "use strict";
    var s = n, a = i, u = o, l = r, d = s.$, c = function (e) {
        function t(t, n) {
            var i = this;
            e.call(this), this.$e = d(".monaco-sash").appendTo(t).on("mousedown", function (e) {
                i.onMouseDown(e)
            }), this.isDisabled = !1, this.dataProvider = n
        }

        return __extends(t, e), t.prototype.getHTMLElement = function () {
            return this.$e.getHTMLElement()
        }, t.prototype.onMouseDown = function (e) {
            var t = this;
            if (a.EventHelper.stop(e, !1), !this.isDisabled) {
                var n = new l.StandardMouseEvent(e), i = n.posx;
                this.$e.addClass("active"), this.emit("start");
                var o = d("div").style({position: "absolute", top: 0, left: 0, width: "100%", height: "100%", zIndex: 1e6, cursor: "ew-resize"}), r = d(window);
                r.on("mousemove",function (e) {
                    a.EventHelper.stop(e, !1);
                    var n = new l.StandardMouseEvent(e), o = {startX: i, currentX: n.posx};
                    t.emit("change", o)
                }).once("mouseup", function (e) {
                    a.EventHelper.stop(e, !1), new l.StandardMouseEvent(e), t.$e.removeClass("active"), t.emit("end"), r.off("mousemove"), o.destroy()
                }), o.appendTo(document.body)
            }
        }, t.prototype.layout = function () {
            this.$e.style({height: this.dataProvider.getSashHeight(this) + "px", top: this.dataProvider.getSashTop(this) + "px", left: this.dataProvider.getSashLeft(this) - this.$e.getTotalSize().width / 2 + "px"})
        }, t.prototype.show = function () {
            this.$e.show()
        }, t.prototype.hide = function () {
            this.$e.hide()
        }, t.prototype.enable = function () {
            this.$e.removeClass("disabled"), this.isDisabled = !1
        }, t.prototype.disable = function () {
            this.$e.addClass("disabled"), this.isDisabled = !0
        }, t.prototype.dispose = function () {
            this.$e && (this.$e.destroy(), this.$e = null), e.prototype.dispose.call(this)
        }, t
    }(u.EventEmitter);
    t.Sash = c
}), define("vs/css!vs/editor/diff/diffEditor", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/diff/diffEditorWidget", ["require", "exports", "vs/editor/core/config", "vs/editor/core/constants", "vs/base/objects", "vs/editor/core/codeEditorWidget", "vs/base/dom/dom", "vs/base/eventEmitter", "vs/editor/core/range", "vs/base/ui/widgets/sash", "vs/css!./diffEditor"], function (e, t, n, i, o, r, s, a, u, l) {
    "use strict";
    var d = n, c = i, h = o, p = r, f = s, g = a, m = u, v = l, y = function (e) {
        function t(t, n, i) {
            var o = this;
            e.call(this), n = n || {}, this.domElement = t, this.listenersToRemove = [], this.theme = n.theme || d.Config.editor.theme, this.containerDomElement = document.createElement("div"), this.containerDomElement.className = "monaco-diff-editor monaco-editor-background " + this.theme, this.containerDomElement.style.position = "relative", this.containerDomElement.style.height = "100%", this.domElement.appendChild(this.containerDomElement), this.overviewDomElement = document.createElement("div"), this.overviewDomElement.className = "diffOverview", this.overviewDomElement.style.position = "absolute", this.overviewDomElement.style.height = "100%", this.listenersToRemove.push(f.addListener(this.overviewDomElement, "mousedown", function (e) {
                o.modifiedEditor.delegateVerticalScrollbarMouseDown(e)
            })), this.containerDomElement.appendChild(this.overviewDomElement), this._createLeftHandSide(), this._createRightHandSide(), this.disableSash = n.enableSplitViewResizing === !1, this.sashPosition = null, this.sash = new v.Sash(this.containerDomElement, this), this.disableSash && this.sash.disable(), this.sash.on("start", function () {
                return o.onSashDragStart()
            }), this.sash.on("change", function (e) {
                return o.onSashDrag(e)
            }), this.sash.on("end", function () {
                return o.onSashDragEnd()
            }), this.domElementWidth = 0, this.domElementHeight = 0, this._measureDomElement(!1), n.automaticLayout && (this.measureDomElementToken = window.setInterval(function () {
                return o._measureDomElement(!0)
            }, 100)), this._createLeftHandSideEditor(n, i), this._createRightHandSideEditor(n, i), this.originalDecorations = [], this.modifiedDecorations = [], this.originalZones = [], this.modifiedZones = [], this.beginUpdateDecorationsTimeout = -1, this.diffComputationToken = 0, this.isHandlingScrollEvent = !1, this.isVisible = !0
        }

        return __extends(t, e), t.prototype.getEditorType = function () {
            return c.EditorType.IDiffEditor
        }, t.prototype.getLineChanges = function () {
            return this.lineChanges
        }, t.prototype.getModifiedEditor = function () {
            return this.modifiedEditor
        }, t.prototype._createLeftHandSide = function () {
            this.originalDomNode = document.createElement("div"), this.originalDomNode.className = "editor original", this.originalDomNode.style.position = "absolute", this.originalDomNode.style.height = "100%", this.containerDomElement.appendChild(this.originalDomNode)
        }, t.prototype._createRightHandSide = function () {
            this.modifiedDomNode = document.createElement("div"), this.modifiedDomNode.className = "editor modified", this.modifiedDomNode.style.position = "absolute", this.modifiedDomNode.style.height = "100%", this.containerDomElement.appendChild(this.modifiedDomNode)
        }, t.prototype._measureDomElement = function (e, n) {
            "undefined" == typeof n && (n = this.sashPosition);
            var i = f.getDomNodePosition(this.containerDomElement);
            if (!(i.width <= 0)) {
                var o = i.width - t.ENTIRE_DIFF_OVERVIEW_WIDTH, r = Math.floor(o / 2);
                n = this.disableSash ? r : n || r, o > 2 * t.MINIMUM_EDITOR_WIDTH ? (n < t.MINIMUM_EDITOR_WIDTH && (n = t.MINIMUM_EDITOR_WIDTH), n > o - t.MINIMUM_EDITOR_WIDTH && (n = o - t.MINIMUM_EDITOR_WIDTH)) : n = r, (i.width !== this.width || i.height !== this.height || this.sashPosition !== n) && (this.width = i.width, this.height = i.height, this.sashPosition = n, this.originalDomNode.style.width = n + "px", this.originalDomNode.style.left = "0px", this.modifiedDomNode.style.width = this.width - n + "px", this.modifiedDomNode.style.left = n + "px", this.overviewDomElement.style.top = "0px", this.overviewDomElement.style.width = t.ENTIRE_DIFF_OVERVIEW_WIDTH + "px", this.overviewDomElement.style.left = this.width - t.ENTIRE_DIFF_OVERVIEW_WIDTH + "px", e && this.layout(), (this.originalOverviewRuler || this.modifiedOverviewRuler) && this._layoutOverviewRulers(), this.sash.layout())
            }
        }, t.prototype._layoutOverviewRulers = function () {
            var e = t.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * t.ONE_OVERVIEW_WIDTH, n = this.modifiedEditor.getLayoutInfo();
            n && (this.originalOverviewRuler.setLayout({top: 0, width: t.ONE_OVERVIEW_WIDTH, right: e + t.ONE_OVERVIEW_WIDTH, height: this.height - n.horizontalScrollbarHeight}), this.modifiedOverviewRuler.setLayout({top: 0, right: 0, width: t.ONE_OVERVIEW_WIDTH, height: this.height - n.horizontalScrollbarHeight}))
        }, t.prototype._recreateOverviewRulers = function () {
            this.originalOverviewRuler && (this.overviewDomElement.removeChild(this.originalOverviewRuler.getDomNode()), this.originalOverviewRuler.destroy()), this.originalOverviewRuler = this.originalEditor.getView().createOverviewRuler("original diffOverviewRuler", 4, Number.MAX_VALUE), this.overviewDomElement.appendChild(this.originalOverviewRuler.getDomNode()), this.modifiedOverviewRuler && (this.overviewDomElement.removeChild(this.modifiedOverviewRuler.getDomNode()), this.modifiedOverviewRuler.destroy()), this.modifiedOverviewRuler = this.modifiedEditor.getView().createOverviewRuler("modified diffOverviewRuler", 4, Number.MAX_VALUE), this.overviewDomElement.appendChild(this.modifiedOverviewRuler.getDomNode()), this._layoutOverviewRulers()
        }, t.prototype._createLeftHandSideEditor = function (e, t) {
            var n = this;
            this.originalEditor = new p.CodeEditorWidget(this.originalDomNode, this._adjustOptionsForLeftHandSide(e), t), this.listenersToRemove.push(this.originalEditor.addBulkListener(function (e) {
                return n._onOriginalEditorEvents(e)
            })), this.listenersToRemove.push(this.addEmitter(this.originalEditor, "leftHandSide"))
        }, t.prototype._adjustOptionsForLeftHandSide = function (e) {
            var t = h.clone(e || {});
            return t.wrappingColumn = -1, t.readOnly = !0, t.automaticLayout = !1, t.scrollbar = t.scrollbar || {}, t.scrollbar.vertical = "hidden", t.theme = this.theme + " original-in-monaco-diff-editor", t
        }, t.prototype._createRightHandSideEditor = function (e, t) {
            var n = this;
            this.modifiedEditor = new p.CodeEditorWidget(this.modifiedDomNode, this._adjustOptionsForRightHandSide(e), t), this.listenersToRemove.push(this.modifiedEditor.addBulkListener(function (e) {
                return n._onModifiedEditorEvents(e)
            })), this.listenersToRemove.push(this.addEmitter(this.modifiedEditor, "rightHandSide"))
        }, t.prototype._adjustOptionsForRightHandSide = function (e) {
            var t = h.clone(e || {});
            return t.wrappingColumn = -1, t.automaticLayout = !1, t.scrollbar = t.scrollbar || {}, t.scrollbar.vertical = "visible", t.scrollbar.verticalHasArrows = !1, t.scrollbar.verticalScrollbarSize = 41, t.theme = this.theme + " modified-in-monaco-diff-editor", t
        }, t.prototype._cleanViewZonesAndDecorationsOnEditor = function (e, t, n) {
            t.length > 0 && e.changeViewZones(function (e) {
                for (var n = 0, i = t.length; i > n; n++)e.removeZone(t[n])
            }), n.length > 0 && e.changeDecorations(function (e) {
                for (var t = 0, i = n.length; i > t; t++)e.removeDecoration(n[t])
            })
        }, t.prototype._cleanViewZonesAndDecorations = function () {
            this._cleanViewZonesAndDecorationsOnEditor(this.originalEditor, this.originalZones, this.originalDecorations), this.originalZones = [], this.originalDecorations = [], this._cleanViewZonesAndDecorationsOnEditor(this.modifiedEditor, this.modifiedZones, this.modifiedDecorations), this.modifiedZones = [], this.modifiedDecorations = []
        }, t.prototype.onSashDragStart = function () {
            this.startSashPosition = this.sashPosition
        }, t.prototype.onSashDrag = function (e) {
            this._measureDomElement(!0, this.startSashPosition + (e.currentX - e.startX))
        }, t.prototype.onSashDragEnd = function () {
            this.sash.layout()
        }, t.prototype.destroy = function () {
            this.listenersToRemove.forEach(function (e) {
                e()
            }), this.listenersToRemove = [], window.clearInterval(this.measureDomElementToken), this._cleanViewZonesAndDecorations(), this.originalOverviewRuler.destroy(), this.modifiedOverviewRuler.destroy(), this.originalEditor.destroy(), this.modifiedEditor.destroy()
        }, t.prototype.updateOptions = function (e) {
            this.theme = e && e.theme ? e.theme : this.theme, this.containerDomElement.className = "monaco-diff-editor monaco-editor-background " + this.theme, this.modifiedEditor.updateOptions(this._adjustOptionsForRightHandSide(e)), this.originalEditor.updateOptions(this._adjustOptionsForLeftHandSide(e))
        }, t.prototype.getValue = function (e) {
            return"undefined" == typeof e && (e = null), this.modifiedEditor.getValue(e)
        }, t.prototype.getModel = function () {
            return{original: this.originalEditor.getModel(), modified: this.modifiedEditor.getModel()}
        }, t.prototype.setModel = function (e) {
            this._cleanViewZonesAndDecorations(), this.originalEditor.setModel(e ? e.original : null), this.modifiedEditor.setModel(e ? e.modified : null), e && (this._recreateOverviewRulers(), this._beginUpdateDecorations())
        }, t.prototype.getDomNode = function () {
            return this.domElement
        }, t.prototype.getPosition = function () {
            return this.modifiedEditor.getPosition()
        }, t.prototype.setPosition = function (e, t, n, i) {
            this.modifiedEditor.setPosition(e, t, n, i)
        }, t.prototype.getSelection = function () {
            return this.modifiedEditor.getSelection()
        }, t.prototype.getSelections = function () {
            return this.modifiedEditor.getSelections()
        }, t.prototype.setSelection = function (e, t, n, i) {
            this.modifiedEditor.setSelection(e, t, n, i)
        }, t.prototype.getActions = function () {
            return this.modifiedEditor.getActions()
        }, t.prototype.saveViewState = function () {
            var e = this.originalEditor.saveViewState(), t = this.modifiedEditor.saveViewState();
            return{original: e, modified: t}
        }, t.prototype.restoreViewState = function (e) {
            var t = e;
            if (t.original && t.original) {
                var n = t;
                this.originalEditor.restoreViewState(n.original), this.modifiedEditor.restoreViewState(n.modified)
            }
        }, t.prototype.layout = function () {
            this._measureDomElement(!1), this.originalEditor.layout(), this.modifiedEditor.layout()
        }, t.prototype.focus = function () {
            this.modifiedEditor.focus()
        }, t.prototype.onVisible = function () {
            this.isVisible = !0, this.originalEditor.onVisible(), this.modifiedEditor.onVisible(), this._beginUpdateDecorations()
        }, t.prototype.onHide = function () {
            this.isVisible = !1, this.originalEditor.onHide(), this.modifiedEditor.onHide(), this._cleanViewZonesAndDecorations()
        }, t.prototype.trigger = function (e, t, n) {
            this.modifiedEditor.trigger(e, t, n)
        }, t.prototype.getSashTop = function () {
            return 0
        }, t.prototype.getSashLeft = function () {
            return this.sashPosition
        }, t.prototype.getSashHeight = function () {
            return this.containerDomElement.clientHeight
        }, t.prototype.changeDecorations = function (e) {
            return this.modifiedEditor.changeDecorations(e)
        }, t.prototype._onModifiedEditorEvents = function (e) {
            for (var n = this, i = !1, o = 0; o < e.length; o++)i = i || "change" === e[o].getType(), "scroll" === e[o].getType() && this._onModifiedEditorScroll(e[o].getData());
            i && this.isVisible && (-1 !== this.beginUpdateDecorationsTimeout && (window.clearTimeout(this.beginUpdateDecorationsTimeout), this.beginUpdateDecorationsTimeout = -1), this.beginUpdateDecorationsTimeout = window.setTimeout(function () {
                return n._beginUpdateDecorations()
            }, t.UPDATE_DIFF_DECORATIONS_DELAY))
        }, t.prototype._onOriginalEditorEvents = function (e) {
            for (var t = 0; t < e.length; t++)"scroll" === e[t].getType() && this._onOriginalEditorScroll(e[t].getData())
        }, t.prototype._onOriginalEditorScroll = function (e) {
            this.isHandlingScrollEvent || (this.isHandlingScrollEvent = !0, this.modifiedEditor.setScrollLeft(e.scrollLeft), this.modifiedEditor.setScrollTop(e.scrollTop), this.isHandlingScrollEvent = !1)
        }, t.prototype._onModifiedEditorScroll = function (e) {
            this.isHandlingScrollEvent || (this.isHandlingScrollEvent = !0, this.originalEditor.setScrollLeft(e.scrollLeft), this.originalEditor.setScrollTop(e.scrollTop), this.isHandlingScrollEvent = !1)
        }, t.prototype._beginUpdateDecorations = function () {
            var e = this;
            if (this.beginUpdateDecorationsTimeout = -1, this.modifiedEditor.getModel()) {
                this.diffComputationToken++;
                var t = this.diffComputationToken, n = this.originalEditor.getModel(), i = this.modifiedEditor.getModel(), o = this.modifiedEditor.getModel().getMode().diffSupport;
                if (o)try {
                    o.computeDiff(n.getAssociatedResource(), i.getAssociatedResource()).then(function (o) {
                        t === e.diffComputationToken && n === e.originalEditor.getModel() && i === e.modifiedEditor.getModel() && (e._updateDecorations(o), e.lineChanges = o, e.emit(c.EventType.DiffUpdated, {editor: e, lineChanges: o}))
                    }, function () {
                        t === e.diffComputationToken && n === e.originalEditor.getModel() && i === e.modifiedEditor.getModel() && e._updateDecorations(null)
                    })
                } catch (r) {
                    console.error(r), this._updateDecorations(null)
                } else this._updateDecorations(null)
            }
        }, t.prototype._createDecoration = function (e, t, n, i, o, r) {
            return{range: new m.Range(e, t, n, i), options: {isOverlay: !1, className: o, isWholeLine: r}}
        }, t.prototype._createFakeLinesDiv = function () {
            var e = document.createElement("div");
            return e.className = "diagonal-fill", e
        }, t.prototype._isChangeOrInsert = function (e) {
            return e.modifiedEndLineNumber > 0
        }, t.prototype._isChangeOrDelete = function (e) {
            return e.originalEndLineNumber > 0
        }, t.prototype._getOriginalLength = function (e) {
            return e.originalEndLineNumber > 0 ? e.originalEndLineNumber - e.originalStartLineNumber + 1 : 0
        }, t.prototype._getModifiedLength = function (e) {
            return e.modifiedEndLineNumber > 0 ? e.modifiedEndLineNumber - e.modifiedStartLineNumber + 1 : 0
        }, t.prototype._updateOriginalEditorDecorations = function (e) {
            var t = this;
            this.originalEditor.changeViewZones(function (n) {
                var i, o;
                for (i = 0, o = t.originalZones.length; o > i; i++)n.removeZone(t.originalZones[i]);
                t.originalZones = [];
                var r, s, a, u;
                for (i = 0, o = e.length; o > i; i++)r = e[i], t._isChangeOrInsert(r) && (a = t._getModifiedLength(r), s = t._getOriginalLength(r), a > s && (u = Math.max(r.originalStartLineNumber, r.originalEndLineNumber), t.originalZones.push(n.addZone({afterLineNumber: u, heightInLines: a - s, domNode: t._createFakeLinesDiv()}))))
            });
            var n, i, o, r, s, a, u, l = [], d = [];
            for (n = 0, i = e.length; i > n; n++)if (s = e[n], this._isChangeOrDelete(s) && (u = this._isChangeOrInsert(s), l.push(this._createDecoration(s.originalStartLineNumber, 1, s.originalEndLineNumber, 1e5, "line-delete", !0)), u && s.charChanges || l.push(this._createDecoration(s.originalStartLineNumber, 1, s.originalEndLineNumber, 1e5, "char-delete", !0)), d.push({startLineNumber: s.originalStartLineNumber, endLineNumber: s.originalEndLineNumber, color: "rgba(255, 0, 0, 0.4)"}), s.charChanges))for (o = 0, r = s.charChanges.length; r > o; o++)a = s.charChanges[o], this._isChangeOrDelete(a) && l.push(this._createDecoration(a.originalStartLineNumber, a.originalStartColumn, a.originalEndLineNumber, a.originalEndColumn, "char-delete", !1));
            this.originalDecorations = this.originalEditor.deltaDecorations(this.originalDecorations, l), this.originalOverviewRuler.setZones(d)
        }, t.prototype._updateModifiedEditorDecorations = function (e) {
            var t = this;
            this.modifiedEditor.changeViewZones(function (n) {
                var i, o;
                for (i = 0, o = t.modifiedZones.length; o > i; i++)n.removeZone(t.modifiedZones[i]);
                t.modifiedZones = [];
                var r, s, a, u;
                for (i = 0, o = e.length; o > i; i++)r = e[i], t._isChangeOrDelete(r) && (a = t._getModifiedLength(r), s = t._getOriginalLength(r), s > a && (u = Math.max(r.modifiedStartLineNumber, r.modifiedEndLineNumber), t.modifiedZones.push(n.addZone({afterLineNumber: u, heightInLines: s - a, domNode: t._createFakeLinesDiv()}))))
            });
            var n, i, o, r, s, a, u, l = [], d = [];
            for (n = 0, i = e.length; i > n; n++)if (s = e[n], this._isChangeOrInsert(s) && (u = this._isChangeOrDelete(s), l.push(this._createDecoration(s.modifiedStartLineNumber, 1, s.modifiedEndLineNumber, 1e5, "line-insert", !0)), u && s.charChanges || l.push(this._createDecoration(s.modifiedStartLineNumber, 1, s.modifiedEndLineNumber, 1e5, "char-insert", !0)), d.push({startLineNumber: s.modifiedStartLineNumber, endLineNumber: s.modifiedEndLineNumber, color: "rgba(155, 185, 85, 0.4)"}), s.charChanges))for (o = 0, r = s.charChanges.length; r > o; o++)a = s.charChanges[o], this._isChangeOrInsert(a) && l.push(this._createDecoration(a.modifiedStartLineNumber, a.modifiedStartColumn, a.modifiedEndLineNumber, a.modifiedEndColumn, "char-insert", !1));
            this.modifiedDecorations = this.modifiedEditor.deltaDecorations(this.modifiedDecorations, l), this.modifiedOverviewRuler.setZones(d)
        }, t.prototype._updateDecorations = function (e) {
            this._updateOriginalEditorDecorations(e || []), this._updateModifiedEditorDecorations(e || [])
        }, t.UPDATE_DIFF_DECORATIONS_DELAY = 200, t.ONE_OVERVIEW_WIDTH = 15, t.ENTIRE_DIFF_OVERVIEW_WIDTH = 30, t.MINIMUM_EDITOR_WIDTH = 100, t
    }(g.EventEmitter);
    t.DiffEditorWidget = y
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/platform/actionRegistry", ["require", "exports", "vs/platform/platform", "vs/base/ui/actions", "vs/base/assert"], function (e, t, n, i, o) {
    "use strict";
    var r = n, s = i, a = o, u = function (e) {
        function t(t, n, i) {
            for (var o = [], r = 0; r < arguments.length - 3; r++)o[r] = arguments[r + 3];
            e.call(this, t), this.id = n, this.label = i, this.keybindings = o.slice(0)
        }

        return __extends(t, e), t.prototype.createNew = function () {
            for (var t = [], n = 0; n < arguments.length - 0; n++)t[n] = arguments[n + 0];
            return e.prototype.createNew.apply(this, t)
        }, t
    }(r.BaseDescriptor);
    t.ActionDescriptor = u;
    var l = function (e) {
        function t(t, n, i, o, r) {
            "undefined" == typeof i && (i = ""), "undefined" == typeof o && (o = ""), "undefined" == typeof r && (r = !0), e.call(this, t, i, o, r), this.actionDescriptor = n
        }

        return __extends(t, e), t.prototype.injectInjectorService = function (e) {
            this.injectorService = e
        }, Object.defineProperty(t.prototype, "id", {get: function () {
            return this.cachedAction instanceof s.Action ? this.cachedAction.id : this._id
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "label", {get: function () {
            return this.cachedAction instanceof s.Action ? this.cachedAction.label : this._label
        }, set: function (e) {
            this.cachedAction instanceof s.Action ? this.cachedAction.label = e : this._label = e
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "class", {get: function () {
            return this.cachedAction instanceof s.Action ? this.cachedAction.class : this._cssClass
        }, set: function (e) {
            this.cachedAction instanceof s.Action ? this.cachedAction.class = e : this._cssClass = e
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "enabled", {get: function () {
            return this.cachedAction instanceof s.Action ? this.cachedAction.enabled : this._enabled
        }, set: function (e) {
            this.cachedAction instanceof s.Action ? this.cachedAction.enabled = e : this._enabled = e
        }, enumerable: !0, configurable: !0}), t.prototype.run = function (e) {
            var t = this;
            return this.cachedAction instanceof s.Action ? this.cachedAction.run(e) : this.actionDescriptor.loadAndCreate(this.injectorService).then(function (n) {
                return a.ok(n instanceof s.Action, "Action must be an instanceof Base Action"), t.cachedAction = n, n.run(e)
            })
        }, t
    }(s.Action);
    t.DeferredAction = l
}), define("vs/css!vs/base/ui/widgets/findInput", ["vs/css!vs/editor/editor.main"], {}), define("vs/base/ui/widgets/findInput", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/dom/builder", "vs/base/dom/dom", "vs/base/dom/mouseEvent", "vs/base/strings", "vs/css!./findInput"], function (e, t, n, i, o, r, s) {
    "use strict";
    var a = n, u = i, l = o, d = r, c = s, h = function () {
        function e(e, t, n, i) {
            var o = this;
            this.actionClassName = e, this.title = t, this.isChecked = n, this.onChange = i, this.listenersToRemove = [], this.domNode = document.createElement("div"), this.domNode.title = t, this.render(), u.Build.withElement(this.domNode).on("click", function (e) {
                var t = new d.StandardMouseEvent(e);
                o.isChecked = !o.isChecked, o.render(), o.onChange(), t.preventDefault()
            }, this.listenersToRemove)
        }

        return e.prototype.render = function () {
            this.domNode.className = this.className()
        }, e.prototype.setChecked = function (e) {
            this.isChecked = e, this.render()
        }, e.prototype.className = function () {
            return"custom-checkbox " + this.actionClassName + " " + (this.isChecked ? "checked" : "unchecked")
        }, e.prototype.width = function () {
            return 23
        }, e.prototype.destroy = function () {
            this.listenersToRemove.forEach(function (e) {
                e()
            }), this.listenersToRemove = []
        }, e
    }();
    t.CustomCheckbox = h;
    var p = function () {
        function e(e, t) {
            this.onOptionChange = null, this.width = t.width || 100, this.placeholder = t.placeholder || "", this.validation = t.validation, this.label = t.label || a.localize("vs_base_ui_widgets_findInput", 0), this.listenersToRemove = [], this.regex = null, this.wholeWords = null, this.caseSensitive = null, this.domNode = null, this.inputNode = null, this.validationNode = null, this.buildDomNode(), Boolean(e) && e.appendChild(this.domNode)
        }

        return e.prototype.destroy = function () {
            this.regex.destroy(), this.wholeWords.destroy(), this.caseSensitive.destroy(), this.listenersToRemove.forEach(function (e) {
                e()
            }), this.listenersToRemove = []
        }, e.prototype.on = function (t, n) {
            switch (t) {
                case"keydown":
                case"keyup":
                    u.Build.withElement(this.inputNode).on(t, n, this.listenersToRemove);
                    break;
                case e.OPTION_CHANGE:
                    this.onOptionChange = n
            }
            return this
        }, e.prototype.enable = function () {
            this.inputNode.disabled = !1
        }, e.prototype.disable = function () {
            this.inputNode.disabled = !0
        }, e.prototype.setWidth = function (e) {
            this.width = e, this.domNode.style.width = this.width + "px", this.setInputWidth()
        }, e.prototype.getValue = function () {
            return this.inputNode.value
        }, e.prototype.setValue = function (e) {
            this.inputNode.value = e
        }, e.prototype.select = function () {
            this.inputNode.select()
        }, e.prototype.focus = function () {
            this.inputNode.focus()
        }, e.prototype.getCaseSensitive = function () {
            return this.caseSensitive.isChecked
        }, e.prototype.setCaseSensitive = function (e) {
            this.caseSensitive.setChecked(e), this.setInputWidth()
        }, e.prototype.getWholeWords = function () {
            return this.wholeWords.isChecked
        }, e.prototype.setWholeWords = function (e) {
            this.wholeWords.setChecked(e), this.setInputWidth()
        }, e.prototype.getRegex = function () {
            return this.regex.isChecked
        }, e.prototype.setRegex = function (e) {
            this.regex.setChecked(e), this.setInputWidth()
        }, e.prototype.setInputWidth = function () {
            var e = this.width - this.caseSensitive.width() - this.wholeWords.width() - this.regex.width() - 4;
            this.inputNode.style.width = e + "px"
        }, e.prototype.buildDomNode = function () {
            var e = this;
            this.inputNode = document.createElement("input"), u.Build.withElement(this.inputNode).addClass("input").attr({placeholder: this.placeholder || "", wrap: "off", autocorrect: "off", autocapitalize: "off", spellcheck: "false", "aria-label": this.label}).type("text").on(l.EventType.KEY_UP, function () {
                Boolean(e.validation) && e.validate()
            }), this.domNode = document.createElement("div"), this.domNode.style.width = this.width + "px", u.Build.withElement(this.domNode).addClass("monaco-findInput"), this.regex = new h("regex", a.localize("vs_base_ui_widgets_findInput", 1), !1, function () {
                e.onOptionChange(null), e.inputNode.focus(), e.setInputWidth(), e.validate()
            }), this.wholeWords = new h("whole-word", a.localize("vs_base_ui_widgets_findInput", 2), !1, function () {
                e.onOptionChange(null), e.inputNode.focus(), e.setInputWidth(), e.validate()
            }), this.caseSensitive = new h("case-sensitive", a.localize("vs_base_ui_widgets_findInput", 3), !1, function () {
                e.onOptionChange(null), e.inputNode.focus(), e.setInputWidth(), e.validate()
            }), this.setInputWidth(), this.domNode.appendChild(this.inputNode), this.domNode.appendChild(this.regex.domNode), this.domNode.appendChild(this.wholeWords.domNode), this.domNode.appendChild(this.caseSensitive.domNode)
        }, e.prototype.validate = function () {
            var e = c.trim(this.inputNode.value), t = this.validation(c.trim(e));
            if ("" === t)this.validationNode && u.$(this.domNode).removeChild(this.validationNode), this.validationNode = null, this.inputNode.setAttribute("title", ""); else {
                var n = document.createElement("span");
                if (n.className = "text-measure", n.textContent = e, this.domNode.appendChild(n), !this.validationNode) {
                    var i = document.createElement("div");
                    i.className = "validation-decoration", this.domNode.insertBefore(i, this.inputNode), this.validationNode = u.$(i), this.inputNode.setAttribute("title", t)
                }
                this.validationNode.size(n.offsetWidth, n.offsetHeight), this.domNode.removeChild(n)
            }
        }, e.OPTION_CHANGE = "optionChange", e
    }();
    t.FindInput = p
}), define("vs/css!vs/editor/contrib/find/findWidget", ["vs/css!vs/editor/editor.main"], {}), define("vs/editor/contrib/find/replaceAllCommand", ["require", "exports", "vs/editor/core/selection"], function (e, t, n) {
    "use strict";
    var i = n, o = function () {
        function e(e, t) {
            this._ranges = e, this._replaceStrings = t
        }

        return e.prototype.getEditOperations = function (e, t) {
            for (var n = 0; n < this._ranges.length; n++)t.addEditOperation(this._ranges[n], this._replaceStrings[n])
        }, e.prototype.computeCursorState = function (e, t) {
            var n = t.getInverseEditOperations(), o = n[n.length - 1].range;
            return new i.Selection(o.endLineNumber, o.endColumn, o.endLineNumber, o.endColumn)
        }, e
    }();
    t.ReplaceAllCommand = o
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/find/findModel", ["require", "exports", "vs/editor/core/position", "vs/editor/core/constants", "vs/base/strings", "vs/base/eventEmitter", "vs/editor/contrib/find/replaceAllCommand", "vs/editor/core/command/replaceCommand"], function (e, t, n, i, o, r, s, a) {
    "use strict";
    var u = n, l = i, d = o, c = r, h = s, p = a;
    t.START_FIND_ID = "actions.find", t.NEXT_MATCH_FIND_ID = "editor.actions.nextMatchFindAction", t.PREVIOUS_MATCH_FIND_ID = "editor.actions.previousMatchFindAction", t.START_FIND_REPLACE_ID = "editor.actions.startFindReplaceAction", t.REPLACE_ID = "editor.actions.replaceAction", t.REPLACE_ALL_ID = "editor.actions.replaceAllAction";
    var f = function (e) {
        function t(t) {
            var n = this;
            e.call(this), this.editor = t, this.startPosition = null, this.searchString = "", this.replaceString = "", this.searchOnlyEditableRange = !1, this.decorations = [], this.decorationIndex = 0, this.highlightedDecorationId = null, this.listenersToRemove = [], this.updateDecorationsTimeout = null, this.didReplace = !1, this.isRegex = !1, this.matchCase = !1, this.wholeWord = !1, this.listenersToRemove.push(this.editor.addListener(l.EventType.CursorPositionChanged, function (e) {
                ("explicit" === e.reason || "undo" === e.reason || "redo" === e.reason) && (null !== n.highlightedDecorationId && n.editor.changeDecorations(function (e) {
                    e.changeDecorationOptions(n.highlightedDecorationId, n.createFindMatchDecorationOptions(!1)), n.highlightedDecorationId = null
                }), n.startPosition = n.editor.getPosition(), n.decorationIndex = -1)
            })), this.listenersToRemove.push(this.editor.getModel().addListener(l.EventType.ModelContentChanged, function (e) {
                return e.changeType === l.EventType.ModelContentChangedFlush && (n.decorations = []), n.startPosition = n.editor.getPosition(), null !== n.updateDecorationsTimeout ? (window.clearTimeout(n.updateDecorationsTimeout), n.resetupdateDecorationsTimeout(), void 0) : (n.resetupdateDecorationsTimeout(), void 0)
            }))
        }

        return __extends(t, e), t.prototype.resetupdateDecorationsTimeout = function () {
            var e = this;
            this.updateDecorationsTimeout = window.setTimeout(function () {
                e.updateDecorations(!1), e.updateDecorationsTimeout = null
            }, 100)
        }, t.prototype.removeOldDecorations = function (e) {
            var t, n;
            for (t = 0, n = this.decorations.length; n > t; t++)e.removeDecoration(this.decorations[t]);
            this.decorations = []
        }, t.prototype.createFindMatchDecorationOptions = function (e) {
            return{isOverlay: !1, className: e ? "currentFindMatch" : "findMatch", showInOverviewRuler: "rgba(246, 185, 77, 0.7)"}
        }, t.prototype.addDecorations = function (e, t) {
            var n, i;
            for (n = 0, i = t.length; i > n; n++)this.decorations[n] = e.addDecoration(t[n], this.createFindMatchDecorationOptions(!1))
        }, t.prototype.updateDecorations = function (e) {
            var t = this;
            this.didReplace && this.next(), this.editor.changeDecorations(function (e) {
                t.removeOldDecorations(e), t.addDecorations(e, t.editor.getModel().findMatches(t.searchString, t.searchOnlyEditableRange, t.isRegex, t.matchCase, t.wholeWord))
            }), this.highlightedDecorationId = null, this.decorationIndex = this.indexAfterPosition(this.startPosition), this.didReplace || e ? this.decorations.length > 0 && this.setSelectionToDecoration(this.decorations[this.decorationIndex]) : this.decorationIndex = this.previousIndex(this.decorationIndex);
            var n = {position: this.decorations.length > 0 ? this.decorationIndex + 1 : 0, count: this.decorations.length};
            this.emit("matches", n), this.didReplace = !1
        }, t.prototype.update = function (e, t) {
            var n = !1;
            this.isRegex !== e.properties.isRegex && (this.isRegex = e.properties.isRegex, n = !0), this.matchCase !== e.properties.matchCase && (this.matchCase = e.properties.matchCase, n = !0), this.wholeWord !== e.properties.wholeWord && (this.wholeWord = e.properties.wholeWord, n = !0), e.searchString !== this.searchString && (this.searchString = e.searchString, n = !0), this.replaceString = e.replaceString, e.isReplaceEnabled !== this.searchOnlyEditableRange && (this.searchOnlyEditableRange = e.isReplaceEnabled, n = !0), n && this.updateDecorations(t)
        }, t.prototype.start = function (e, t) {
            this.startPosition = this.editor.getPosition(), this.isRegex = e.properties.isRegex, this.matchCase = e.properties.matchCase, this.wholeWord = e.properties.wholeWord, this.searchString = e.searchString, this.replaceString = e.replaceString, this.searchOnlyEditableRange = e.isReplaceEnabled, this.updateDecorations(!1), this.decorationIndex = this.previousIndex(this.indexAfterPosition(this.startPosition));
            var n = {state: e, shouldFocus: t};
            this.emit("start", n)
        }, t.prototype.prev = function () {
            this.decorations.length > 0 && (-1 === this.decorationIndex && (this.decorationIndex = this.indexAfterPosition(this.startPosition)), this.decorationIndex = this.previousIndex(this.decorationIndex), this.setSelectionToDecoration(this.decorations[this.decorationIndex]))
        }, t.prototype.next = function () {
            this.decorations.length > 0 && (this.decorationIndex = -1 === this.decorationIndex ? this.indexAfterPosition(this.startPosition) : this.nextIndex(this.decorationIndex), this.setSelectionToDecoration(this.decorations[this.decorationIndex]))
        }, t.prototype.setSelectionToDecoration = function (e) {
            var t = this;
            this.editor.changeDecorations(function (n) {
                null !== t.highlightedDecorationId && n.changeDecorationOptions(t.highlightedDecorationId, t.createFindMatchDecorationOptions(!1)), n.changeDecorationOptions(e, t.createFindMatchDecorationOptions(!0)), t.highlightedDecorationId = e
            });
            var n = this.editor.getModel().getDecorationRange(e);
            this.editor.setSelection(n, !0, !0, !0)
        }, t.prototype.getReplaceString = function (e) {
            if (!this.isRegex)return this.replaceString;
            var t = d.createRegExp(this.searchString, this.isRegex, this.matchCase, this.wholeWord);
            return e.replace(t, this.replaceString)
        }, t.prototype.replace = function () {
            if (0 !== this.decorations.length) {
                var e = this.editor.getModel(), t = e.getDecorationRange(this.decorations[this.decorationIndex]), n = this.editor.getSelection();
                if (null !== t && n.startColumn === t.startColumn && n.endColumn === t.endColumn && n.startLineNumber === t.startLineNumber && n.endLineNumber === t.endLineNumber) {
                    var i = e.getValueInRange(n), o = this.getReplaceString(i), r = new p.ReplaceCommand(n, o);
                    this.editor.executeCommand("replace", r), this.startPosition = new u.Position(n.startLineNumber, n.startColumn + o.length), this.decorationIndex = -1, this.didReplace = !0
                } else this.next()
            }
        }, t.prototype.replaceAll = function () {
            var e = this;
            if (0 !== this.decorations.length) {
                for (var t = this.editor.getModel(), n = [], i = 0, o = this.decorations.length; o > i; i++)n.push(t.getDecorationRange(this.decorations[i]));
                this.editor.changeDecorations(function (t) {
                    e.removeOldDecorations(t)
                });
                for (var r = [], i = 0, o = n.length; o > i; i++)r.push(this.getReplaceString(t.getValueInRange(n[i])));
                var s = new h.ReplaceAllCommand(n, r);
                this.editor.executeCommand("replaceAll", s)
            }
        }, t.prototype.destroy = function () {
            var e = this;
            this.listenersToRemove.forEach(function (e) {
                e()
            }), this.listenersToRemove = [], this.editor.changeDecorations(function (t) {
                e.removeOldDecorations(t)
            }), this.emit("destroy", null)
        }, t.prototype.previousIndex = function (e) {
            return this.decorations.length > 0 ? (e - 1 + this.decorations.length) % this.decorations.length : 0
        }, t.prototype.nextIndex = function (e) {
            return this.decorations.length > 0 ? (e + 1) % this.decorations.length : 0
        }, t.prototype.indexAfterPosition = function (e) {
            if (0 === this.decorations.length)return 0;
            for (var t = 0, n = this.decorations.length; n > t; t++) {
                var i = this.decorations[t], o = this.editor.getModel().getDecorationRange(i);
                if (!(o.startLineNumber < e.lineNumber)) {
                    if (o.startLineNumber > e.lineNumber)return t;
                    if (!(o.startColumn < e.column))return t
                }
            }
            return 0
        }, t
    }(c.EventEmitter);
    t.FindModelBoundToEditorModel = f
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/find/findWidget", ["require", "exports", "vs/base/ui/widgets/findInput", "./findModel", "vs/base/dom/dom", "vs/base/errors", "vs/base/dom/keyboardEvent", "vs/base/env", "vs/nls!vs/editor/editor.main", "vs/base/dom/builder", "vs/base/dom/mouseEvent", "vs/base/eventEmitter", "vs/editor/editor", "vs/css!./findWidget"], function (e, t, n, i, o, r, s, a, u, l, d, c, h) {
    "use strict";
    var p = n, f = i, g = o, m = r, v = s, y = a, b = u, C = l, E = d, w = c, _ = h, S = function (e) {
        function t(t) {
            e.call(this), this.codeEditor = t, this.domNode = null, this.findInput = null, this.replaceInputElement = null, this.toggleReplaceBtn = null, this.isVisible = !1, this.isReplaceVisible = !1, this.isReplaceEnabled = !1, this.listenersToRemove = [], this.model = null, this.modelListenersToRemove = [], this.buildDomNode(), this.codeEditor.addOverlayWidget(this)
        }

        return __extends(t, e), t.prototype.getId = function () {
            return t.ID
        }, t.prototype.getDomNode = function () {
            return this.domNode
        }, t.prototype.destroy = function () {
            this.removeModel(), this.findInput.destroy(), this.listenersToRemove.forEach(function (e) {
                e()
            }), this.listenersToRemove = []
        }, t.prototype.setState = function (e) {
            this.findInput.setValue(e.searchString), this.findInput.setCaseSensitive(e.properties.matchCase), this.findInput.setWholeWords(e.properties.wholeWord), this.findInput.setRegex(e.properties.isRegex), this.replaceInputElement.value = e.replaceString, e.isReplaceEnabled ? this._enableReplace(!1) : this._disableReplace(!1), this.onFindValueChange()
        }, t.prototype.getState = function () {
            var e = {searchString: this.findInput.getValue(), replaceString: this.replaceInputElement.value, properties: {isRegex: this.findInput.getRegex(), wholeWord: this.findInput.getWholeWords(), matchCase: this.findInput.getCaseSensitive()}, isReplaceEnabled: this.isReplaceEnabled, isVisible: this.isVisible};
            return e
        }, t.prototype.setModel = function (e) {
            var t = this;
            this.removeModel(), e ? (this.model = e, this.modelListenersToRemove.push(this.model.addListener("start", function (e) {
                t.reveal(e.shouldFocus), t.setState(e.state), e.shouldFocus && t.findInput.select()
            })), this.modelListenersToRemove.push(this.model.addListener("matches", function (e) {
                e.position, e.count, g.toggleClass(t.domNode, "no-results", "" !== t.findInput.getValue() && 0 === e.count)
            }))) : this.hide(!1)
        }, t.prototype._enableReplace = function (e) {
            this.isReplaceEnabled = !0, this.codeEditor.getConfiguration().readOnly || this.isReplaceVisible || (this.replaceInputElement.disabled = !1, this.isReplaceVisible = !0, g.addClass(this.domNode, "replace"), g.removeClass(this.toggleReplaceBtn, "collapse"), g.addClass(this.toggleReplaceBtn, "expand")), e && this.emit(t.USER_INPUT_EVENT)
        }, t.prototype._disableReplace = function (e) {
            this.isReplaceEnabled = !1, this.isReplaceVisible && (this.replaceInputElement.disabled = !0, g.removeClass(this.domNode, "replace"), g.removeClass(this.toggleReplaceBtn, "expand"), g.addClass(this.toggleReplaceBtn, "collapse"), this.isReplaceVisible = !1), e && this.emit(t.USER_INPUT_EVENT)
        }, t.prototype.removeModel = function () {
            null !== this.model && (this.modelListenersToRemove.forEach(function (e) {
                e()
            }), this.modelListenersToRemove = [], this.model = null)
        }, t.prototype.onFindInputKeyDown = function (e) {
            var n = this, i = new v.KeyboardEvent(e), o = !1;
            (i.asString() === (y.browser.isMacintosh ? "Meta-H" : "Ctrl-H") || "DownArrow" === i.asString()) && (this._enableReplace(!0), this.replaceInputElement.select(), this.replaceInputElement.focus(), i.preventDefault(), o = !0), o || "Enter" !== i.asString() || (this.codeEditor.getAction(f.NEXT_MATCH_FIND_ID).run().done(null, m.onUnexpectedError), i.preventDefault(), o = !0), o || "Shift-Enter" !== i.asString() || (this.codeEditor.getAction(f.PREVIOUS_MATCH_FIND_ID).run().done(null, m.onUnexpectedError), i.preventDefault(), o = !0), o || setTimeout(function () {
                n.onFindValueChange(), n.emit(t.USER_INPUT_EVENT)
            }, 10)
        }, t.prototype.onReplaceInputKeyDown = function (e) {
            var n = this, i = new v.KeyboardEvent(e), o = !1;
            (i.asString() === (y.browser.isMacintosh ? "Meta-H" : "Ctrl-H") || "UpArrow" === i.asString()) && (this.findInput.select(), this.findInput.focus(), i.preventDefault(), o = !0), o || "Enter" !== i.asString() || (this.codeEditor.getAction(f.REPLACE_ID).run().done(null, m.onUnexpectedError), i.preventDefault(), o = !0), o || i.asString() !== (y.browser.isMacintosh ? "Meta-Enter" : "Ctrl-Enter") || (this.codeEditor.getAction(f.REPLACE_ALL_ID).run().done(null, m.onUnexpectedError), i.preventDefault(), o = !0), o || setTimeout(function () {
                n.emit(t.USER_INPUT_EVENT)
            }, 10)
        }, t.prototype.onFindValueChange = function () {
            0 === this.findInput.getValue().length ? (this.$prevBtn.addClass("disabled"), this.$nextBtn.addClass("disabled"), this.$replaceBtn.addClass("disabled"), this.$replaceAllBtn.addClass("disabled")) : (this.$prevBtn.removeClass("disabled"), this.$nextBtn.removeClass("disabled"), this.$replaceBtn.removeClass("disabled"), this.$replaceAllBtn.removeClass("disabled"))
        }, t.prototype.buildDomNode = function () {
            var e = this;
            this.findInput = new p.FindInput(null, {width: t.FIND_INPUT_AREA_WIDTH, label: b.localize("vs_editor_contrib_find_findWidget", 0), placeholder: b.localize("vs_editor_contrib_find_findWidget", 1), validation: function (e) {
                if (0 === e.length)return"";
                if (!this.findInput.getRegex())return"";
                try {
                    return new RegExp(e), ""
                } catch (t) {
                    return t.message
                }
            }.bind(this)}).on("keydown",function (t) {
                e.onFindInputKeyDown(t)
            }).on(p.FindInput.OPTION_CHANGE, function () {
                e.emit(t.USER_INPUT_EVENT)
            });
            var n = document.createElement("div");
            n.title = b.localize("vs_editor_contrib_find_findWidget", 2), this.$prevBtn = C.Build.withElement(n).addClass("button previous").on("click", function (t) {
                var n = new E.StandardMouseEvent(t);
                e.codeEditor.getAction(f.PREVIOUS_MATCH_FIND_ID).run().done(null, m.onUnexpectedError), e.findInput.focus(), n.preventDefault()
            }, this.listenersToRemove);
            var i = document.createElement("div");
            i.title = b.localize("vs_editor_contrib_find_findWidget", 3), this.$nextBtn = C.Build.withElement(i).addClass("button next").on("click", function (t) {
                var n = new E.StandardMouseEvent(t);
                e.codeEditor.getAction(f.NEXT_MATCH_FIND_ID).run().done(null, m.onUnexpectedError), e.findInput.focus(), n.preventDefault()
            }, this.listenersToRemove);
            var o = document.createElement("div");
            o.title = b.localize("vs_editor_contrib_find_findWidget", 4), C.Build.withElement(o).addClass("button close").on("click", function (n) {
                e.hide(!0), e.emit(t.USER_CLOSED_EVENT);
                var i = new E.StandardMouseEvent(n);
                i.preventDefault()
            }, this.listenersToRemove);
            var r = document.createElement("div");
            C.Build.withElement(r).addClass("find-part"), r.appendChild(this.findInput.domNode), r.appendChild(n), r.appendChild(i), r.appendChild(o), this.replaceInputElement = document.createElement("input"), C.Build.withElement(this.replaceInputElement).addClass("replace-input").attr({placeholder: b.localize("vs_editor_contrib_find_findWidget", 5), "aria-label": b.localize("vs_editor_contrib_find_findWidget", 6), disabled: "true"}).style({width: t.REPLACE_INPUT_AREA_WIDTH + "px"}).on("keydown", function (t) {
                e.onReplaceInputKeyDown(t)
            });
            var s = document.createElement("div");
            this.$replaceAllBtn = C.Build.withElement(s).text(b.localize("vs_editor_contrib_find_findWidget", 7)).addClass("button wide").on("click", function (t) {
                var n = new E.StandardMouseEvent(t);
                e.codeEditor.getAction(f.REPLACE_ALL_ID).run().done(null, m.onUnexpectedError), n.preventDefault()
            }, this.listenersToRemove);
            var a = document.createElement("div");
            this.$replaceBtn = C.Build.withElement(a).text(b.localize("vs_editor_contrib_find_findWidget", 8)).addClass("button wide").on("click", function (t) {
                var n = new E.StandardMouseEvent(t);
                e.codeEditor.getAction(f.REPLACE_ID).run().done(null, m.onUnexpectedError), n.preventDefault()
            }, this.listenersToRemove);
            var u = document.createElement("div");
            C.Build.withElement(u).addClass("replace-part"), u.appendChild(this.replaceInputElement), u.appendChild(a), u.appendChild(s), this.toggleReplaceBtn = document.createElement("div");
            var l = C.Build.withElement(this.toggleReplaceBtn);
            l.addClass("button toggle left").on("click", function (t) {
                var n = new E.StandardMouseEvent(t);
                e.isReplaceVisible ? e._disableReplace(!0) : e._enableReplace(!0), n.preventDefault()
            }, this.listenersToRemove), l.addClass(this.isReplaceVisible ? "expand" : "collapse"), this.domNode = document.createElement("div");
            var d = C.Build.withElement(this.domNode);
            d.addClass("editor-widget find-widget").addClass("monaco-editor-background"), this.codeEditor.getConfiguration().readOnly || d.addClass("can-replace"), this.domNode.appendChild(this.toggleReplaceBtn), this.domNode.appendChild(r), this.domNode.appendChild(u)
        }, t.prototype.reveal = function (e) {
            var t = this;
            this.isVisible || (this.findInput.enable(), this.isVisible = !0, window.setTimeout(function () {
                g.addClass(t.domNode, "visible"), e || (g.addClass(t.domNode, "noanimation"), window.setTimeout(function () {
                    g.removeClass(t.domNode, "noanimation")
                }, 200))
            }, 0), this.codeEditor.layoutOverlayWidget(this))
        }, t.prototype.hide = function (e) {
            this.isVisible && (this.findInput.disable(), g.removeClass(this.domNode, "visible"), this.isVisible = !1, e && this.codeEditor.focus(), this.codeEditor.layoutOverlayWidget(this))
        }, t.prototype.getPosition = function () {
            return this.isVisible ? {preference: _.OverlayWidgetPositionPreference.TOP_RIGHT_CORNER} : null
        }, t.ID = "editor.contrib.findWidget", t.USER_CLOSED_EVENT = "close", t.USER_INPUT_EVENT = "userInputEvent", t.WIDGET_WIDTH = 317, t.PART_WIDTH = 300, t.FIND_INPUT_AREA_WIDTH = t.PART_WIDTH - 54, t.REPLACE_INPUT_AREA_WIDTH = t.PART_WIDTH - 112, t
    }(w.EventEmitter);
    t.FindWidget = S
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/find/find", ["require", "exports", "vs/base/lib/winjs.base", "vs/platform/platform", "vs/platform/actionRegistry", "vs/editor/editorExtensions", "./findWidget", "./findModel", "vs/nls!vs/editor/editor.main", "vs/editor/core/constants"], function (e, t, n, i, o, r, s, a, u, l) {
    "use strict";
    var d = n, c = i, h = o, p = r, f = s, g = a, m = u, v = l, y = function () {
        function e(e) {
            var t = this;
            this.editor = e, this.handlerService = null, this.binding = null, this.model = null, this.widget = null, this.widgetIsVisible = !1, this.lastState = null, this.widgetListeners = [], this.editorListeners = [], this.editorListeners.push(this.editor.addListener(v.EventType.ModelChanged, function () {
                t.disposeBindingAndModel(), t.editor.getModel() && t.lastState && t.widgetIsVisible && t._start(t.lastState.isReplaceEnabled, !1, !1)
            })), this.editorListeners.push(this.editor.addListener(v.EventType.Disposed, function () {
                t.editorListeners.forEach(function (e) {
                    e()
                }), t.editorListeners = []
            }))
        }

        return e.getFindController = function (t) {
            return t.getContribution(e.ID)
        }, e.prototype.injectHandlerService = function (e) {
            this.handlerService = e
        }, e.prototype.getId = function () {
            return e.ID
        }, e.prototype.dispose = function () {
            this.widgetListeners.forEach(function (e) {
                e()
            }), this.widgetListeners = [], this.widget && (this.widget.destroy(), this.widget = null), this.disposeBindingAndModel()
        }, e.prototype.disposeBindingAndModel = function () {
            this.binding && (this.binding.dispose(), this.binding = null), this.widget && this.widget.setModel(null), this.model && (this.model.destroy(), this.model = null)
        }, e.prototype.onEscape = function () {
            return this.widgetIsVisible = !1, this.disposeBindingAndModel(), !0
        }, e.prototype.onWidgetClosed = function () {
            this.widgetIsVisible = !1, this.disposeBindingAndModel()
        }, e.prototype.onWidgetUserInput = function () {
            this.lastState = this.widget.getState(), this.model && this.model.update(this.lastState, !0)
        }, e.prototype._start = function (e, t, n) {
            var i = this;
            this.widget || (this.widget = new f.FindWidget(this.editor), this.widgetListeners.push(this.widget.addListener(f.FindWidget.USER_INPUT_EVENT, function () {
                return i.onWidgetUserInput()
            })), this.widgetListeners.push(this.widget.addListener(f.FindWidget.USER_CLOSED_EVENT, function () {
                return i.onWidgetClosed()
            }))), this.model || (this.model = new g.FindModelBoundToEditorModel(this.editor), this.widget.setModel(this.model)), null === this.binding && (this.binding = this.handlerService.bind({key: "Escape"}, function () {
                return i.onEscape()
            })), this.lastState = this.lastState || this.widget.getState();
            var o = this.editor.getSelection();
            t && !o.isEmpty() && o.startLineNumber === o.endLineNumber && (this.lastState.searchString = this.editor.getModel().getValueInRange(o)), e && (this.lastState.isReplaceEnabled = e), this.model.start(this.lastState, n), this.widgetIsVisible = !0
        }, e.prototype.start = function (e) {
            this._start(e, !0, !0)
        }, e.prototype.next = function () {
            return this.model ? (this.model.next(), !0) : !1
        }, e.prototype.prev = function () {
            return this.model ? (this.model.prev(), !0) : !1
        }, e.prototype.replace = function () {
            return this.model ? (this.model.replace(), !0) : !1
        }, e.prototype.replaceAll = function () {
            return this.model ? (this.model.replaceAll(), !0) : !1
        }, e.ID = "editor.contrib.findController", e
    }();
    t.FindController = y;
    var b = function (e) {
        function t(t, n) {
            e.call(this, t, n, p.Precondition.WidgetFocus), this.handlerService = null
        }

        return __extends(t, e), t.prototype.getEnablementState = function () {
            return e.prototype.getEnablementState.call(this) && !!this.handlerService
        }, t.prototype._startController = function (e) {
            e.start(!1)
        }, t.prototype.run = function () {
            var e = y.getFindController(this.editor);
            return this._startController(e), d.TPromise.as(!0)
        }, t
    }(p.EditorAction);
    t.StartFindAction = b;
    var C = function (e) {
        function t(t, n) {
            e.call(this, t, n, p.Precondition.WidgetFocus)
        }

        return __extends(t, e), t.prototype.run = function () {
            var e = y.getFindController(this.editor);
            return e.next() ? d.TPromise.as(!0) : this.editor.getAction(g.START_FIND_ID).run()
        }, t
    }(p.EditorAction);
    t.NextMatchFindAction = C;
    var E = function (e) {
        function t(t, n) {
            e.call(this, t, n, p.Precondition.WidgetFocus)
        }

        return __extends(t, e), t.prototype.run = function () {
            var e = y.getFindController(this.editor);
            return e.prev() ? d.TPromise.as(!0) : this.editor.getAction(g.START_FIND_ID).run()
        }, t
    }(p.EditorAction);
    t.PreviousMatchFindAction = E;
    var w = function (e) {
        function t(t, n) {
            e.call(this, t, n)
        }

        return __extends(t, e), t.prototype.getId = function () {
            return g.START_FIND_REPLACE_ID
        }, t.prototype._startController = function (e) {
            e.start(!0)
        }, t
    }(b);
    t.StartFindReplaceAction = w;
    var _ = function (e) {
        function t(t, n) {
            e.call(this, t, n, p.Precondition.WidgetFocus), this.label = m.localize("vs_editor_contrib_find_find", 0)
        }

        return __extends(t, e), t.prototype.run = function () {
            var e = y.getFindController(this.editor);
            return e.replace() ? d.TPromise.as(!0) : d.TPromise.as(!1)
        }, t
    }(p.EditorAction);
    t.ReplaceAction = _;
    var S = function (e) {
        function t(t, n) {
            e.call(this, t, n, p.Precondition.WidgetFocus), this.label = m.localize("vs_editor_contrib_find_find", 1)
        }

        return __extends(t, e), t.prototype.run = function () {
            var e = y.getFindController(this.editor);
            return e.replaceAll() ? d.TPromise.as(!0) : d.TPromise.as(!1)
        }, t
    }(p.EditorAction);
    t.ReplaceAllAction = S;
    var T = c.Registry.as(p.Extensions.EditorContributions);
    T.registerEditorContribution(new h.ActionDescriptor(b, g.START_FIND_ID, m.localize("vs_editor_contrib_find_find", 2), {ctrlCmd: !0, key: "F"}, {ctrlCmd: !0, key: "F3"})), T.registerEditorContribution(new h.ActionDescriptor(C, g.NEXT_MATCH_FIND_ID, m.localize("vs_editor_contrib_find_find", 3), {key: "F3"})), T.registerEditorContribution(new h.ActionDescriptor(E, g.PREVIOUS_MATCH_FIND_ID, m.localize("vs_editor_contrib_find_find", 4), {shift: !0, key: "F3"})), T.registerEditorContribution(new h.ActionDescriptor(w, g.START_FIND_REPLACE_ID, m.localize("vs_editor_contrib_find_find", 5), {ctrlCmd: !0, key: "H"})), T.registerEditorContribution(new h.ActionDescriptor(_, g.REPLACE_ID, m.localize("vs_editor_contrib_find_find", 6))), T.registerEditorContribution(new h.ActionDescriptor(S, g.REPLACE_ALL_ID, m.localize("vs_editor_contrib_find_find", 7))), T.registerEditorContribution(new c.BaseDescriptor(y))
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/format/format", ["require", "exports", "vs/base/lib/winjs.base", "vs/base/types", "vs/platform/platform", "vs/platform/actionRegistry", "vs/editor/core/range", "vs/editor/core/constants", "vs/nls!vs/editor/editor.main", "vs/editor/editorExtensions", "vs/editor/core/command/replaceCommand"], function (e, t, n, i, o, r, s, a, u, l, d) {
    "use strict";
    var c = n, h = i, p = o, f = r, g = s, m = a, v = u, y = l, b = d, C = function () {
        function e(e) {
            var t = this;
            this.editor = e, this.callOnDispose = [], this.callOnModel = [], this.callOnDispose.push(e.addListener(m.EventType.ConfigurationChanged, function () {
                return t.update()
            })), this.callOnDispose.push(e.addListener(m.EventType.ModelChanged, function () {
                return t.update()
            })), this.callOnDispose.push(e.addListener(m.EventType.ModelModeChanged, function () {
                return t.update()
            }))
        }

        return e.prototype.update = function () {
            for (var e = this; this.callOnModel.length > 0;)this.callOnModel.pop()();
            if (this.editor.getConfiguration().formatOnType && !h.isUndefinedOrNull(this.editor.getModel())) {
                var t = this.editor.getModel(), n = t.getMode();
                !h.isUndefinedOrNull(n.formattingSupport) && h.isFunction(n.formattingSupport.getAutoFormatTriggerCharacters) && h.isFunction(n.formattingSupport.formatAfterKeystroke) && (this.formattingOptions = {tabSize: this.editor.getConfiguration().tabSize, insertSpaces: this.editor.getConfiguration().insertSpaces}, n.formattingSupport.getAutoFormatTriggerCharacters().forEach(function (t) {
                    e.callOnModel.push(e.editor.addTypingListener(t, function () {
                        return e.trigger()
                    }))
                }))
            }
        }, e.prototype.trigger = function () {
            var e = this, t = this.editor.getModel(), n = this.editor.getPosition().lineNumber, i = new g.Range(n, 1, n, t.getLineMaxColumn(n)), o = {range: i, id: t.addTrackedRange(i), lineText: t.getLineContent(n)}, r = new c.TPromise(function (n, i, r) {
                t.getMode().formattingSupport.formatAfterKeystroke(t.getAssociatedResource(), e.editor.getPosition(), e.formattingOptions).then(function (e) {
                    var i = t.getTrackedRange(o.id);
                    if (t.removeTrackedRange(o.id), !h.isUndefinedOrNull(e)) {
                        var r = t.getValueInRange(i);
                        o.lineText === r && e.text !== r && e.range.startLineNumber === e.range.endLineNumber && (o.lineText = e.text, o.range = i, n(o))
                    }
                }, i, r)
            });
            r.then(function (t) {
                var n = new g.Range(t.range.startLineNumber, t.range.startColumn, t.range.endLineNumber, t.range.endColumn), i = e.editor.getSelection(), o = new b.ReplaceCommandThatPreservesSelection(n, t.lineText, i);
                e.editor.executeCommand(e.getId(), o)
            }, function () {
            })
        }, e.prototype.getId = function () {
            return e.ID
        }, e.prototype.dispose = function () {
            for (; this.callOnDispose.length > 0;)this.callOnDispose.pop()();
            for (; this.callOnModel.length > 0;)this.callOnModel.pop()()
        }, e.ID = "editor.contrib.autoFormat", e
    }(), E = function (e) {
        function t(t, n) {
            e.call(this, t, n)
        }

        return __extends(t, e), t.prototype.getEnablementState = function () {
            return e.prototype.getEnablementState.call(this) && !!this.editor.getModel().getMode().formattingSupport
        }, t.prototype.run = function () {
            var e = this, t = this.editor.getModel();
            t.getMode();
            var n = t.getMode().formattingSupport, i = this.editor.getPosition(), o = this.editor.getSelection();
            o.isEmpty() || (o.startColumn = 1);
            var r = o;
            o.isEmpty() && (r = new g.Range(1, 1, t.getLineCount(), t.getLineMaxColumn(t.getLineCount())));
            var s = {tabSize: this.editor.getConfiguration().tabSize, insertSpaces: this.editor.getConfiguration().insertSpaces};
            return n.format(t.getAssociatedResource(), r, s).then(function (t) {
                return h.isString(t) ? (e.apply(e.editor, i, o, t), e.editor.focus(), !0) : !1
            })
        }, t.prototype.apply = function (e, t, n, i) {
            if (n.isEmpty()) {
                if (e.getModel().getValue() === i)return;
                var o = e.getModel().getLineCount(), r = e.getModel().getLineMaxColumn(o), s = new b.ReplaceCommand(new g.Range(1, 1, o, r), i);
                e.executeCommand(this.id, s), e.setSelection(n)
            } else {
                var a = new b.ReplaceCommandThatPreservesSelection(n, i, n);
                e.executeCommand(this.id, a)
            }
        }, t.ID = "editor.actions.format", t
    }(y.EditorAction);
    t.FormatAction = E;
    var w = new f.ActionDescriptor(E, E.ID, v.localize("vs_editor_contrib_format_format", 0), {ctrlCmd: !0, alt: !0, key: "F"}), _ = p.Registry.as(y.Extensions.EditorContributions);
    _.registerEditorContribution(w), _.registerEditorContribution(new p.BaseDescriptor(C))
}), define("vs/editor/contrib/hover/hoverOperation", ["require", "exports", "vs/base/time/schedulers", "vs/base/errors"], function (e, t, n, i) {
    "use strict";
    var o, r = n, s = i;
    !function (e) {
        e[e.IDLE = 0] = "IDLE", e[e.FIRST_WAIT = 1] = "FIRST_WAIT", e[e.SECOND_WAIT = 2] = "SECOND_WAIT", e[e.WAITING_FOR_ASYNC_COMPUTATION = 3] = "WAITING_FOR_ASYNC_COMPUTATION"
    }(o || (o = {}));
    var a = function () {
        function e(e, t, n, i) {
            var s = this;
            this._computer = e, this._state = o.IDLE, this._firstWaitScheduler = new r.RunOnceScheduler(function () {
                return s._triggerAsyncComputation()
            }, this._getHoverTimeMillis() / 2), this._secondWaitScheduler = new r.RunOnceScheduler(function () {
                return s._triggerSyncComputation()
            }, this._getHoverTimeMillis() / 2), this._asyncComputationPromise = null, this._asyncComputationPromiseDone = !1, this._completeCallback = t, this._errorCallback = n, this._progressCallback = i
        }

        return e.prototype.getComputer = function () {
            return this._computer
        }, e.prototype._getHoverTimeMillis = function () {
            return this._computer.getHoverTimeMillis ? this._computer.getHoverTimeMillis() : e.HOVER_TIME
        }, e.prototype._triggerAsyncComputation = function () {
            var e = this;
            this._state = o.SECOND_WAIT, this._secondWaitScheduler.schedule(), this._computer.computeAsync ? (this._asyncComputationPromiseDone = !1, this._asyncComputationPromise = this._computer.computeAsync(), this._asyncComputationPromise.then(function (t) {
                e._asyncComputationPromiseDone = !0, e._withAsyncResult(t)
            }).done(null, function () {
                return e._onError
            })) : this._asyncComputationPromiseDone = !0
        }, e.prototype._triggerSyncComputation = function () {
            this._computer.computeSync && this._computer.onResult(this._computer.computeSync(), !0), this._asyncComputationPromiseDone ? (this._state = o.IDLE, this._onComplete(this._computer.getResult())) : (this._state = o.WAITING_FOR_ASYNC_COMPUTATION, this._onProgress(this._computer.getResult()))
        }, e.prototype._withAsyncResult = function (e) {
            e && this._computer.onResult(e, !1), this._state === o.WAITING_FOR_ASYNC_COMPUTATION && (this._state = o.IDLE, this._onComplete(this._computer.getResult()))
        }, e.prototype._onComplete = function (e) {
            this._completeCallback && this._completeCallback(e)
        }, e.prototype._onError = function (e) {
            this._errorCallback ? this._errorCallback(e) : s.onUnexpectedError(e)
        }, e.prototype._onProgress = function (e) {
            this._progressCallback && this._progressCallback(e)
        }, e.prototype.start = function () {
            this._state === o.IDLE && (this._state = o.FIRST_WAIT, this._firstWaitScheduler.schedule())
        }, e.prototype.cancel = function () {
            this._state === o.FIRST_WAIT && this._firstWaitScheduler.cancel(), this._state === o.SECOND_WAIT && (this._secondWaitScheduler.cancel(), this._asyncComputationPromise && this._asyncComputationPromise.cancel()), this._state === o.WAITING_FOR_ASYNC_COMPUTATION && this._asyncComputationPromise && this._asyncComputationPromise.cancel(), this._state = o.IDLE
        }, e.HOVER_TIME = 300, e
    }();
    t.HoverOperation = a
}), define("vs/editor/contrib/hover/hoverWidgets", ["require", "exports", "vs/editor/editor", "vs/editor/core/position"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function () {
        function e(e, t) {
            this._id = e, this._editor = t, this._isVisible = !1, this.containerDomNode = document.createElement("div"), this.containerDomNode.className = "monaco-editor-hover monaco-editor-background", this.containerDomNode.style.display = "none", this._domNode = document.createElement("div"), this._domNode.style.display = "inline-block", this.containerDomNode.appendChild(this._domNode), this._editor.addContentWidget(this), this._showAtPosition = null
        }

        return e.prototype.getId = function () {
            return this._id
        }, e.prototype.getDomNode = function () {
            return this.containerDomNode
        }, e.prototype.showAt = function (e) {
            this._showAtPosition = new r.Position(e.lineNumber, e.column), this._isVisible || (this._isVisible = !0, this.containerDomNode.style.display = "block");
            var t = parseInt(this.containerDomNode.style.maxWidth, 10);
            this.containerDomNode.style.width = t + "px", this.containerDomNode.style.height = "", this.containerDomNode.style.left = "0px";
            var n = Math.min(t, this._domNode.clientWidth + 5), i = this._domNode.clientHeight + 1;
            this.containerDomNode.style.width = n + "px", this.containerDomNode.style.height = i + "px", this._editor.layoutContentWidget(this)
        }, e.prototype.hide = function () {
            this._isVisible && (this._isVisible = !1, this.containerDomNode.style.display = "none", this._editor.layoutContentWidget(this))
        }, e.prototype.getPosition = function () {
            return this._isVisible ? {position: this._showAtPosition, preference: [o.ContentWidgetPositionPreference.ABOVE, o.ContentWidgetPositionPreference.BELOW]} : null
        }, e.prototype.dispose = function () {
            this.hide()
        }, e
    }();
    t.ContentHoverWidget = s;
    var a = function () {
        function e(e, t) {
            this._id = e, this._editor = t, this._isVisible = !1, this._domNode = document.createElement("div"), this._domNode.className = "monaco-editor-hover monaco-editor-background", this._domNode.style.display = "none", this._showAtLineNumber = -1, this._editor.addOverlayWidget(this)
        }

        return e.prototype.getId = function () {
            return this._id
        }, e.prototype.getDomNode = function () {
            return this._domNode
        }, e.prototype.showAt = function (e) {
            this._showAtLineNumber = e, this._isVisible || (this._isVisible = !0, this._domNode.style.display = "block");
            var t = this._editor.getLayoutInfo(), n = this._editor.getTopForLineNumber(this._showAtLineNumber), i = this._editor.getScrollTop();
            this._domNode.style.left = t.glyphMarginLeft + t.glyphMarginWidth + "px", this._domNode.style.top = n - i + "px"
        }, e.prototype.hide = function () {
            this._isVisible && (this._isVisible = !1, this._domNode.style.display = "none")
        }, e.prototype.getPosition = function () {
            return null
        }, e.prototype.dispose = function () {
            this.hide()
        }, e
    }();
    t.GlyphHoverWidget = a
}), define("vs/base/dom/htmlContent", ["require", "exports"], function (e, t) {
    "use strict";
    function n(e) {
        if (e.isText)return document.createTextNode(e.text);
        var n = e.tagName || "div", i = document.createElement(n);
        return e.className && (i.className = e.className), e.text && (i.textContent = e.text), e.style && i.setAttribute("style", e.style), e.customStyle && Object.keys(e.customStyle).forEach(function (t) {
            i.style[t] = e.customStyle[t]
        }), e.children && e.children.forEach(function (e) {
            i.appendChild(t.renderHtml(e))
        }), i
    }

    t.renderHtml = n
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/hover/modesContentHover", ["require", "exports", "vs/editor/core/range", "vs/base/lib/winjs.base", "vs/editor/contrib/hover/hoverOperation", "vs/editor/contrib/hover/hoverWidgets", "vs/base/dom/htmlContent"], function (e, t, n, i, o, r, s) {
    "use strict";
    var a = n, u = i, l = o, d = r, c = s, h = function () {
        function e(e) {
            this._editor = e, this._range = null
        }

        return e.prototype.setRange = function (e) {
            this._range = e, this._result = []
        }, e.prototype.computeAsync = function () {
            var e = this._editor.getModel().getMode(), t = e.extraInfoSupport;
            return t ? t.computeInfo(this._editor.getModel().getAssociatedResource(), {lineNumber: this._range.startLineNumber, column: this._range.startColumn}).then(function (e) {
                if (e) {
                    var t = "undefined" != typeof e.range, n = "undefined" != typeof e.value, i = "undefined" != typeof e.htmlContent && e.htmlContent && e.htmlContent.length > 0;
                    if (t && (n || i))return[e]
                }
                return null
            }) : u.TPromise.as(null)
        }, e.prototype.computeSync = function () {
            var e = this, t = this._range.startLineNumber, n = this._editor.getLineDecorations(t), i = this._editor.getModel().getLineMaxColumn(t), o = [];
            return n.forEach(function (n) {
                var r = n.range.startLineNumber === t ? n.range.startColumn : 1, s = n.range.endLineNumber === t ? n.range.endColumn : i;
                if (r <= e._range.startColumn && e._range.endColumn <= s && (n.options.hoverMessage || n.options.htmlMessage && n.options.htmlMessage.length > 0)) {
                    var u = {value: n.options.hoverMessage, range: new a.Range(e._range.startLineNumber, r, e._range.startLineNumber, s)};
                    n.options.htmlMessage && (u.htmlContent = n.options.htmlMessage), o.push(u)
                }
            }), o
        }, e.prototype.onResult = function (e, t) {
            this._result = t ? e.concat(this._result) : this._result.concat(e)
        }, e.prototype.getResult = function () {
            return this._result.slice(0)
        }, e
    }(), p = function (e) {
        function t(n) {
            var i = this;
            e.call(this, t.ID, n), this._computer = new h(this._editor), this._hoverOperation = new l.HoverOperation(this._computer, function (e) {
                return i._withResult(e)
            }, null, function (e) {
                return i._withResult(e)
            })
        }

        return __extends(t, e), t.prototype.startShowingAt = function (e) {
            if (!this._lastRange || !this._lastRange.equalsRange(e)) {
                if (this._hoverOperation.cancel(), this._isVisible)if (this._showAtPosition.lineNumber !== e.startLineNumber)this.hide(); else {
                    for (var t = [], n = 0, i = this._messages.length; i > n; n++) {
                        var o = this._messages[n], r = o.range;
                        r.startColumn <= e.startColumn && r.endColumn >= e.endColumn && t.push(o)
                    }
                    t.length > 0 ? this._renderMessages(e, t) : this.hide()
                }
                this._lastRange = e, this._computer.setRange(e), this._hoverOperation.start()
            }
        }, t.prototype.hide = function () {
            this._lastRange = null, this._hoverOperation.cancel(), e.prototype.hide.call(this)
        }, t.prototype._withResult = function (e) {
            this._messages = e, this._messages.length > 0 ? this._renderMessages(this._lastRange, this._messages) : this.hide()
        }, t.prototype._renderMessages = function (e, t) {
            var n = Number.MAX_VALUE, i = document.createDocumentFragment();
            t.forEach(function (e) {
                n = Math.min(n, e.range.startColumn);
                var t = document.createElement("div"), o = null, r = t;
                e.className && (o = document.createElement("span"), o.className = e.className, r = o, t.appendChild(o)), e.htmlContent && e.htmlContent.length > 0 ? e.htmlContent.forEach(function (e) {
                    r.appendChild(c.renderHtml(e))
                }) : r.textContent = e.value, i.appendChild(t)
            }), this._domNode.textContent = "", this._domNode.appendChild(i), this.showAt({lineNumber: e.startLineNumber, column: n})
        }, t.ID = "editor.contrib.modesContentHoverWidget", t
    }(d.ContentHoverWidget);
    t.ModesContentHoverWidget = p
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/hover/modesGlyphHover", ["require", "exports", "vs/editor/contrib/hover/hoverOperation", "vs/editor/contrib/hover/hoverWidgets"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function () {
        function e(e) {
            this._editor = e, this._lineNumber = -1
        }

        return e.prototype.setLineNumber = function (e) {
            this._lineNumber = e, this._result = []
        }, e.prototype.computeSync = function () {
            var e, t, n, i = [], o = this._editor.getLineDecorations(this._lineNumber);
            for (e = 0, t = o.length; t > e; e++)n = o[e], n.options.glyphMarginClassName && n.options.hoverMessage && i.push({value: n.options.hoverMessage});
            return i
        }, e.prototype.onResult = function (e) {
            this._result = this._result.concat(e)
        }, e.prototype.getResult = function () {
            return this._result
        }, e
    }(), a = function (e) {
        function t(n) {
            var i = this;
            e.call(this, t.ID, n), -1 === this._lastLineNumber, this._computer = new s(this._editor), this._hoverOperation = new o.HoverOperation(this._computer, function (e) {
                return i._withResult(e)
            }, null, function (e) {
                return i._withResult(e)
            })
        }

        return __extends(t, e), t.prototype.startShowingAt = function (e) {
            this._lastLineNumber !== e && (this._hoverOperation.cancel(), this.hide(), this._lastLineNumber = e, this._computer.setLineNumber(e), this._hoverOperation.start())
        }, t.prototype.hide = function () {
            this._lastLineNumber = -1, this._hoverOperation.cancel(), e.prototype.hide.call(this)
        }, t.prototype._withResult = function (e) {
            this._messages = e, this._messages.length > 0 ? this._renderMessages(this._lastLineNumber, this._messages) : this.hide()
        }, t.prototype._renderMessages = function (e, t) {
            var n = document.createDocumentFragment();
            t.forEach(function (e) {
                var t = document.createElement("div"), i = null;
                e.className ? (i = document.createElement("span"), i.textContent = e.value, i.className = e.className, t.appendChild(i)) : t.textContent = e.value, n.appendChild(t)
            }), this._domNode.textContent = "", this._domNode.appendChild(n), this.showAt(e)
        }, t.ID = "editor.contrib.modesGlyphHoverWidget", t
    }(r.GlyphHoverWidget);
    t.ModesGlyphHoverWidget = a
}), define("vs/css!vs/editor/contrib/hover/hover", ["vs/css!vs/editor/editor.main"], {}), define("vs/editor/contrib/hover/hover", ["require", "exports", "vs/editor/core/constants", "vs/platform/platform", "vs/editor/editorExtensions", "vs/editor/editor", "vs/base/env", "vs/editor/contrib/hover/modesContentHover", "vs/editor/contrib/hover/modesGlyphHover", "vs/css!./hover"], function (e, t, n, i, o, r, s, a, u) {
    "use strict";
    var l = n, d = i, c = o, h = r, p = s, f = a, g = u, m = function () {
        function e(e) {
            var t = this;
            this._editor = e, this._toUnhook = [], e.getConfiguration().hover && (this._toUnhook.push(this._editor.addListener(l.EventType.MouseMove, function (e) {
                return t._onEditorMouseMove(e)
            })), this._toUnhook.push(this._editor.addListener(l.EventType.MouseLeave, function () {
                return t._hideWidgets()
            })), this._toUnhook.push(this._editor.addListener(l.EventType.KeyDown, function (e) {
                return t._onKeyDown(e)
            })), this._toUnhook.push(this._editor.addListener(l.EventType.ModelChanged, function () {
                return t._hideWidgets()
            })), this._toUnhook.push(this._editor.addListener("scroll", function () {
                return t._hideWidgets()
            })), this._contentWidget = new f.ModesContentHoverWidget(e), this._glyphWidget = new g.ModesGlyphHoverWidget(e))
        }

        return e.prototype._onEditorMouseMove = function (e) {
            var t = e.target.type, n = p.browser.isMacintosh ? "metaKey" : "ctrlKey";
            (t !== h.MouseTargetType.CONTENT_WIDGET || e.target.detail !== f.ModesContentHoverWidget.ID || e.event[n]) && (t !== h.MouseTargetType.OVERLAY_WIDGET || e.target.detail !== g.ModesGlyphHoverWidget.ID || e.event[n]) && (t === h.MouseTargetType.CONTENT_TEXT ? (this._glyphWidget.hide(), this._contentWidget.startShowingAt(e.target.range)) : t === h.MouseTargetType.GUTTER_GLYPH_MARGIN ? (this._contentWidget.hide(), this._glyphWidget.startShowingAt(e.target.position.lineNumber)) : this._hideWidgets())
        }, e.prototype._onKeyDown = function (e) {
            var t = p.browser.isMacintosh ? "Meta" : "Ctrl";
            e.key !== t && this._hideWidgets()
        }, e.prototype._hideWidgets = function () {
            this._glyphWidget.hide(), this._contentWidget.hide()
        }, e.prototype.getId = function () {
            return e.ID
        }, e.prototype.dispose = function () {
            for (this._glyphWidget && (this._glyphWidget.dispose(), this._glyphWidget = null), this._contentWidget && (this._contentWidget.dispose(), this._contentWidget = null); this._toUnhook.length > 0;)this._toUnhook.pop()()
        }, e.ID = "editor.contrib.hover", e
    }(), v = d.Registry.as(c.Extensions.EditorContributions);
    v.registerEditorContribution(new d.BaseDescriptor(m))
}), define("vs/editor/core/editorState", ["require", "exports"], function (e, t) {
    "use strict";
    function n(e) {
        for (var t = [], n = 0; n < arguments.length - 1; n++)t[n] = arguments[n + 1];
        return new o(e, t)
    }

    !function (e) {
        e[e.Value = 0] = "Value", e[e.Selection = 1] = "Selection", e[e.Position = 2] = "Position"
    }(t.Flag || (t.Flag = {}));
    var i = t.Flag;
    t.capture = n;
    var o = function () {
        function e(e, t) {
            var n = this;
            this.editor = e, t.forEach(function (e) {
                switch (e) {
                    case i.Value:
                        n.modelVersionId = n.editor.getModel().getVersionId();
                        break;
                    case i.Position:
                        n.position = n.editor.getPosition();
                        break;
                    case i.Selection:
                        n.selection = n.editor.getSelection()
                }
            })
        }

        return e.prototype.validate = function () {
            return this.position && !this.position.equals(this.editor.getPosition()) ? !1 : this.selection && !this.selection.equalsRange(this.editor.getSelection()) ? !1 : this.modelVersionId ? !!this.editor.getModel() && this.modelVersionId === this.editor.getModel().getVersionId() : !0
        }, e
    }()
}), define("vs/css!vs/editor/contrib/rename/rename", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/rename/rename", ["require", "exports", "vs/base/lib/winjs.base", "vs/nls!vs/editor/editor.main", "vs/platform/platform", "vs/platform/actionRegistry", "vs/editor/editorExtensions", "vs/platform/services", "vs/editor/core/range", "vs/editor/core/editorState", "vs/editor/core/constants", "vs/css!./rename"], function (e, t, n, i, o, r, s, a, u, l, d) {
    "use strict";
    var c = n, h = i, p = o, f = r, g = s, m = a, v = u, y = l, b = d, C = function () {
        function e(e, t, n, i) {
            var o = this;
            this.editor = e, this.isDisposed = !1, this.editor.changeDecorations(function (e) {
                o.decorations = [];
                for (var i = 0, r = t.length; r > i; i++) {
                    var s = "linked-editing-placeholder";
                    o.decorations.push(e.addDecoration(n[i], {className: s}))
                }
            }), this.editor.setSelections(t), this.listenersToRemove = [], this.listenersToRemove.push(this.editor.addListener(b.EventType.CursorPositionChanged, function (e) {
                if (!o.isDisposed) {
                    var t = 1 + e.secondaryPositions.length;
                    t !== o.decorations.length && o.dispose()
                }
            })), this.binding = i.bindGroup(function (e) {
                e({key: "Enter"}, function () {
                    return o.onEnterOrEscape()
                }), e({key: "Escape"}, function () {
                    return o.onEnterOrEscape()
                })
            })
        }

        return e.prototype.onEnterOrEscape = function () {
            return this.isDisposed ? void 0 : (this.editor.setSelection(this.editor.getSelection()), this.dispose(), !0)
        }, e.prototype.dispose = function () {
            this.isDisposed || (this.isDisposed = !0, this.decorations = this.editor.deltaDecorations(this.decorations, []), this.binding.dispose(), this.listenersToRemove.forEach(function (e) {
                e()
            }), this.listenersToRemove = [])
        }, e
    }(), E = function (e) {
        function t(t, n) {
            e.call(this, t, n), this.idPool = 0
        }

        return __extends(t, e), t.prototype.injectMessageService = function (e) {
            this.messageService = e
        }, t.prototype.computeInfos = function () {
            return c.Promise.as([])
        }, t.prototype.getEnablementState = function () {
            return e.prototype.getEnablementState.call(this) && !!this.messageService
        }, t.prototype.run = function () {
            var e = this, t = ++this.idPool, n = y.capture(this.editor, y.Flag.Position, y.Flag.Value), i = this.editor.getSelection();
            return this.computeInfos(this.editor).then(function (o) {
                if (t === e.idPool && n.validate() && 0 !== o.length) {
                    var r = o.map(function (e) {
                        return e.range
                    });
                    e._beginLinkedEditing(r, i)
                }
            }, function (t) {
                e.messageService.show(m.Severity.Info, t)
            })
        }, t.prototype._indexOf = function (e, t, n) {
            for (var i = {lineNumber: t, column: n}, o = 0; o < e.length; o++)if (e[o].startLineNumber === t && v.RangeUtils.containsPosition(e[o], i))return o;
            return-1
        }, t.prototype._beginLinkedEditing = function (e, t) {
            var n = this.editor.getSelection(), i = this._indexOf(e, n.positionLineNumber, n.positionColumn);
            if (-1 !== i || (n = t, i = this._indexOf(e, n.positionLineNumber, n.positionColumn), -1 !== i)) {
                var o = !1;
                n.isEmpty() || v.RangeUtils.containsPosition(e[i], {lineNumber: n.selectionStartLineNumber, column: n.selectionStartColumn}) && (o = !0);
                var r, s;
                o ? (r = n.positionColumn - e[i].startColumn, s = n.selectionStartColumn - e[i].startColumn) : (r = e[i].endColumn - e[i].startColumn, s = 0);
                var a = [];
                a.push({selectionStartLineNumber: e[i].startLineNumber, selectionStartColumn: e[i].startColumn + s, positionLineNumber: e[i].startLineNumber, positionColumn: e[i].startColumn + r});
                for (var u = 0; u < e.length; u++)u !== i && a.push({selectionStartLineNumber: e[u].startLineNumber, selectionStartColumn: e[u].startColumn + s, positionLineNumber: e[u].startLineNumber, positionColumn: e[u].startColumn + r});
                new C(this.editor, a, e, this.handlerService)
            }
        }, t
    }(g.EditorAction);
    t.LinkedEditing = E;
    var w = function (e) {
        function t(t, n) {
            e.call(this, t, n)
        }

        return __extends(t, e), t.prototype.getEnablementState = function () {
            return e.prototype.getEnablementState.call(this) && !!this.editor.getModel().getMode().occurrencesSupport
        }, t.prototype.computeInfos = function (e) {
            var t = e.getSelection(), n = t.getStartPosition(), i = e.getModel();
            return this.editor.getModel().getMode().occurrencesSupport.findOccurrences(i.getAssociatedResource(), n)
        }, t.ID = "editor.actions.changeAll", t
    }(E);
    t.ChangeAllAction = w;
    var _ = function (e) {
        function t(t, n) {
            e.call(this, t, n)
        }

        return __extends(t, e), t.prototype.getEnablementState = function () {
            return e.prototype.getEnablementState.call(this) && !!this.editor.getModel().getMode().referenceSupport
        }, t.prototype.computeInfos = function (e) {
            var t = e.getSelection(), n = t.getStartPosition(), i = e.getModel(), o = i.getMode();
            return new c.Promise(function (e, t, r) {
                o.referenceSupport.findReferences(i.getAssociatedResource(), n).then(function (n) {
                    var i, o, r = !1, s = [];
                    for (o = 0; !r && o < n.length; o++) {
                        var a = n[o];
                        if ("undefined" == typeof i)i = a.resourceUrl; else if (i !== a.resourceUrl) {
                            r = !0;
                            break
                        }
                        s.push({kind: null, range: a.range})
                    }
                    r ? t(h.localize("vs_editor_contrib_rename_rename", 0)) : e(s)
                }, t, r)
            })
        }, t.ID = "editor.actions.rename", t
    }(E);
    t.RenameAction = _;
    var S = p.Registry.as(g.Extensions.EditorContributions);
    S.registerEditorContribution(new f.ActionDescriptor(_, _.ID, h.localize("vs_editor_contrib_rename_rename", 1), {key: "F2"}, {ctrlCmd: !0, key: "B"})), S.registerEditorContribution(new f.ActionDescriptor(w, w.ID, h.localize("vs_editor_contrib_rename_rename", 2), {ctrlCmd: !0, alt: !0, key: "B"}, {ctrlCmd: !0, key: "F2"}))
}), define("vs/css!vs/editor/contrib/snippet/snippet", ["vs/css!vs/editor/editor.main"], {}), define("vs/editor/contrib/snippet/snippet", ["require", "exports", "vs/base/strings", "vs/editor/core/range", "vs/editor/core/constants", "vs/editor/core/command/replaceCommand", "vs/editor/core/selection", "vs/css!./snippet"], function (e, t, n, i, o, r, s) {
    "use strict";
    var a = n, u = i, l = o, d = r, c = s, h = function () {
        function e(e) {
            this.lines = [], this.placeHolders = [], this.startPlaceHolderIndex = 0, this.finishPlaceHolderIndex = -1, this.parseTemplate(e)
        }

        return e.prototype.parseTemplate = function (e) {
            var t, n, i, o, r = {}, s = e.split("\n");
            for (t = 0, n = s.length; n > t; t++) {
                var a = this.parseLine(s[t]);
                for (i = 0, o = a.placeHolders.length; o > i; i++) {
                    var l, d = a.placeHolders[i], c = new u.Range(t + 1, d.startColumn, t + 1, d.endColumn);
                    r.hasOwnProperty(d.value) ? l = r[d.value] : (l = {value: d.value, occurences: []}, this.placeHolders.push(l), "" === d.value && (this.finishPlaceHolderIndex = this.placeHolders.length - 1), r[d.value] = l), l.occurences.push(c)
                }
                this.lines.push(a.line)
            }
            this.placeHolders.length > this.startPlaceHolderIndex && "" === this.placeHolders[this.startPlaceHolderIndex].value && this.placeHolders.length > 1 && this.startPlaceHolderIndex++
        }, e.prototype.parseLine = function (e) {
            for (var t, n = "", i = [], o = 0, r = e.length, s = 0; r > o;)if ("{" === e.charAt(o) && r > o + 1 && "{" === e.charAt(o + 1)) {
                for (o += 2, t = ""; r > o;) {
                    if ("}" === e.charAt(o) && r > o + 1 && "}" === e.charAt(o + 1)) {
                        o += 2;
                        break
                    }
                    t += e.charAt(o), o++
                }
                i.push({value: t, startColumn: s + 1, endColumn: s + 1 + t.length}), n += t, s += t.length
            } else n += e.charAt(o), s++, o++;
            return{line: n, placeHolders: i}
        }, e.prototype.extractLineIndentation = function (e, t) {
            "undefined" == typeof t && (t = Number.MAX_VALUE);
            var n = a.getLeadingWhitespace(e);
            return n.length > t - 1 ? n.substring(0, t - 1) : n
        }, e.prototype.bind = function (e, t, n, i) {
            var o, r, s, a, u, l, d, c, h = [], p = [], f = this.extractLineIndentation(e, n + 1), g = [];
            for (u = 0, l = this.lines.length; l > u; u++)o = this.lines[u], 0 === u ? (g[u + 1] = n, h[u] = o) : (r = this.extractLineIndentation(o), s = o.substr(r.length), a = i.normalizeIndentation(f + r), g[u + 1] = a.length - r.length, h[u] = a + s);
            var m, v, y;
            for (u = 0, l = this.placeHolders.length; l > u; u++) {
                for (m = this.placeHolders[u], y = [], d = 0, c = m.occurences.length; c > d; d++)v = m.occurences[d], y.push({startLineNumber: v.startLineNumber + t, startColumn: v.startColumn + g[v.startLineNumber], endLineNumber: v.endLineNumber + t, endColumn: v.endColumn + g[v.endLineNumber]});
                p.push({value: m.value, occurences: y})
            }
            return{lines: h, placeHolders: p, startPlaceHolderIndex: this.startPlaceHolderIndex, finishPlaceHolderIndex: this.finishPlaceHolderIndex}
        }, e
    }();
    t.CodeSnippet = h;
    var p = function () {
        function e(e, t, n, i) {
            this.editor = e, this.handlerService = t, this.finishPlaceHolderIndex = n.finishPlaceHolderIndex, this.trackedPlaceHolders = [], this.placeHolderDecorations = [], this.currentPlaceHolderIndex = n.startPlaceHolderIndex, this.highlightDecorationId = null, this.isFinished = !1, this.binding = null, this.initialize(n, i)
        }

        return e.prototype.initialize = function (e, t) {
            var n, i, o = this, r = this.editor.getModel();
            for (n = 0, i = e.placeHolders.length; i > n; n++) {
                for (var s = e.placeHolders[n], a = [], d = 0, c = s.occurences.length; c > d; d++)a.push(r.addTrackedRange(s.occurences[d]));
                this.trackedPlaceHolders.push({ranges: a})
            }
            this.editor.changeDecorations(function (s) {
                var a = t + e.lines.length - 1, l = o.editor.getModel().getLineMaxColumn(a);
                for (o.highlightDecorationId = s.addDecoration(new u.Range(t, 1, a, l), {className: "new-snippet", isWholeLine: !0}), n = 0, i = o.trackedPlaceHolders.length; i > n; n++) {
                    var d = n === o.finishPlaceHolderIndex ? "finish-snippet-placeholder" : "snippet-placeholder";
                    o.placeHolderDecorations.push(s.addDecoration(r.getTrackedRange(o.trackedPlaceHolders[n].ranges[0]), {className: d}))
                }
            }), this.listenersToRemove = [], this.listenersToRemove.push(this.editor.getModel().addListener(l.EventType.ModelContentChanged, function (e) {
                if (!o.isFinished)if (e.changeType === l.EventType.ModelContentChangedFlush)o.stopAll(); else if (e.changeType === l.EventType.ModelContentChangedLineChanged) {
                    var t = e.lineNumber, n = o.editor.getModel().getDecorationRange(o.highlightDecorationId);
                    (t < n.startLineNumber || t > n.endLineNumber) && o.stopAll()
                } else if (e.changeType === l.EventType.ModelContentChangedLinesInserted) {
                    var i = e.fromLineNumber, n = o.editor.getModel().getDecorationRange(o.highlightDecorationId);
                    (i < n.startLineNumber || i > n.endLineNumber) && o.stopAll()
                } else if (e.changeType === l.EventType.ModelContentChangedLinesDeleted) {
                    var r = e.fromLineNumber, s = e.toLineNumber, n = o.editor.getModel().getDecorationRange(o.highlightDecorationId), a = s < n.startLineNumber, u = r > n.endLineNumber;
                    (a || u) && o.stopAll()
                }
            })), this.listenersToRemove.push(this.editor.addListener(l.EventType.CursorPositionChanged, function (e) {
                if (!o.isFinished) {
                    var t = o.editor.getModel().getDecorationRange(o.highlightDecorationId), n = e.position.lineNumber;
                    (n < t.startLineNumber || n > t.endLineNumber) && o.stopAll()
                }
            })), this.listenersToRemove.push(this.editor.addListener(l.EventType.ModelChanged, function () {
                o.stopAll()
            })), this.listenersToRemove.push(this.editor.getModel().addListener(l.EventType.ModelDecorationsChanged, function () {
                if (!o.isFinished) {
                    for (var e = !0, t = 0; t < o.trackedPlaceHolders.length; t++)for (var n = o.trackedPlaceHolders[t].ranges, i = 0; i < n.length; i++) {
                        var r = o.editor.getModel().getTrackedRange(n[i]);
                        if (!r.isEmpty()) {
                            e = !1;
                            break
                        }
                    }
                    if (e)o.stopAll(); else if (-1 !== o.finishPlaceHolderIndex) {
                        var s = o.placeHolderDecorations[o.finishPlaceHolderIndex], a = o.editor.getModel().getDecorationRange(s), u = o.editor.getModel().getDecorationOptions(s), l = a.isEmpty(), d = "finish-snippet-placeholder" === u.className, c = Number(l) ^ Number(d);
                        c && o.editor.changeDecorations(function (e) {
                            var t = l ? "finish-snippet-placeholder" : "snippet-placeholder";
                            e.changeDecorationOptions(s, {className: t})
                        })
                    }
                }
            })), this.doLinkEditing(), this.registerKeyHandlers()
        }, e.prototype.registerKeyHandlers = function () {
            var e = this;
            this.binding = this.handlerService.bindGroup(function (t) {
                t({key: "Tab"}, function () {
                    return e.onNextPlaceHolder()
                }), t({key: "Shift-Tab"}, function () {
                    return e.onPrevPlaceHolder()
                }), t({key: "Enter"}, function () {
                    return e.onAccept()
                }), t({key: "Escape"}, function () {
                    return e.onEscape()
                })
            })
        }, e.prototype.onNextPlaceHolder = function () {
            return this.isFinished ? !1 : (this.currentPlaceHolderIndex = (this.currentPlaceHolderIndex + 1) % this.trackedPlaceHolders.length, this.doLinkEditing(), !0)
        }, e.prototype.onPrevPlaceHolder = function () {
            return this.isFinished ? !1 : (this.currentPlaceHolderIndex = (this.trackedPlaceHolders.length + this.currentPlaceHolderIndex - 1) % this.trackedPlaceHolders.length, this.doLinkEditing(), !0)
        }, e.prototype.onAccept = function () {
            if (this.isFinished)return!1;
            if (-1 !== this.finishPlaceHolderIndex) {
                var e = this.editor.getModel().getTrackedRange(this.trackedPlaceHolders[this.finishPlaceHolderIndex].ranges[0]);
                this.editor.setPosition({lineNumber: e.endLineNumber, column: e.endColumn})
            }
            return this.stopAll(), !0
        }, e.prototype.onEscape = function () {
            return this.isFinished ? !1 : (this.stopAll(), this.editor.setSelections([this.editor.getSelections()[0]]), !0)
        }, e.prototype.doLinkEditing = function () {
            for (var e = [], t = 0, n = this.trackedPlaceHolders[this.currentPlaceHolderIndex].ranges.length; n > t; t++) {
                var i = this.editor.getModel().getTrackedRange(this.trackedPlaceHolders[this.currentPlaceHolderIndex].ranges[t]);
                e.push({selectionStartLineNumber: i.startLineNumber, selectionStartColumn: i.startColumn, positionLineNumber: i.endLineNumber, positionColumn: i.endColumn})
            }
            this.editor.setSelections(e)
        }, e.prototype.stopAll = function () {
            var e = this;
            if (!this.isFinished) {
                this.isFinished = !0, this.listenersToRemove.forEach(function (e) {
                    e()
                }), this.listenersToRemove = [];
                for (var t = this.editor.getModel(), n = 0; n < this.trackedPlaceHolders.length; n++)for (var i = this.trackedPlaceHolders[n].ranges, o = 0; o < i.length; o++)t.removeTrackedRange(i[o]);
                this.trackedPlaceHolders = [], this.binding.dispose(), this.editor.changeDecorations(function (t) {
                    t.removeDecoration(e.highlightDecorationId);
                    for (var n = 0; n < e.placeHolderDecorations.length; n++)t.removeDecoration(e.placeHolderDecorations[n]);
                    e.placeHolderDecorations = [], e.highlightDecorationId = null
                })
            }
        }, e
    }(), f = function () {
        function e() {
        }

        return e.run = function (t, n, i, o) {
            var r = t.getSelection();
            r.getStartPosition();
            var s = t.getModel(), a = r;
            o && (a = a.plusRange(o));
            var u = i.bind(s.getLineContent(a.startLineNumber), a.startLineNumber - 1, a.startColumn - 1, t), l = u.lines.join("\n"), h = new d.ReplaceCommand(a, l);
            t.executeCommand("editor.contrib.insertSnippetHelper", h);
            var f = e._getSnippetCursorOnly(u);
            f ? t.setSelection(new c.Selection(f.lineNumber, f.column, f.lineNumber, f.column)) : u.placeHolders.length > 0 && new p(t, n, u, a.startLineNumber)
        }, e._getSnippetCursorOnly = function (e) {
            if (1 !== e.placeHolders.length)return null;
            var t = e.placeHolders[0];
            if ("" !== t.value || 1 !== t.occurences.length)return null;
            var n = t.occurences[0];
            return u.RangeUtils.isEmpty(n) ? {lineNumber: n.startLineNumber, column: n.startColumn} : null
        }, e
    }();
    t.InsertSnippetHelper = f
}), define("vs/editor/contrib/comment/blockCommentCommand", ["require", "exports", "vs/editor/core/range", "vs/editor/core/selection"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function () {
        function e(e) {
            this._selection = e, this._usedEndToken = null
        }

        return e.prototype._haystackHasNeedleAtOffset = function (e, t, n) {
            if (0 > n)return!1;
            var i = t.length, o = e.length;
            if (n + i > o)return!1;
            for (var r = 0; i > r; r++)if (e.charCodeAt(n + r) !== t.charCodeAt(r))return!1;
            return!0
        }, e.prototype._createOperationsForBlockComment = function (e, t, n, i) {
            var r = e.startLineNumber, s = e.startColumn, a = e.endLineNumber, u = e.endColumn, l = o.RangeUtils.isEmpty(e), d = t.blockCommentStartToken, c = d.length, h = t.blockCommentEndToken, p = h.length, f = this._haystackHasNeedleAtOffset(n.getLineContent(r), d, s - 1 - c), g = this._haystackHasNeedleAtOffset(n.getLineContent(a), h, u - 1);
            f && g ? l ? i.addEditOperation(new o.Range(r, s - c, a, u + p), null) : (i.addEditOperation(new o.Range(r, s - c, r, s), null), i.addEditOperation(new o.Range(a, u, a, u + p), null)) : l ? (i.addEditOperation(new o.Range(r, s, a, u), d + h), this._usedEndToken = h) : (i.addEditOperation(new o.Range(r, s, r, s), d), i.addEditOperation(new o.Range(a, u, a, u), h))
        }, e.prototype.getEditOperations = function (e, t) {
            var n = this._selection.startLineNumber, i = this._selection.startColumn, o = this._selection.endLineNumber, r = this._selection.endColumn;
            o > n && 1 === r && (o -= 1, r = e.getLineMaxColumn(o));
            var s = e.getModeAtPosition(n, i).commentsSupport;
            if (s) {
                var a = s.getCommentsConfiguration();
                a && a.blockCommentStartToken && a.blockCommentEndToken && this._createOperationsForBlockComment({startLineNumber: n, startColumn: i, endLineNumber: o, endColumn: r}, a, e, t)
            }
        }, e.prototype.computeCursorState = function (e, t) {
            var n = t.getInverseEditOperations();
            if (2 === n.length) {
                var i = n[0], o = n[1];
                return new r.Selection(i.range.endLineNumber, i.range.endColumn, o.range.startLineNumber, o.range.startColumn)
            }
            var s = n[0].range, a = this._usedEndToken ? -this._usedEndToken.length : 0;
            return new r.Selection(s.endLineNumber, s.endColumn + a, s.endLineNumber, s.endColumn + a)
        }, e
    }();
    t.BlockCommentCommand = s
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/comment/lineCommentCommand", ["require", "exports", "vs/editor/contrib/comment/blockCommentCommand", "vs/base/strings", "vs/editor/core/range"], function (e, t, n, i, o) {
    "use strict";
    var r = n, s = i, a = o, u = function (e) {
        function t(t) {
            e.call(this, t), this._hasDelegatedToParent = !1
        }

        return __extends(t, e), t.prototype._hasLineCommentTokensSupportForLines = function (e, t, n) {
            for (var i, o, r = t; n >= r; r++) {
                if (i = e.getModeAtPosition(t, 1).commentsSupport, !i)return!1;
                if (o = i.getCommentsConfiguration(), !o || !o.lineCommentTokens || 0 === o.lineCommentTokens.length)return!1
            }
            return!0
        }, t.prototype.getEditOperations = function (t, n) {
            var i = this._selection;
            this._moveEndPositionDown = !1, i.startLineNumber < i.endLineNumber && 1 === i.endColumn && (this._moveEndPositionDown = !0, i = i.setEndPosition(i.endLineNumber - 1, t.getLineMaxColumn(i.endLineNumber - 1)));
            var o = t.getModeAtPosition(i.startLineNumber, i.startColumn).commentsSupport;
            if (o) {
                if (!this._hasLineCommentTokensSupportForLines(t, i.startLineNumber, i.endLineNumber)) {
                    var r = o.getCommentsConfiguration();
                    if (!r || !r.blockCommentStartToken || !r.blockCommentEndToken)return;
                    var u = r.blockCommentStartToken, l = u.length, d = r.blockCommentEndToken;
                    d.length;
                    var c = t.getLineContent(i.startLineNumber).lastIndexOf(u, i.startColumn - 1), h = t.getLineContent(i.endLineNumber).indexOf(d, i.endColumn - 1);
                    return-1 !== c && -1 !== h ? (i.startColumn = c + l + 1, i.endColumn = h + 1) : (i.startColumn = 1, i.endColumn = t.getLineMaxColumn(i.endLineNumber)), this._hasDelegatedToParent = !0, e.prototype._createOperationsForBlockComment.call(this, i, r, t, n), void 0
                }
                var p, f, g, m, v = !0, y = [], b = [];
                for (m = i.startLineNumber; m <= i.endLineNumber; m++)g = t.getModeAtPosition(m, 1).commentsSupport.getCommentsConfiguration().lineCommentTokens[0], b[m - i.startLineNumber] = g, v && (p = t.getLineContent(m), f = s.firstNonWhitespaceIndex(p), -1 === f ? v = !1 : this._haystackHasNeedleAtOffset(p, g, f) || (v = !1), y[m - i.startLineNumber] = f);
                if (v)for (m = i.startLineNumber; m <= i.endLineNumber; m++)n.addEditOperation(new a.Range(m, y[m - i.startLineNumber] + 1, m, y[m - i.startLineNumber] + 1 + b[m - i.startLineNumber].length), null); else for (m = i.startLineNumber; m <= i.endLineNumber; m++)n.addEditOperation(new a.Range(m, 1, m, 1), b[m - i.startLineNumber]);
                this._selectionId = n.trackSelection(i)
            }
        }, t.prototype.computeCursorState = function (t, n) {
            if (this._hasDelegatedToParent)return e.prototype.computeCursorState.call(this, t, n);
            var i = n.getTrackedSelection(this._selectionId);
            return this._moveEndPositionDown && (i = i.setEndPosition(i.endLineNumber + 1, 1)), i
        }, t
    }(r.BlockCommentCommand);
    t.LineCommentCommand = u
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/comment/comment", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/lib/winjs.base", "vs/platform/platform", "vs/platform/actionRegistry", "./lineCommentCommand", "./blockCommentCommand", "vs/editor/editorExtensions"], function (e, t, n, i, o, r, s, a, u) {
    "use strict";
    var l = n, d = i, c = o, h = r, p = s, f = a, g = u, m = function (e) {
        function t(t, n) {
            e.call(this, t, n)
        }

        return __extends(t, e), t.prototype.run = function () {
            for (var e = [], t = this.editor.getSelections(), n = 0; n < t.length; n++)e.push(new p.LineCommentCommand(t[n]));
            return this.editor.executeCommands(this.id, e), d.TPromise.as(null)
        }, t.ID = "editor.actions.commentLine", t
    }(g.EditorAction), v = function (e) {
        function t(t, n) {
            e.call(this, t, n)
        }

        return __extends(t, e), t.prototype.run = function () {
            for (var e = [], t = this.editor.getSelections(), n = 0; n < t.length; n++)e.push(new f.BlockCommentCommand(t[n]));
            return this.editor.executeCommands(this.id, e), d.TPromise.as(null)
        }, t.ID = "editor.actions.blockComment", t
    }(g.EditorAction), y = new h.ActionDescriptor(m, m.ID, l.localize("vs_editor_contrib_comment_comment", 0), {ctrlCmd: !0, key: "/"}, {ctrlCmd: !0, key: "7"}), b = new h.ActionDescriptor(v, v.ID, l.localize("vs_editor_contrib_comment_comment", 1), {shift: !0, alt: !0, key: "A"}), C = c.Registry.as(g.Extensions.EditorContributions);
    C.registerEditorContribution(y), C.registerEditorContribution(b)
}), define("vs/editor/contrib/linesOperations/copyLinesCommand", ["require", "exports", "vs/editor/core/range"], function (e, t, n) {
    "use strict";
    var i = n, o = function () {
        function e(e, t) {
            this._selection = e, this._isCopyingDown = t
        }

        return e.prototype.getEditOperations = function (e, t) {
            var n = this._selection;
            this._moveEndPositionDown = !1, this._moveStartPositionUp = !1, n.startLineNumber < n.endLineNumber && 1 === n.endColumn && (this._moveEndPositionDown = !0, n = n.setEndPosition(n.endLineNumber - 1, e.getLineMaxColumn(n.endLineNumber - 1)), !this._isCopyingDown && n.isEmpty() && (this._moveEndPositionDown = !1, this._moveStartPositionUp = !0));
            for (var o = [], r = n.startLineNumber; r <= n.endLineNumber; r++)o.push(e.getLineContent(r));
            var s = o.join("\n");
            this._isCopyingDown ? t.addEditOperation(new i.Range(n.startLineNumber, 1, n.startLineNumber, 1), s + "\n") : t.addEditOperation(new i.Range(n.endLineNumber, e.getLineMaxColumn(n.endLineNumber), n.endLineNumber, e.getLineMaxColumn(n.endLineNumber)), "\n" + s), this._selectionId = t.trackSelection(n)
        }, e.prototype.computeCursorState = function (e, t) {
            var n = t.getTrackedSelection(this._selectionId);
            return this._moveStartPositionUp && (n = n.setEndPosition(n.startLineNumber - 1, 1)), this._moveEndPositionDown && (n = n.setEndPosition(n.endLineNumber + 1, 1)), n
        }, e
    }();
    t.CopyLinesCommand = o
}), define("vs/editor/contrib/linesOperations/deleteLinesCommand", ["require", "exports", "vs/editor/core/range", "vs/editor/core/selection"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function () {
        function e(e) {
            this.selection = e
        }

        return e.prototype.getEditOperations = function (e, t) {
            if (1 !== e.getLineCount() || 1 !== e.getLineMaxColumn(1)) {
                var n = this.selection.startLineNumber, i = this.selection.startColumn, r = this.selection.endLineNumber, s = this.selection.endColumn;
                r > n && 1 === s && (r -= 1), i = 1, s = e.getLineMaxColumn(r), r < e.getLineCount() ? (r += 1, s = 1) : n > 1 && (n -= 1, i = e.getLineMaxColumn(n)), t.addEditOperation(new o.Range(n, i, r, s), null)
            }
        }, e.prototype.computeCursorState = function (e, t) {
            var n = t.getInverseEditOperations(), i = n[0].range;
            return new r.Selection(i.endLineNumber, this.selection.positionColumn, i.endLineNumber, this.selection.positionColumn)
        }, e
    }();
    t.DeleteLinesCommand = s
}), define("vs/editor/contrib/linesOperations/moveLinesCommand", ["require", "exports", "vs/editor/core/range", "vs/editor/core/selection"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function () {
        function e(e, t) {
            this._selection = e, this._isMovingDown = t
        }

        return e.prototype.getEditOperations = function (e, t) {
            var n = e.getLineCount();
            if (!(this._isMovingDown && this._selection.endLineNumber === n || !this._isMovingDown && 1 === this._selection.startLineNumber)) {
                this._moveEndPositionDown = !1;
                var i = this._selection;
                if (i.startLineNumber < i.endLineNumber && 1 === i.endColumn && (this._moveEndPositionDown = !0, i = i.setEndPosition(i.endLineNumber - 1, e.getLineMaxColumn(i.endLineNumber - 1))), i.startLineNumber === i.endLineNumber && 1 === e.getLineMaxColumn(i.startLineNumber)) {
                    var s = i.startLineNumber, a = this._isMovingDown ? s + 1 : s - 1;
                    t.addEditOperation(new o.Range(s, 1, s, 1), e.getLineContent(a)), t.addEditOperation(new o.Range(a, 1, a, e.getLineMaxColumn(a)), null), i = new r.Selection(a, 1, a, 1)
                } else {
                    var u, l;
                    this._isMovingDown ? (u = i.endLineNumber + 1, l = e.getLineContent(u), t.addEditOperation(new o.Range(u - 1, e.getLineMaxColumn(u - 1), u, e.getLineMaxColumn(u)), null), t.addEditOperation(new o.Range(i.startLineNumber, 1, i.startLineNumber, 1), l + "\n")) : (u = i.startLineNumber - 1, l = e.getLineContent(u), t.addEditOperation(new o.Range(u, 1, u + 1, 1), null), t.addEditOperation(new o.Range(i.endLineNumber, e.getLineMaxColumn(i.endLineNumber), i.endLineNumber, e.getLineMaxColumn(i.endLineNumber)), "\n" + l))
                }
                this._selectionId = t.trackSelection(i)
            }
        }, e.prototype.computeCursorState = function (e, t) {
            var n = t.getTrackedSelection(this._selectionId);
            return this._moveEndPositionDown && (n = n.setEndPosition(n.endLineNumber + 1, 1)), n
        }, e
    }();
    t.MoveLinesCommand = s
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/linesOperations/linesOperations", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/lib/winjs.base", "vs/platform/platform", "vs/platform/actionRegistry", "vs/editor/editorExtensions", "./copyLinesCommand", "./deleteLinesCommand", "./moveLinesCommand"], function (e, t, n, i, o, r, s, a, u, l) {
    "use strict";
    var d = n, c = i, h = o, p = r, f = s, g = a, m = u, v = l, y = function (e) {
        function t(t, n, i) {
            e.call(this, t, n), this.down = i
        }

        return __extends(t, e), t.prototype.run = function () {
            for (var e = [], t = this.editor.getSelections(), n = 0; n < t.length; n++)e.push(new g.CopyLinesCommand(t[n], this.down));
            return this.editor.executeCommands(this.id, e), c.TPromise.as(!0)
        }, t
    }(f.EditorAction), b = function (e) {
        function t(t, n) {
            e.call(this, t, n, !1)
        }

        return __extends(t, e), t.ID = "editor.actions.copyLinesUpAction", t
    }(y), C = function (e) {
        function t(t, n) {
            e.call(this, t, n, !0)
        }

        return __extends(t, e), t.ID = "editor.actions.copyLinesDownAction", t
    }(y), E = function (e) {
        function t(t, n, i) {
            e.call(this, t, n), this.down = i
        }

        return __extends(t, e), t.prototype.run = function () {
            for (var e = [], t = this.editor.getSelections(), n = 0; n < t.length; n++)e.push(new v.MoveLinesCommand(t[n], this.down));
            return this.editor.executeCommands(this.id, e), c.TPromise.as(!0)
        }, t
    }(f.EditorAction), w = function (e) {
        function t(t, n) {
            e.call(this, t, n, !1)
        }

        return __extends(t, e), t.ID = "editor.actions.moveLinesUpAction", t
    }(E), _ = function (e) {
        function t(t, n) {
            e.call(this, t, n, !0)
        }

        return __extends(t, e), t.ID = "editor.actions.moveLinesDownAction", t
    }(E), S = function (e) {
        function t(t, n) {
            e.call(this, t, n)
        }

        return __extends(t, e), t.prototype.run = function () {
            for (var e = [], t = this.editor.getSelections(), n = 0; n < t.length; n++)e.push(new m.DeleteLinesCommand(t[n]));
            return this.editor.executeCommands(this.id, e), c.TPromise.as(!0)
        }, t.ID = "editor.action.deleteLines", t
    }(f.EditorAction), T = h.Registry.as(f.Extensions.EditorContributions);
    T.registerEditorContribution(new p.ActionDescriptor(S, S.ID, d.localize("vs_editor_contrib_linesOperations_linesOperations", 0), {ctrlCmd: !0, key: "D"}, {shift: !0, key: "Delete"})), T.registerEditorContribution(new p.ActionDescriptor(_, _.ID, d.localize("vs_editor_contrib_linesOperations_linesOperations", 1), {alt: !0, key: "DownArrow"})), T.registerEditorContribution(new p.ActionDescriptor(w, w.ID, d.localize("vs_editor_contrib_linesOperations_linesOperations", 2), {alt: !0, key: "UpArrow"})), T.registerEditorContribution(new p.ActionDescriptor(C, C.ID, d.localize("vs_editor_contrib_linesOperations_linesOperations", 3), {alt: !0, shift: !0, key: "DownArrow"})), T.registerEditorContribution(new p.ActionDescriptor(b, b.ID, d.localize("vs_editor_contrib_linesOperations_linesOperations", 4), {alt: !0, shift: !0, key: "UpArrow"}))
}), define("vs/css!vs/editor/contrib/zoneWidget/zoneWidget", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/zoneWidget/zoneWidget", ["require", "exports", "vs/base/types", "vs/base/objects", "vs/base/eventEmitter", "vs/base/dom/builder", "vs/editor/core/constants", "vs/css!./zoneWidget"], function (e, t, n, i, o, r, s) {
    "use strict";
    var a = n, u = i, l = o, d = r, c = s, h = {showAbove: !1, showFrame: !0, frameColor: "", className: ""}, p = "vs.editor.contrib.zoneWidget", f = function () {
        function e(e, t, n, i, o) {
            this.domNode = e, this.afterLineNumber = t, this.heightInLines = n, this._onDomNodeTop = i, this._onComputedHeight = o
        }

        return e.prototype.onDomNodeTop = function (e) {
            this._onDomNodeTop(e)
        }, e.prototype.onComputedHeight = function (e) {
            this._onComputedHeight(e)
        }, e
    }(), g = function () {
        function e(e, t) {
            this._id = e, this._domNode = t
        }

        return e.prototype.getId = function () {
            return this._id
        }, e.prototype.getDomNode = function () {
            return this._domNode
        }, e.prototype.getPosition = function () {
            return null
        }, e
    }(), m = function (e) {
        function t(t, n) {
            "undefined" == typeof n && (n = {});
            var i = this;
            e.call(this), this.editor = t, this.options = u.mixin(u.clone(h), n), this.zoneId = -1, this.overlayWidget = null, this.lastView = null, this.domNode = document.createElement("div"), this.container = null, this.listenersToRemove = [], this.listenersToRemove.push(this.editor.addListener(c.EventType.EditorLayout, function (e) {
                var t = i.getWidth(e);
                i.domNode.style.width = t + "px", i.onWidth(t)
            }))
        }

        return __extends(t, e), t.prototype.create = function () {
            var e = this, t = d.Build.withElement(this.domNode).addClass("zone-widget").addClass(this.options.className);
            t.div({"class": "container"}, function (t) {
                e.container = t.asContainer(), e.fillContainer(t.getHTMLElement())
            })
        }, t.prototype.getWidth = function (e) {
            return"undefined" == typeof e && (e = this.editor.getLayoutInfo()), e.width - e.verticalScrollbarWidth
        }, t.prototype.onViewZoneTop = function (e) {
            this.domNode.style.top = e + "px"
        }, t.prototype.onViewZoneHeight = function (e) {
            this.domNode.style.height = e + "px"
        }, t.prototype.createArrow = function (e, t, n) {
            var i = document.createElement("div"), o = this.editor.getOffsetForColumn(e.lineNumber, e.column);
            return i.style.borderWidth = n + "px", i.style.left = o + "px", this.options.showAbove ? (i.className = "zone-widget-arrow above", i.style.top = 4 + n + t + "px", i.style.borderTopColor = this.options.frameColor) : (i.className = "zone-widget-arrow below", i.style.top = -n + "px", i.style.borderBottomColor = this.options.frameColor), i
        }, t.prototype.show = function (e, t) {
            a.isUndefinedOrNull(e.startLineNumber) ? this.showImpl({startLineNumber: e.lineNumber, startColumn: e.column, endLineNumber: e.lineNumber, endColumn: e.column}, t) : this.showImpl(e, t)
        }, t.prototype.showImpl = function (e, t) {
            var n = this;
            this.position = {lineNumber: e.startLineNumber, column: e.startColumn}, this.domNode.style.width = this.getWidth() + "px", this.editor.revealPosition(this.position, !1, !1);
            var i, o = document.createElement("div"), r = this.editor.getConfiguration().lineHeight;
            if (this.options.showFrame) {
                var s = Math.round(r / 3), a = Math.max(0, r - 2 * s);
                i = (t - 1) * r + a - 4, o.appendChild(this.createArrow(this.position, i, s))
            } else i = t * r;
            this.editor.changeViewZones(function (e) {
                -1 !== n.zoneId && e.removeZone(n.zoneId), n.overlayWidget && (n.editor.removeOverlayWidget(n.overlayWidget), n.overlayWidget = null);
                var i = new f(o, n.position.lineNumber + (n.options.showAbove ? -1 : 0), t, function (e) {
                    return n.onViewZoneTop(e)
                }, function (e) {
                    return n.onViewZoneHeight(e)
                });
                n.zoneId = e.addZone(i), n.overlayWidget = new g(p + n.zoneId, n.domNode), n.editor.addOverlayWidget(n.overlayWidget)
            }), this.options.showFrame ? this.container.style({borderTopColor: this.options.frameColor, borderBottomColor: this.options.frameColor, top: s + "px", height: i + "px", overflow: "hidden"}) : this.container.style({borderTopColor: this.options.frameColor, borderBottomColor: this.options.frameColor, borderTopWidth: 0, borderBottomWidth: 0, height: i + "px", overflow: "hidden"}), this.doLayout(i), this.editor.setSelection(e);
            var u = {lineNumber: Math.min(this.editor.getModel().getLineCount(), Math.max(1, e.endLineNumber + (this.options.showAbove ? -1 : 1))), column: 1};
            this.editor.revealPosition(u, !1, !1)
        }, t.prototype.dispose = function () {
            var e = this;
            this.position = null, this.overlayWidget && (this.editor.removeOverlayWidget(this.overlayWidget), this.overlayWidget = null), -1 !== this.zoneId && this.editor.changeViewZones(function (t) {
                t.removeZone(e.zoneId), e.zoneId = -1
            })
        }, t.prototype.fillContainer = function () {
        }, t.prototype.onWidth = function () {
        }, t.prototype.doLayout = function () {
        }, t
    }(l.EventEmitter);
    t.ZoneWidget = m
}), define("vs/css!vs/editor/contrib/goToDeclaration/goToDeclaration", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/goToDeclaration/goToDeclaration", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/env", "vs/base/network", "vs/base/async", "vs/base/strings", "vs/base/errors", "vs/base/lib/winjs.base", "vs/platform/platform", "vs/platform/services", "vs/platform/actionRegistry", "vs/base/dom/builder", "vs/editor/core/codeEditorWidget", "vs/editor/editorExtensions", "vs/editor/contrib/zoneWidget/zoneWidget", "vs/editor/core/constants", "vs/editor/editor", "vs/editor/modes/modesExtensions", "vs/css!./goToDeclaration"], function (e, t, n, i, o, r, s, a, u, l, d, c, h, p, f, g, m, v, y) {
    "use strict";
    var b = n, C = i, E = o, w = r, _ = s, S = a, T = u, L = l, N = d, x = c, M = h, I = p, R = f, D = g, P = m, O = v, k = y, A = function (e) {
        function t(t, n) {
            e.call(this, t, n, R.Precondition.TextFocus), this.editorService = null, this.messageService = null
        }

        return __extends(t, e), t.prototype.injectEditorService = function (e) {
            this.editorService = e, this.updateEnablementState()
        }, t.prototype.injectMessageService = function (e) {
            this.messageService = e, this.updateEnablementState()
        }, t.prototype.injectRequestService = function (e) {
            this.requestService = e
        }, t.prototype.getEnablementState = function () {
            return e.prototype.getEnablementState.call(this) && !!this.editorService && !!this.messageService && !!this.editor.getModel().getMode().declarationSupport
        }, t.prototype.run = function () {
            var e = this, t = this.editor.getModel();
            this.editor.getModel().getMode().declarationSupport;
            var n = this.editor.getPosition(), i = this.resolve(t.getAssociatedResource(), {lineNumber: n.lineNumber, column: n.column});
            return i.then(function (t) {
                return t ? (e.editorService.openEditor({path: e.requestService.getPath("root", new E.URL(t.resourceUrl)), options: {selection: t.range}}), !0) : !1
            }, function (t) {
                return e.messageService.show(N.Severity.Error, t), !1
            })
        }, t.prototype.resolve = function () {
            return T.TPromise.as(null)
        }, t
    }(R.EditorAction);
    t.GoToTypeAction = A;
    var H = function (e) {
        function t(t, n) {
            e.call(this, t, n)
        }

        return __extends(t, e), t.prototype.getEnablementState = function () {
            return e.prototype.getEnablementState.call(this) && !!this.editor.getModel().getMode().declarationSupport.findTypeDeclaration
        }, t.prototype.resolve = function (e, t) {
            return this.editor.getModel().getMode().declarationSupport.findTypeDeclaration(e, t)
        }, t.ID = "editor.actions.goToTypeDeclaration", t
    }(A);
    t.GoToTypeDeclarationActions = H;
    var W = function (e) {
        function t(t, n) {
            e.call(this, t, n)
        }

        return __extends(t, e), t.prototype.getEnablementState = function () {
            return e.prototype.getEnablementState.call(this) && !!this.editor.getModel().getMode().declarationSupport.findDeclaration
        }, t.prototype.resolve = function (e, t) {
            return this.editor.getModel().getMode().declarationSupport.findDeclaration(e, t)
        }, t.ID = "editor.actions.goToDeclaration", t
    }(A);
    t.GoToDeclarationAction = W;
    var V = function (e) {
        function t(t, n, i) {
            e.call(this, t, {showFrame: !0, showAbove: !0, frameColor: "#EFEFF2"}), this.model = n, this.range = i, this.widget = null, this.widgetContainer = null, this.create()
        }

        return __extends(t, e), t.prototype.fillContainer = function (e) {
            var t = this;
            M.withElement(e).addClass("preview-zone-widget").div(function (e) {
                t.widgetContainer = e.asContainer().addClass("preview");
                var n = t.editor.getConfiguration();
                n.readOnly = !0, n.scrollBeyondLastLine = !1, n.scrollbar = {useShadows: !1}, t.widget = new I.CodeEditorWidget(e.getHTMLElement(), n, null), t.widget.setModel(t.model), t.reveal()
            })
        }, t.prototype.reveal = function () {
            this.widget.setPosition({lineNumber: this.range.startLineNumber, column: this.range.startColumn}, !0, !0, !0)
        }, t.prototype.doLayout = function (e) {
            this.widgetContainer.style({height: e + "px"}), this.widget.layout()
        }, t.prototype.onWidth = function () {
            this.widget.layout()
        }, t.prototype.dispose = function () {
            this.widget.destroy(), e.prototype.dispose.call(this)
        }, t
    }(D.ZoneWidget), F = function (e) {
        function t(t, n) {
            var i = this;
            e.call(this, t, n, R.Precondition.TextFocus), this.handlerService = null, this.editorService = null, this.toUnhook.push(t.addListener(P.EventType.ModelChanged, function () {
                i.clear()
            })), this.widget = null, this.closeBinding = null
        }

        return __extends(t, e), t.prototype.injectEditorService = function (e) {
            this.editorService = e
        }, t.prototype.injectRequestService = function (e) {
            this.requestService = e
        }, t.prototype.injectionDone = function () {
            this.updateEnablementState()
        }, t.prototype.getEnablementState = function () {
            return e.prototype.getEnablementState.call(this) && !!this.editorService && !!this.handlerService && !!this.editor.getModel().getMode().declarationSupport && !!this.editor.getModel().getMode().declarationSupport.findDeclaration
        }, t.prototype.run = function () {
            var e = this;
            this.clear();
            var t = this.editor.getModel(), n = this.editor.getModel().getMode().declarationSupport, i = this.editor.getPosition(), o = {lineNumber: i.lineNumber, column: i.column};
            return n.findDeclaration(t.getAssociatedResource(), o).then(function (t) {
                if (!t || !t.preview)return T.Promise.as(null);
                var n = {path: e.requestService.getPath("root", new E.URL(t.resourceUrl))};
                return e.editorService.resolveEditorModel(n).then(function (n) {
                    e.widget = new V(e.editor, n.textEditorModel, t.range), e.widget.show(i, 18), e.widget.reveal();
                    var o = (new Date).getTime();
                    e.closeBinding = e.handlerService.bind({key: "Escape"}, function () {
                        return e.telemetryService.log("zoneWidgetShown", {mode: "go to declaration", elapsedTime: (new Date).getTime() - o}), !!e.clear()
                    }, {id: e.id})
                })
            })
        }, t.prototype.clear = function () {
            null !== this.closeBinding && (this.closeBinding.dispose(), this.closeBinding = null), this.widget && (this.widget.dispose(), this.widget = null)
        }, t.prototype.dispose = function () {
            this.clear(), e.prototype.dispose.call(this)
        }, t.ID = "editor.actions.previewDeclaration", t
    }(R.EditorAction);
    t.PreviewDeclarationAction = F;
    var U = new x.ActionDescriptor(F, F.ID, b.localize("vs_editor_contrib_goToDeclaration_goToDeclaration", 0)), B = new x.ActionDescriptor(W, W.ID, b.localize("vs_editor_contrib_goToDeclaration_goToDeclaration", 1), {ctrlCmd: !C.browser.isMacintosh, key: "F12"}), z = new x.ActionDescriptor(H, H.ID, b.localize("vs_editor_contrib_goToDeclaration_goToDeclaration", 2), {ctrlCmd: !0, shift: !C.browser.isMacintosh, key: "F12"}), q = L.Registry.as(R.Extensions.EditorContributions);
    q.registerEditorContribution(B), q.registerEditorContribution(U), q.registerEditorContribution(z);
    var j = function () {
        function e(e) {
            var t = this;
            this.toUnhook = [], this.decorations = [], this.editor = e, this.throttler = new w.Throttler, this.toUnhook.push(this.editor.addListener(P.EventType.MouseUp, function (e) {
                return t.onEditorMouseUp(e)
            })), this.toUnhook.push(this.editor.addListener(P.EventType.MouseMove, function (e) {
                return t.onEditorMouseMove(e)
            })), this.toUnhook.push(this.editor.addListener(P.EventType.KeyDown, function (e) {
                return t.onEditorKeyDown(e)
            })), this.toUnhook.push(this.editor.addListener(P.EventType.KeyUp, function (e) {
                return t.onEditorKeyUp(e)
            })), this.toUnhook.push(this.editor.addListener(P.EventType.ModelChanged, function () {
                return t.removeDecorations()
            })), this.toUnhook.push(this.editor.addListener("change", function () {
                return t.removeDecorations()
            }))
        }

        return e.prototype.injectEditorService = function (e) {
            this.editorService = e
        }, e.prototype.injectRequestService = function (e) {
            this.requestService = e
        }, e.prototype.injectMessageService = function (e) {
            this.messageService = e
        }, e.prototype.injectionDone = function () {
            this.hasRequiredServices = !!this.messageService && !!this.requestService && !!this.editorService
        }, e.prototype.onEditorMouseMove = function (t, n) {
            var i = this;
            if (this.lastMouseEvent = t, this.isEnabled(t, n)) {
                var o = t.target.position, r = o ? this.editor.getModel().getWordAtPosition(o, !1) : null;
                if (!r)return this.removeDecorations(), void 0;
                this.currentWordUnderMouse && this.currentPositionUnderMouse && this.currentPositionUnderMouse.lineNumber === o.lineNumber && this.currentWordUnderMouse.startColumn === r.startColumn, this.currentPositionUnderMouse = o, this.currentWordUnderMouse = r, this.throttler.queue(function () {
                    return i.findDefinition(t.target)
                }).done(function (n) {
                    if (n && n.range && (n.range.startColumn !== r.startColumn || n.range.startLineNumber !== t.target.position.lineNumber)) {
                        var s = "";
                        if (n.preview && n.preview.text && n.preview.range) {
                            var a = n.preview.text.split("\n"), u = [], l = n.preview.range, d = l.startLineNumber - 1, c = l.endLineNumber - 1;
                            if (d < a.length && c < a.length) {
                                for (var h = null, p = d; u.length < e.MAX_SOURCE_PREVIEW_LINES && c >= p; p++) {
                                    var f;
                                    null === h ? (f = _.trim(_.trim(a[p], "	")), h = a[p].substr(0, a[p].length - f.length)) : f = 0 === a[p].indexOf(h) ? a[p].substring(h.length).replace("	", "    ") : a[p], f && u.push(f)
                                }
                                s = u.join("\n"), c - d >= e.MAX_SOURCE_PREVIEW_LINES && (s += "\nâ¦")
                            }
                        }
                        i.addDecoration({startLineNumber: o.lineNumber, startColumn: r.startColumn, endLineNumber: o.lineNumber, endColumn: r.endColumn}, s)
                    } else i.removeDecorations()
                }, S.onUnexpectedError)
            } else this.removeDecorations()
        }, e.prototype.addDecoration = function (e, t) {
            var n = null;
            t && (n = [
                {tagName: "div", className: "goto-definition-link-hover", children: [k.TextToHtmlTokenizer.tokenize(t, this.editor.getModel().getMode())]}
            ]);
            var i = [];
            i.push({range: e, options: {inlineClassName: "goto-definition-link", htmlMessage: n}}), this.decorations = this.editor.deltaDecorations(this.decorations, i)
        }, e.prototype.removeDecorations = function () {
            var e = this;
            this.decorations.length > 0 && (this.editor.changeDecorations(function (t) {
                for (var n = 0, i = e.decorations.length; i > n; n++)t.removeDecoration(e.decorations[n])
            }), this.decorations = []), this.currentWordUnderMouse = null, this.currentPositionUnderMouse = null
        }, e.prototype.onEditorKeyDown = function (t) {
            t.key === e.TRIGGER_KEY_VALUE && this.lastMouseEvent && this.onEditorMouseMove(this.lastMouseEvent, t)
        }, e.prototype.onEditorKeyUp = function (t) {
            t.key === e.TRIGGER_KEY_VALUE && this.removeDecorations()
        }, e.prototype.onEditorMouseUp = function (e) {
            var t = this;
            this.isEnabled(e) && this.gotoDefinition(e.target).done(function () {
                t.removeDecorations()
            }, function (e) {
                t.removeDecorations(), S.onUnexpectedError(e)
            })
        }, e.prototype.isEnabled = function (t, n) {
            return this.hasRequiredServices && this.editor.getConfiguration().gotoDefinitionWithMouse && this.editor.getModel() && t.target.type === O.MouseTargetType.CONTENT_TEXT && (t.event[e.TRIGGER_MODIFIER] || n && n.key === e.TRIGGER_KEY_VALUE) && !!this.editor.getModel().getMode().declarationSupport
        }, e.prototype.findDefinition = function (e) {
            var t = this.editor.getModel();
            this.editor.getModel().getMode().declarationSupport;
            var n = e.position;
            return this.editor.getModel().getMode().declarationSupport.findDeclaration(t.getAssociatedResource(), {lineNumber: n.lineNumber, column: n.column})
        }, e.prototype.gotoDefinition = function (e) {
            var t = this;
            return this.findDefinition(e).then(function (n) {
                var i = e.position, o = t.editor.getModel().getWordAtPosition(i, !1);
                return n && n.range && (n.range.startColumn !== o.startColumn || n.range.startLineNumber !== e.position.lineNumber) ? t.editorService.openEditor({path: t.requestService.getPath("root", new E.URL(n.resourceUrl)), options: {selection: {startLineNumber: n.range.startLineNumber, startColumn: n.range.startColumn, endLineNumber: n.range.startLineNumber, endColumn: n.range.endColumn}}}) : void 0
            })
        }, e.prototype.getId = function () {
            return e.ID
        }, e.prototype.dispose = function () {
            for (; this.toUnhook.length > 0;)this.toUnhook.pop()()
        }, e.ID = "editor.contrib.gotodefinitionwithmouse", e.TRIGGER_MODIFIER = C.browser.isMacintosh ? "metaKey" : "ctrlKey", e.TRIGGER_KEY_VALUE = C.browser.isMacintosh ? "Meta" : "Ctrl", e.MAX_SOURCE_PREVIEW_LINES = 7, e
    }();
    q.registerEditorContribution(new L.BaseDescriptor(j))
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/platform/markers/markers", ["require", "exports", "vs/base/assert", "vs/base/network"], function (e, t, n, i) {
    "use strict";
    function o(e, t, n, i, o) {
        return{type: "text", severity: e, code: t, text: n, offset: i, length: o}
    }

    function r(e, t, n, i) {
        return{type: "text", severity: e, code: t, text: n, range: i}
    }

    function s(e) {
        return new g(e)
    }

    function a(e, t) {
        return t + "|" + e.toExternal()
    }

    function u(e, t) {
        return new v(e, t)
    }

    function l(e) {
        return v.fromJson(e)
    }

    function d(e, t) {
        var n = null;
        if (t) {
            if (c.ok(e.getAssociatedResource().toExternal() === t.getAssociatedResource().toExternal()), e.getId() === g.DEFAULT_GROUP)return n = new g(t.getAssociatedResource(), e.getMarkers()), t.getGroups().forEach(function (e) {
                n.addGroup(e)
            }), n;
            var i = new f(t, e.getId(), e.getMarkers()), o = t.getGroup(e.getId());
            return o ? (n = new g(t.getAssociatedResource(), t.getMarkers()), t.getGroups().forEach(function (e) {
                e.getId() !== i.getId() && n.addGroup(e)
            }), n.addGroup(i), n) : (t.addGroup(i), t)
        }
        if (e.getId() === g.DEFAULT_GROUP)return new g(e.getAssociatedResource(), e.getMarkers());
        n = new g(e.getAssociatedResource());
        var r = new f(n, e.getId(), e.getMarkers());
        return n.addGroup(r), n
    }

    var c = n, h = i;
    !function (e) {
        e[e.Info = 0] = "Info", e[e.Warning = 1] = "Warning", e[e.Error = 2] = "Error"
    }(t.Severity || (t.Severity = {})), t.Severity, t.createTextMarker = o, t.createRangeTextMarker = r;
    var p = function () {
        function e(e) {
            "undefined" == typeof e && (e = []), this.markers = e
        }

        return e.prototype.length = function () {
            return this.markers.length
        }, e.prototype.markerAt = function (e) {
            return this.markers[e]
        }, e.prototype.getMarkers = function () {
            return this.markers.slice(0)
        }, e.prototype.forEach = function (e) {
            this.markers.forEach(e)
        }, e
    }(), f = function (e) {
        function t(t, n, i) {
            "undefined" == typeof i && (i = []), e.call(this, i), this.owner = t, this.id = n
        }

        return __extends(t, e), t.prototype.getAssociatedResource = function () {
            return this.owner.getAssociatedResource()
        }, t.prototype.getId = function () {
            return this.id
        }, t
    }(p), g = function (e) {
        function t(t, n) {
            "undefined" == typeof n && (n = []), e.call(this, n), this.resource = t, this.groups = []
        }

        return __extends(t, e), t.prototype.getAssociatedResource = function () {
            return this.resource
        }, t.prototype.getId = function () {
            return t.DEFAULT_GROUP
        }, t.prototype.getMarkers = function () {
            var t = e.prototype.getMarkers.call(this);
            return this.groups.forEach(function (e) {
                t = t.concat(e.getMarkers())
            }), t
        }, t.prototype.getGroups = function () {
            return this.groups.slice(0)
        }, t.prototype.getGroup = function (e) {
            if (t.DEFAULT_GROUP === e)return this;
            for (var n = 0; n < this.groups.length; n++)if (this.groups[n].getId() === e)return this.groups[n];
            return null
        }, t.prototype.addGroup = function (e) {
            c.ok(e.getId() !== t.DEFAULT_GROUP);
            var n = this.getGroup(e.getId());
            c.ok(null === n), this.groups.push(e)
        }, t.DEFAULT_GROUP = "defaultGroup", t
    }(p);
    t.createMarkerSet = s;
    var m = ["type", "id"], v = function () {
        function e(e, t) {
            this.resource = e, this.id = t, this.markers = []
        }

        return e.prototype.getAssociatedResource = function () {
            return this.resource
        }, e.prototype.getId = function () {
            return this.id
        }, e.prototype.computeKey = function () {
            return this.id + "|" + this.resource.toExternal()
        }, e.prototype.length = function () {
            return this.markers.length
        }, e.prototype.markerAt = function (e) {
            return this.markers[e]
        }, e.prototype.forEach = function (e) {
            this.markers.forEach(e)
        }, e.prototype.getMarkers = function () {
            return this.markers.slice(0)
        }, e.prototype.addMarker = function (e) {
            this.markers.push(e)
        }, e.prototype.toJson = function () {
            return{resource: this.resource.toExternal(), id: this.id, markers: this.markers.slice(0)}
        }, e.fromJson = function (t) {
            var n = new e(new h.URL(t.resource), t.id);
            n.markers = t.markers.slice(0);
            for (var i = {}, o = 0; o < n.markers.length; o++) {
                var r = n.markers[o];
                m.forEach(function (e) {
                    var t = r[e], n = i[t];
                    n ? r[e] = n : i[t] = t
                })
            }
            return n
        }, e
    }();
    t.computeKey = a, t.createMarkerUpdate = u, t.createMarkerUpdateFromJson = l, t.processMarkerUpdate = d
}), define("vs/css!vs/editor/contrib/gotoError/gotoError", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/gotoError/gotoError", ["require", "exports", "vs/base/dom/dom", "vs/base/lib/winjs.base", "vs/editor/contrib/zoneWidget/zoneWidget", "vs/base/dom/builder", "vs/base/eventEmitter", "vs/editor/editorExtensions", "vs/editor/core/constants", "vs/editor/core/position", "vs/editor/core/range", "vs/platform/services", "vs/platform/markers/markers", "vs/platform/platform", "vs/platform/actionRegistry", "vs/nls!vs/editor/editor.main", "vs/css!./gotoError"], function (e, t, n, i, o, r, s, a, u, l, d, c, h, p, f, g) {
    "use strict";
    var m = n, v = i, y = o, b = r, C = s, E = a, w = u, _ = l, S = d, T = c, L = h, N = p, x = f, M = g, I = function (e) {
        function t(t, n) {
            var i = this;
            e.call(this), this.editor = t, this.markers = null, this.nextIdx = -1, this.disposed = !1, this.toUnbind = [], this.ignoreSelectionChange = !1, this.setMarkers(n), this.toUnbind.push(this.editor.addListener(w.EventType.Disposed, function () {
                return i.dispose()
            })), this.toUnbind.push(this.editor.addListener(w.EventType.CursorPositionChanged, function () {
                i.ignoreSelectionChange || (i.nextIdx = -1)
            }))
        }

        return __extends(t, e), t.prototype.setMarkers = function (e) {
            this.markers = e || [], this.markers.sort(function (e, t) {
                return e.range.startLineNumber === t.range.startLineNumber ? e.range.startColumn - t.range.startColumn : e.range.startLineNumber - t.range.startLineNumber
            }), this.nextIdx = -1, this.emit(t.Events.MARKER_SET, this)
        }, t.prototype.withoutWatchingEditorPosition = function (e) {
            this.ignoreSelectionChange = !0;
            try {
                e()
            } finally {
                this.ignoreSelectionChange = !1
            }
        }, t.prototype.initIdx = function (e) {
            for (var t = !1, n = this.editor.getPosition(), i = 0, o = this.markers.length; o > i && !t; i++) {
                var r = new S.Range(this.markers[i].range.startLineNumber, this.markers[i].range.startColumn, this.markers[i].range.endLineNumber, this.markers[i].range.endColumn);
                n.isBeforeOrEqual(r.getStartPosition()) && (this.nextIdx = i + (e ? 0 : -1), t = !0)
            }
            t || (this.nextIdx = e ? 0 : this.markers.length - 1), this.nextIdx < 0 && (this.nextIdx = this.markers.length - 1)
        }, t.prototype.move = function (e) {
            if (!this.canNavigate())return this.emit(t.Events.CURRENT, null), void 0;
            -1 === this.nextIdx ? this.initIdx(e) : e ? (this.nextIdx += 1, this.nextIdx >= this.markers.length && (this.nextIdx = 0)) : (this.nextIdx -= 1, this.nextIdx < 0 && (this.nextIdx = this.markers.length - 1));
            var n = this.markers[this.nextIdx];
            this.emit(t.Events.CURRENT, n)
        }, t.prototype.canNavigate = function () {
            return this.markers.length > 0
        }, t.prototype.next = function () {
            this.move(!0)
        }, t.prototype.previous = function () {
            this.move(!1)
        }, t.prototype.reveal = function () {
            var e = this;
            -1 !== this.nextIdx && this.withoutWatchingEditorPosition(function () {
                var t = new _.Position(e.markers[e.nextIdx].range.startLineNumber, e.markers[e.nextIdx].range.startColumn);
                e.editor.setPosition(t, !0, !0, !0)
            })
        }, t.prototype.dispose = function () {
            for (; this.toUnbind.length > 0;)this.toUnbind.pop()();
            this.markers = null, this.disposed = !0, e.prototype.dispose.call(this)
        }, t.Events = {CURRENT: "onMarker", MARKER_SET: "onNewMarkerSet"}, t
    }(C.EventEmitter), R = {showFrame: !0, showAbove: !1}, D = function (e) {
        function t(t, n) {
            e.call(this, t, R), this.model = n, this.element = null, this.unhook = function () {
            }, this.create(), this.wireModelAndView()
        }

        return __extends(t, e), t.prototype.fillContainer = function (e) {
            var t = this, n = b.withElement(e).addClass("marker-widget");
            n.div(function (e) {
                t.element = e
            }), n.div(function (e) {
                t.quickFixLabel = e
            }), n.on(m.EventType.CLICK, function () {
                t.editor.focus()
            })
        }, t.prototype.wireModelAndView = function () {
            var e = this;
            this.unhook = this.model.addListener(I.Events.CURRENT, function (t) {
                return e.showAtMarker(t)
            })
        }, t.prototype.showAtMarker = function (e) {
            var t = this;
            if (e) {
                switch (e.severity) {
                    case L.Severity.Error:
                        this.options.frameColor = "#ff5a5a";
                        break;
                    case L.Severity.Warning:
                    case L.Severity.Info:
                        this.options.frameColor = "#5aac5a"
                }
                this.element.text(e.text);
                var n = this.editor.getModel().getMode();
                if (this.quickFixLabel.hide(), e.severity === L.Severity.Error && n.quickFixSupport) {
                    var i = e.range.startColumn > 1 && "." === this.editor.getModel().getLineContent(e.range.startLineNumber).charAt(e.range.startColumn - 1 - 1);
                    if (i) {
                        var o = n.quickFixSupport.quickFix(this.editor.getModel().getAssociatedResource(), {lineNumber: e.range.endLineNumber, column: e.range.endColumn});
                        o.then(function (e) {
                            if (e.length > 0) {
                                var n = e.map(function (e) {
                                    return e.label
                                });
                                t.quickFixLabel.show().text(M.localize("vs_editor_contrib_gotoError_gotoError", 0, n.join(", ")))
                            }
                        }).done()
                    }
                }
                this.model.withoutWatchingEditorPosition(function () {
                    t.show(new _.Position(e.range.startLineNumber, e.range.startColumn), 3)
                })
            }
        }, t.prototype.dispose = function () {
            this.unhook(), e.prototype.dispose.call(this)
        }, t
    }(y.ZoneWidget), P = function (e) {
        function t(t, n, i) {
            e.call(this, t, n), this.handlerService = null, this.markerService = null, this.isNext = i
        }

        return __extends(t, e), t.prototype.injectMarkerService = function (e) {
            this.markerService = e
        }, t.prototype.injectionDone = function () {
            this.updateEnablementState()
        }, t.prototype.getEnablementState = function () {
            return!!this.markerService && !!this.handlerService && e.prototype.getEnablementState.call(this)
        }, t.prototype.getOrCreateModel = function () {
            throw new Error("Abstract method")
        }, t.prototype.run = function () {
            var e = this.getOrCreateModel();
            return this.telemetryService.log("zoneWidgetShown", {mode: "go to error"}), e && (this.isNext ? e.next() : e.previous(), e.reveal()), v.TPromise.as(!0)
        }, t
    }(E.EditorAction), O = function (e) {
        function t(t, n) {
            e.call(this, t, n, !0), this.model = null, this.zone = null, this.moreToUnhook = []
        }

        return __extends(t, e), t.prototype.cleanUp = function () {
            for (; this.toUnhook.length > 0;)this.toUnhook.pop()();
            this.zone && (this.zone.dispose(), this.zone = null), this.model && (this.model.dispose(), this.model = null)
        }, t.prototype.getOrCreateModel = function () {
            var e = this;
            if (this.model)return this.model;
            var t = this.getMarkers();
            return this.model = new I(this.editor, t), this.zone = new D(this.editor, this.model), this.toUnhook.push(this.handlerService.bind({key: "Escape"},function () {
                return e.cleanUp(), !0
            }, {once: !0, id: this.id}).dispose), this.toUnhook.push(this.editor.addListener(w.EventType.ModelChanged, function () {
                e.cleanUp()
            })), this.toUnhook.push(this.model.addListener(I.Events.CURRENT, function (t) {
                t || e.cleanUp()
            })), this.toUnhook.push(this.markerService.addListener(T.MarkerServiceConstants.SERVICE_CHANGED, function (t) {
                for (var n = t.markerSetEvents, i = e.editor.getModel().getAssociatedResource().toExternal(), o = 0; o < n.length; o++) {
                    var r = n[o];
                    if (r.resource.toExternal() === i) {
                        var s = e.getMarkers();
                        e.model.setMarkers(s);
                        break
                    }
                }
            })), this.model
        }, t.prototype.getMarkers = function () {
            var e = this.editor.getModel().getAssociatedResource(), t = this.markerService.getMarkerSet(e);
            return null === t ? null : t.getMarkers()
        }, t.prototype.dispose = function () {
            e.prototype.dispose.call(this), this.cleanUp()
        }, t.ID = "editor.actions.marker.next", t
    }(P), k = function (e) {
        function t(t, n) {
            e.call(this, t, n, !1)
        }

        return __extends(t, e), t.prototype.getOrCreateModel = function () {
            return this.editor.getAction(O.ID).getOrCreateModel()
        }, t.ID = "editor.actions.marker.prev", t
    }(P), A = new x.ActionDescriptor(O, O.ID, M.localize("vs_editor_contrib_gotoError_gotoError", 1), {ctrlCmd: !0, key: ","}), H = new x.ActionDescriptor(k, k.ID, M.localize("vs_editor_contrib_gotoError_gotoError", 2), {ctrlCmd: !0, shift: !0, key: ","}), W = N.Registry.as(E.Extensions.EditorContributions);
    W.registerEditorContribution(A), W.registerEditorContribution(H)
}), define("vs/editor/contrib/inPlaceReplace/inPlaceReplaceCommand", ["require", "exports", "vs/editor/core/selection"], function (e, t, n) {
    "use strict";
    var i = n, o = function () {
        function e(e, t, n) {
            this._editRange = e, this._originalSelection = t, this._text = n
        }

        return e.prototype.getEditOperations = function (e, t) {
            t.addEditOperation(this._editRange, this._text)
        }, e.prototype.computeCursorState = function (e, t) {
            var n = t.getInverseEditOperations(), o = n[0].range;
            return this._originalSelection.isEmpty() ? new i.Selection(o.endLineNumber, Math.min(this._originalSelection.positionColumn, o.endColumn), o.endLineNumber, Math.min(this._originalSelection.positionColumn, o.endColumn)) : new i.Selection(o.endLineNumber, o.endColumn - this._text.length, o.endLineNumber, o.endColumn)
        }, e
    }();
    t.InPlaceReplaceCommand = o
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/inPlaceReplace/inPlaceReplace", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/lib/winjs.base", "vs/platform/platform", "vs/platform/actionRegistry", "vs/editor/editorExtensions", "vs/editor/core/range", "vs/editor/contrib/inPlaceReplace/inPlaceReplaceCommand"], function (e, t, n, i, o, r, s, a, u) {
    "use strict";
    var l = n, d = i, c = o, h = r, p = s, f = a, g = u, m = function (e) {
        function t(t, n, i) {
            e.call(this, t, n), this.up = i, this.requestIdPool = 0, this.currentRequest = d.TPromise.as(null), this.decorationRemover = d.TPromise.as(null), this.decorationIds = []
        }

        return __extends(t, e), t.prototype.getEnablementState = function () {
            return e.prototype.getEnablementState.call(this) && !!this.editor.getModel().getMode().inplaceReplaceSupport
        }, t.prototype.run = function () {
            var e = this;
            this.currentRequest.cancel();
            var n = this.editor.getSelection(), i = (this.editor.getPosition(), this.editor.getModel()), o = i.getMode().inplaceReplaceSupport;
            return n.startLineNumber !== n.endLineNumber ? null : (this.currentRequest = o.navigateValueSet(i.getAssociatedResource(), n, this.up), this.currentRequest.then(function (i) {
                if (i && i.range && i.value) {
                    var o = f.create(i.range), r = i.range, s = i.value.length - (n.endColumn - n.startColumn);
                    r.endColumn = r.startColumn + i.value.length, n.endColumn += s > 1 ? s - 1 : 0;
                    var a = new g.InPlaceReplaceCommand(o, n, i.value);
                    return e.editor.executeCommand(e.id, a), e.decorationIds = e.editor.deltaDecorations(e.decorationIds, [
                        {range: r, options: t.DECORATION}
                    ]), e.decorationRemover.cancel(), e.decorationRemover = d.TPromise.timeout(350), e.decorationRemover.then(function () {
                        e.editor.changeDecorations(function (t) {
                            for (; e.decorationIds.length > 0;)t.removeDecoration(e.decorationIds.pop())
                        })
                    }), !0
                }
            }))
        }, t.COMMAND = "navigateValueSet", t.DECORATION = {isOverlay: !1, className: "valueSetReplacement"}, t
    }(p.EditorAction), v = function (e) {
        function t(t, n) {
            e.call(this, t, n, !0)
        }

        return __extends(t, e), t.ID = "editor.actions.inPlaceReplace.up", t
    }(m), y = function (e) {
        function t(t, n) {
            e.call(this, t, n, !1)
        }

        return __extends(t, e), t.ID = "editor.actions.inPlaceReplace.down", t
    }(m), b = new h.ActionDescriptor(v, v.ID, l.localize("vs_editor_contrib_inPlaceReplace_inPlaceReplace", 0), {ctrlCmd: !0, key: "UpArrow"}), C = new h.ActionDescriptor(y, y.ID, l.localize("vs_editor_contrib_inPlaceReplace_inPlaceReplace", 1), {ctrlCmd: !0, key: "DownArrow"}), E = c.Registry.as(p.Extensions.EditorContributions);
    E.registerEditorContribution(b), E.registerEditorContribution(C)
}), define("vs/base/ui/widgets/tree/preRenderer", ["require", "exports", "vs/base/dom/builder"], function (e, t, n) {
    "use strict";
    var i = n;
    i.$;
    var o = function () {
        function e(e) {
            this.dataSource = e, this.cache = {}
        }

        return e.prototype.getHeight = function (e, t) {
            var n = this.getKey(e, t), i = this.cache[n] || {}, o = document.createElement("div");
            o.className = "pre-render", i.cleanupFn = this.renderContents(e, t, o, i.cleanupFn || null);
            var r = e.withFakeRow(function (e) {
                e.appendChild(o);
                var t = e.clientHeight;
                return e.removeChild(o), t
            });
            return i.tree = e, i.element = t, i.container = o, this.cache[n] = i, r
        }, e.prototype.render = function (e, t, n) {
            var i = this.getKey(e, t), o = this.cache[i];
            if (!o)throw new Error("Binding not found.");
            return n.appendChild(o.container), this.cleanup.bind(this, e, t)
        }, e.prototype.cleanup = function (e, t) {
            var n = this.getKey(e, t);
            this.cleanupBinding(this.cache[n]), delete this.cache[n]
        }, e.prototype.cleanupBinding = function (e) {
            e && (e.cleanupFn && (e.cleanupFn(e.tree, e.element), delete e.cleanupFn), e.container && delete e.container, delete e.tree, delete e.element)
        }, e.prototype.renderContents = function () {
            throw new Error("Implement me.")
        }, e.prototype.getKey = function (e, t) {
            return this.dataSource.getId(e, t)
        }, e.prototype.dispose = function () {
            var e = this;
            this.cache && (Object.keys(this.cache).forEach(function (t) {
                e.cleanupBinding(e.cache[t]), delete e.cache[t]
            }), delete this.cache)
        }, e.BINDING = "monaco-tree-actionsRenderer", e
    }();
    t.PreRenderer = o
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/base/ui/widgets/tree/treeModel", ["require", "exports", "vs/base/assert", "vs/base/eventEmitter", "vs/base/lib/winjs.base"], function (e, t, n, i, o) {
    "use strict";
    var r = n, s = i, a = o, u = function () {
        function e() {
            this.lockedItems = {}, this.lock = a.Promise.as(null)
        }

        return e.prototype.makePromise = function (e, t) {
            var n = this;
            return new a.Promise(function (i, o, r) {
                return n.lockedItems[e.id] = e, t().then(function (t) {
                    return delete n.lockedItems[e.id], t
                }).then(i, o, r)
            })
        }, e.prototype.intersectLock = function (e) {
            var t;
            for (t in this.lockedItems)if (this.lockedItems.hasOwnProperty(t)) {
                var n = this.lockedItems[t];
                if (e.intersects(n))return!0
            }
            return!1
        }, e.prototype.run = function (e, t) {
            var n = this, i = function () {
                return n.makePromise(e, t)
            }, o = this.lock;
            return this.intersectLock(e) ? this.lock = this.lock.then(i) : (o = i(), this.lock = a.Promise.join([this.lock, o])), o
        }, e.prototype.isLocked = function (e) {
            return!!this.lockedItems[e.id]
        }, e
    }();
    t.Lock = u;
    var l = function (e) {
        function t() {
            e.call(this), this.items = {}
        }

        return __extends(t, e), t.prototype.register = function (e) {
            r.ok(!this.isRegistered(e.id)), this.items[e.id] = e, this.emit("register", e)
        }, t.prototype.deregister = function (e) {
            r.ok(this.isRegistered(e.id)), delete this.items[e.id], this.emit("deregister", e)
        }, t.prototype.isRegistered = function (e) {
            return this.items.hasOwnProperty(e)
        }, t.prototype.getItem = function (e) {
            return this.items[e] || null
        }, t.prototype.dispose = function () {
            e.prototype.dispose.call(this), delete this.items
        }, t
    }(s.EventEmitter);
    t.ItemRegistry = l;
    var d = function (e) {
        function t(t, n, i, o, r) {
            e.call(this), this.registry = n, this.context = i, this.lock = o, this.element = r, this.id = t, this.registry.register(this), this.doesHaveChildren = this.context.dataSource.hasChildren(this.context.tree, this.element), this.needsChildrenRefresh = !0, this.parent = null, this.previous = null, this.next = null, this.firstChild = null, this.lastChild = null, this.userContent = null, this.traits = {}, this.depth = 0, this.maxDepth = 0, this.expanded = !1, this.emit("item:create", {item: this}), this.visible = this._isVisible(), this.height = this._getHeight()
        }

        return __extends(t, e), t.prototype.getElement = function () {
            return this.element
        }, t.prototype.hasChildren = function () {
            return this.doesHaveChildren
        }, t.prototype.setHasChildren = function (e) {
            var t = e !== this.doesHaveChildren;
            if (this.doesHaveChildren = e, t) {
                var n = {item: this};
                this.emit("item:refresh", n)
            }
        }, t.prototype.getDepth = function () {
            return this.depth
        }, t.prototype.getMaxDepth = function () {
            return this.maxDepth
        }, t.prototype.isVisible = function () {
            return this.visible
        }, t.prototype.setVisible = function (e) {
            this.visible = e
        }, t.prototype.isExpanded = function () {
            return this.expanded
        }, t.prototype._setExpanded = function (e) {
            this.expanded = e
        }, t.prototype.reveal = function (e) {
            "undefined" == typeof e && (e = null);
            var t = {item: this, relativeTop: e};
            this.emit("item:reveal", t)
        }, t.prototype.expand = function () {
            var e = this;
            if (this.isExpanded() || !this.doesHaveChildren || this.lock.isLocked(this))return a.Promise.as(!1);
            var t = this.lock.run(this, function () {
                var t, n = {item: e};
                return e.emit("item:expanding", n), t = e.needsChildrenRefresh ? e.refreshChildren(!1, !0, !0) : a.Promise.as(null), t.then(function () {
                    return e._setExpanded(!0), e.emit("item:expanded", n), !0
                })
            });
            return t.then(function (t) {
                return t && null !== e.firstChild && e.firstChild === e.lastChild ? e.firstChild.expand().then(function () {
                    return!0
                }) : t
            })
        }, t.prototype.collapse = function (e) {
            "undefined" == typeof e && (e = !1);
            var t = this;
            if (e) {
                var n = a.Promise.as(null);
                return this.forEachChild(function (e) {
                    n = n.then(function () {
                        return e.collapse(!0)
                    })
                }), n.then(function () {
                    return t.collapse(!1)
                })
            }
            return!this.isExpanded() || this.lock.isLocked(this) ? a.Promise.as(!1) : this.lock.run(this, function () {
                var e = {item: t};
                return t.emit("item:collapsing", e), t._setExpanded(!1), t.emit("item:collapsed", e), a.Promise.as(!0)
            })
        }, t.prototype.addTrait = function (e) {
            var t = {item: this, trait: e};
            this.traits[e] = !0, this.emit("item:addTrait", t)
        }, t.prototype.removeTrait = function (e) {
            var t = {item: this, trait: e};
            delete this.traits[e], this.emit("item:removeTrait", t)
        }, t.prototype.hasTrait = function (e) {
            return this.traits[e] || !1
        }, t.prototype.getAllTraits = function () {
            var e, t = [];
            for (e in this.traits)this.traits.hasOwnProperty(e) && this.traits[e] && t.push(e);
            return t
        }, t.prototype.getHeight = function () {
            return this.height
        }, t.prototype.refreshChildren = function (e, n, i) {
            "undefined" == typeof n && (n = !1), "undefined" == typeof i && (i = !1);
            var o = this;
            if (!i && !this.isExpanded())return this.needsChildrenRefresh = !0, a.Promise.as(this);
            this.needsChildrenRefresh = !1;
            var r, s = function () {
                var i = {item: o, isNested: n};
                o.emit("item:childrenRefreshing", i);
                var s;
                return s = o.doesHaveChildren ? o.context.dataSource.getChildren(o.context.tree, o.element) : a.Promise.as([]), s.then(function (n) {
                    n = n ? n.slice(0) : [], n = o.sort(n), r = n.length > 0;
                    for (var i = {}; null !== o.firstChild;)i[o.firstChild.id] = o.firstChild, o.removeChild(o.firstChild);
                    for (var s = 0, u = n.length; u > s; s++) {
                        var l = n[s], d = o.context.dataSource.getId(o.context.tree, l), c = i[d] || new t(d, o.registry, o.context, o.lock, l);
                        e && (c.needsChildrenRefresh = e), delete i[d], o.addChild(c)
                    }
                    for (var d in i)i.hasOwnProperty(d) && i[d].dispose();
                    return e ? a.Promise.join(o.mapEachChild(function (t) {
                        return t.doRefresh(e, !0)
                    })) : a.Promise.as(null)
                }).then(function () {
                    o.emit("item:childrenRefreshed", i)
                })
            }, u = n ? s() : this.lock.run(this, s);
            return u.then(function () {
                return o.setHasChildren(r), o.doesHaveChildren ? void 0 : o.collapse()
            })
        }, t.prototype.doRefresh = function (e, t) {
            "undefined" == typeof t && (t = !1);
            var n = {item: this};
            return this.doesHaveChildren = this.context.dataSource.hasChildren(this.context.tree, this.element), this.height = this._getHeight(), this.setVisible(this._isVisible()), this.emit("item:refresh", n), this.refreshChildren(e, t)
        }, t.prototype.refresh = function (e) {
            return this.doRefresh(e)
        }, t.prototype.getNavigator = function () {
            return new h(this)
        }, t.prototype.intersects = function (e) {
            return this.isAncestorOf(e) || e.isAncestorOf(this)
        }, t.prototype.isAncestorOf = function (e) {
            for (; e;) {
                if (e.id === this.id)return!0;
                e = e.parent
            }
            return!1
        }, t.prototype.addChild = function (e, t) {
            "undefined" == typeof t && (t = this.lastChild);
            var n = null === this.firstChild, i = null === t, o = t === this.lastChild;
            n ? (this.firstChild = this.lastChild = e, e.next = e.previous = null) : i ? (this.firstChild.previous = e, e.next = this.firstChild, e.previous = null, this.firstChild = e) : o ? (this.lastChild.next = e, e.next = null, e.previous = this.lastChild, this.lastChild = e) : (e.previous = t, e.next = t.next, t.next.previous = e, t.next = e), e.parent = this, e.depth = this.depth + 1;
            for (var r = this, s = e.maxDepth + 1; r && r.maxDepth < s;)r.maxDepth = s++, r = r.parent
        }, t.prototype.removeChild = function (e) {
            var t = this.firstChild === e, n = this.lastChild === e;
            t && n ? this.firstChild = this.lastChild = null : t ? (e.next.previous = null, this.firstChild = e.next) : n ? (e.previous.next = null, this.lastChild = e.previous) : (e.next.previous = e.previous, e.previous.next = e.next), e.parent = null, e.depth = null;
            for (var i = this, o = e.maxDepth + 1; i && i.maxDepth === o;)o = i.maxDepth + 1, i.maxDepth = Math.max.apply(null, this.mapEachChild(function (e) {
                return e.maxDepth
            })) + 1, i = i.parent
        }, t.prototype.forEachChild = function (e) {
            for (var t, n = this.firstChild; n;)t = n.next, e(n), n = t
        }, t.prototype.mapEachChild = function (e) {
            var t = [];
            return this.forEachChild(function (n) {
                t.push(e(n))
            }), t
        }, t.prototype.sort = function (e) {
            var t = this;
            return this.context.sorter ? e.sort(function (e, n) {
                return t.context.sorter.compare(t.context.tree, e, n)
            }) : e
        }, t.prototype._getHeight = function () {
            return this.context.renderer.getHeight(this.context.tree, this.element)
        }, t.prototype._isVisible = function () {
            return this.context.filter.isVisible(this.context.tree, this.element)
        }, t.prototype.dispose = function () {
            this.forEachChild(function (e) {
                return e.dispose()
            }), delete this.parent, delete this.previous, delete this.next, delete this.firstChild, delete this.lastChild;
            var t = {item: this};
            this.emit("item:dispose", t), this.registry.deregister(this), e.prototype.dispose.call(this)
        }, t
    }(s.EventEmitter);
    t.Item = d;
    var c = function (e) {
        function t(t, n, i, o, r) {
            e.call(this, t, n, i, o, r)
        }

        return __extends(t, e), t.prototype.isVisible = function () {
            return!1
        }, t.prototype.setVisible = function () {
        }, t.prototype.isExpanded = function () {
            return!0
        }, t.prototype._setExpanded = function () {
        }, t.prototype.render = function () {
        }, t.prototype._getHeight = function () {
            return 0
        }, t.prototype._isVisible = function () {
            return!1
        }, t
    }(d), h = function () {
        function e(e, t) {
            "undefined" == typeof t && (t = !0), this.item = e, this.start = t ? e : null
        }

        return e.lastDescendantOf = function (t) {
            return t ? t.isVisible() && t.isExpanded() && null !== t.lastChild ? e.lastDescendantOf(t.lastChild) : t : null
        }, e.prototype.current = function () {
            return this.item || null
        }, e.prototype.next = function () {
            if (this.item)do if ((this.item instanceof c || this.item.isVisible() && this.item.isExpanded()) && this.item.firstChild)this.item = this.item.firstChild; else if (this.item === this.start)this.item = null; else {
                for (; this.item && this.item !== this.start && !this.item.next;)this.item = this.item.parent;
                this.item === this.start && (this.item = null), this.item = this.item ? this.item.next : null
            } while (this.item && !this.item.isVisible());
            return this.item || null
        }, e.prototype.previous = function () {
            if (this.item)do {
                var t = e.lastDescendantOf(this.item.previous);
                this.item = t ? t : this.item.parent && this.item.parent !== this.start && this.item.parent.isVisible() ? this.item.parent : null
            } while (this.item && !this.item.isVisible());
            return this.item || null
        }, e.prototype.parent = function () {
            if (this.item) {
                var e = this.item.parent;
                this.item = e && e !== this.start && e.isVisible() ? e : null
            }
            return this.item || null
        }, e.prototype.first = function () {
            return this.item = this.start, this.next(), this.item || null
        }, e.prototype.last = function () {
            return this.start && this.start.isExpanded() && (this.item = this.start.lastChild, this.item && !this.item.isVisible() && this.previous()), this.item || null
        }, e
    }();
    t.TreeNavigator = h;
    var p = function (e) {
        function t(t) {
            e.call(this), this.context = t, this.input = null, this.traitsToItems = {}
        }

        return __extends(t, e), t.prototype.setInput = function (e) {
            var t = this, n = {item: this.input};
            this.emit("clearingInput", n), this.setSelection([]), this.setFocus(), this.setHighlight(), this.lock = new u, this.input && this.input.dispose(), this.registry && (this.registry.dispose(), this.unbindRegistryListener()), this.registry = new l, this.unbindRegistryListener = this.registry.addListener("register", function (e) {
                var n = t.addEmitter(e), i = t.registry.addListener("deregister", function (o) {
                    if (o.id === e.id) {
                        for (var r = o.getAllTraits(), s = 0, a = r.length; a > s; s++) {
                            var u = r[s];
                            delete t.traitsToItems[u][o.id]
                        }
                        n(), i()
                    }
                })
            });
            var i = this.context.dataSource.getId(this.context.tree, e);
            return this.input = new c(i, this.registry, this.context, this.lock, e), n = {item: this.input}, this.emit("setInput", n), this.refresh(this.input)
        }, t.prototype.getInput = function () {
            return this.input ? this.input.getElement() : null
        }, t.prototype.refresh = function (e, t) {
            "undefined" == typeof e && (e = null), "undefined" == typeof t && (t = !0);
            var n = this;
            try {
                var i = this.getItem(e)
            } catch (o) {
                return a.Promise.as(null)
            }
            var r = {item: i, recursive: t};
            return this.emit("refreshing", r), i.refresh(t).then(function () {
                n.emit("refreshed", r)
            })
        }, t.prototype.refreshAll = function (e, t) {
            "undefined" == typeof t && (t = !0);
            var n = this, i = [];
            return this.deferredEmit(function () {
                for (var o = 0, r = e.length; r > o; o++)i.push(n.refresh(e[o], t))
            }), a.Promise.join(i)
        }, t.prototype.expand = function (e) {
            try {
                return this.getItem(e).expand()
            } catch (t) {
                return a.Promise.as(!1)
            }
        }, t.prototype.expandAll = function (e) {
            for (var t = [], n = 0, i = e.length; i > n; n++)t.push(this.expand(e[n]));
            return a.Promise.join(t)
        }, t.prototype.collapse = function (e, t) {
            "undefined" == typeof t && (t = !1);
            try {
                return this.getItem(e).collapse(t)
            } catch (n) {
                return a.Promise.as(!1)
            }
        }, t.prototype.collapseAll = function (e, t) {
            "undefined" == typeof e && (e = null), "undefined" == typeof t && (t = !1), e || (e = [this.input], t = !0);
            for (var n = [], i = 0, o = e.length; o > i; i++)n.push(this.collapse(e[i], t));
            return a.Promise.join(n)
        }, t.prototype.toggleExpansion = function (e) {
            return this.isExpanded(e) ? this.collapse(e) : this.expand(e)
        }, t.prototype.toggleExpansionAll = function (e) {
            for (var t = [], n = 0, i = e.length; i > n; n++)t.push(this.toggleExpansion(e[n]));
            return a.Promise.join(t)
        }, t.prototype.isExpanded = function (e) {
            try {
                return this.getItem(e).isExpanded()
            } catch (t) {
                return!1
            }
        }, t.prototype.reveal = function (e, t) {
            "undefined" == typeof t && (t = null);
            var n = this;
            return this.resolveUnknownParentChain(e).then(function (e) {
                var t = a.Promise.as(null);
                return e.forEach(function (e) {
                    t = t.then(function () {
                        return n.expand(e)
                    })
                }), t
            }).then(function () {
                try {
                    n.getItem(e).reveal(t)
                } catch (i) {
                }
            })
        }, t.prototype.resolveUnknownParentChain = function (e) {
            var t = this;
            return this.context.dataSource.getParent(this.context.tree, e).then(function (e) {
                return e ? t.resolveUnknownParentChain(e).then(function (t) {
                    return t.push(e), t
                }) : a.Promise.as([])
            })
        }, t.prototype.setHighlight = function (e, t) {
            var n = this.getHighlight();
            this.setTraits("highlighted", e ? [e] : []), n && this.isElementInTree(n) && n !== e && this.refresh(n, !1);
            var i = {highlight: this.getHighlight(), payload: t};
            this.emit("highlight", i)
        }, t.prototype.getHighlight = function () {
            var e = this.getElementsWithTrait("highlighted");
            return 0 === e.length ? null : e[0]
        }, t.prototype.isHighlighted = function (e) {
            try {
                return this.getItem(e).hasTrait("highlighted")
            } catch (t) {
                return!1
            }
        }, t.prototype.select = function (e, t) {
            this.selectAll([e], t)
        }, t.prototype.selectAll = function (e, t) {
            this.addTraits("selected", e);
            var n = {selection: this.getSelection(), payload: t};
            this.emit("selection", n)
        }, t.prototype.deselect = function (e, t) {
            this.deselectAll([e], t)
        }, t.prototype.deselectAll = function (e, t) {
            this.removeTraits("selected", e);
            var n = {selection: this.getSelection(), payload: t};
            this.emit("selection", n)
        }, t.prototype.setSelection = function (e, t) {
            this.setTraits("selected", e);
            var n = {selection: this.getSelection(), payload: t};
            this.emit("selection", n)
        }, t.prototype.isSelected = function (e) {
            try {
                return this.getItem(e).hasTrait("selected")
            } catch (t) {
                return!1
            }
        }, t.prototype.getSelection = function () {
            return this.getElementsWithTrait("selected")
        }, t.prototype.selectNext = function (e, t) {
            "undefined" == typeof e && (e = 1);
            for (var n, i = this.getSelection(), o = i.length > 0 ? i[0] : this.input, r = this.getNavigator(o, !1), s = 0; e > s && (n = r.next(), n); s++)o = n;
            this.setSelection([o], t)
        }, t.prototype.selectPrevious = function (e, t) {
            "undefined" == typeof e && (e = 1);
            var n = this.getSelection();
            if (0 === n.length) {
                for (var i = this.getNavigator(this.input), o = null, r = null; o = i.next();)r = o;
                return this.setSelection([r], t), void 0
            }
            for (var r, o = n[0], i = this.getNavigator(o, !1), s = 0; e > s && (r = i.previous(), r); s++)o = r;
            this.setSelection([o], t)
        }, t.prototype.selectParent = function (e) {
            var t = this.getSelection(), n = t.length > 0 ? t[0] : this.input, i = this.getNavigator(n, !1), o = i.parent();
            o && this.setSelection([o], e)
        }, t.prototype.setFocus = function (e, t) {
            this.setTraits("focused", e ? [e] : []);
            var n = {focus: this.getFocus(), payload: t};
            this.emit("focus", n)
        }, t.prototype.isFocused = function (e) {
            try {
                return this.getItem(e).hasTrait("focused")
            } catch (t) {
                return!1
            }
        }, t.prototype.getFocus = function () {
            var e = this.getElementsWithTrait("focused");
            return 0 === e.length ? null : e[0]
        }, t.prototype.focusNext = function (e, t) {
            "undefined" == typeof e && (e = 1);
            for (var n, i = this.getFocus() || this.input, o = this.getNavigator(i, !1), r = 0; e > r && (n = o.next(), n); r++)i = n;
            this.setFocus(i, t)
        }, t.prototype.focusPrevious = function (e, t) {
            "undefined" == typeof e && (e = 1);
            for (var n, i = this.getFocus() || this.input, o = this.getNavigator(i, !1), r = 0; e > r && (n = o.previous(), n); r++)i = n;
            this.setFocus(i, t)
        }, t.prototype.focusParent = function (e) {
            var t = this.getFocus() || this.input, n = this.getNavigator(t, !1), i = n.parent();
            i && this.setFocus(i, e)
        }, t.prototype.focusFirst = function (e) {
            var t = this.getNavigator(this.input), n = t.first();
            n && this.setFocus(n, e)
        }, t.prototype.focusLast = function (e) {
            var t = this.getNavigator(this.input), n = t.last();
            n && this.setFocus(n, e)
        }, t.prototype.getNavigator = function (e, t) {
            "undefined" == typeof e && (e = null), "undefined" == typeof t && (t = !0);
            var n = null;
            try {
                n = this.getItem(e)
            } catch (i) {
            }
            return new h(n, t)
        }, t.prototype.isElementInTree = function (e) {
            return this.registry.isRegistered(this.context.dataSource.getId(this.context.tree, e))
        }, t.prototype.getItem = function (e) {
            "undefined" == typeof e && (e = null);
            var t;
            if (t = null === e ? this.input : e instanceof d ? e : "string" == typeof e ? this.registry.getItem(e) : this.registry.getItem(this.context.dataSource.getId(this.context.tree, e)), null === t)throw new Error("No such element in the tree");
            return t
        }, t.prototype.addTraits = function (e, t) {
            for (var n, i = this.traitsToItems[e] || {}, o = 0, r = t.length; r > o; o++)try {
                n = this.getItem(t[o]), n.addTrait(e), i[n.id] = n
            } catch (s) {
            }
            this.traitsToItems[e] = i
        }, t.prototype.removeTraits = function (e, t) {
            var n, i, o = this.traitsToItems[e] || {};
            if (0 === t.length) {
                for (i in o)o.hasOwnProperty(i) && (n = o[i], n.removeTrait(e));
                delete this.traitsToItems[e]
            } else for (var r = 0, s = t.length; s > r; r++)try {
                n = this.getItem(t[r]), n.removeTrait(e), delete o[n.id]
            } catch (a) {
            }
        }, t.prototype.setTraits = function (e, t) {
            if (0 === t.length)this.removeTraits(e, t); else {
                for (var n, i = {}, o = 0, r = t.length; r > o; o++)try {
                    n = this.getItem(t[o]), i[n.id] = n
                } catch (s) {
                }
                var a, u = this.traitsToItems[e] || {}, l = [];
                for (a in u)u.hasOwnProperty(a) && (i.hasOwnProperty(a) ? delete i[a] : l.push(u[a]));
                for (var o = 0, r = l.length; r > o; o++)n = l[o], n.removeTrait(e), delete u[n.id];
                for (a in i)i.hasOwnProperty(a) && (n = i[a], n.addTrait(e), u[a] = n);
                this.traitsToItems[e] = u
            }
        }, t.prototype.getElementsWithTrait = function (e) {
            var t, n = [], i = this.traitsToItems[e] || {};
            for (t in i)i.hasOwnProperty(t) && n.push(i[t].getElement());
            return n
        }, t.prototype.dispose = function () {
            this.registry && (this.registry.dispose(), this.registry = null), e.prototype.dispose.call(this)
        }, t
    }(s.EventEmitter);
    t.TreeModel = p
}), define("vs/base/ui/widgets/tree/tree", ["require", "exports"], function (e, t) {
    "use strict";
    !function (e) {
        e[e.NONE = 0] = "NONE", e[e.ACCEPT = 1] = "ACCEPT", e[e.BUBBLE_UP = 2] = "BUBBLE_UP"
    }(t.DragOverReaction || (t.DragOverReaction = {})), t.DragOverReaction
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/base/ui/widgets/tree/treeView", ["require", "exports", "./tree", "vs/base/lib/winjs.base", "vs/base/dom/dom", "vs/base/dom/touch", "vs/base/dom/mouseEvent", "vs/base/dom/keyboardEvent", "vs/base/ui/scrollbar/impl/scrollableElement"], function (e, t, n, i, o, r, s, a, u) {
    "use strict";
    var l = n, d = i, c = o, h = r, p = s, f = a, g = u, m = function () {
        function e(e) {
            this.elements = e
        }

        return e.prototype.update = function () {
        }, e.prototype.getData = function () {
            return this.elements
        }, e
    }();
    t.ElementsDragAndDropData = m;
    var v = function () {
        function e() {
        }

        return e.prototype.update = function (e) {
            this.types = e.dataTransfer.types || this.types, this.files = e.dataTransfer.files || this.files
        }, e.prototype.getData = function () {
            return{types: this.types, files: this.files}
        }, e
    }();
    t.DesktopDragAndDropData = v;
    var y = function () {
        function e(e, t) {
            this.model = e, this.id = this.model.id, this.top = t, this.height = e.getHeight()
        }

        return e
    }();
    t.ViewItem = y;
    var b = function () {
        function e() {
            this.heightMap = [], this.indexes = {}
        }

        return e.prototype.getTotalHeight = function () {
            var e = this.heightMap[this.heightMap.length - 1];
            return e ? e.top + e.height : 0
        }, e.prototype.onInsertItems = function (e, t) {
            "undefined" == typeof t && (t = null);
            var n, i, o, r, s = 0;
            null === t ? (o = 0, r = 0) : (o = this.indexes[t.id] + 1, r = this.heightMap[o - 1].top + this.heightMap[o - 1].height);
            for (var a = this.heightMap.splice.bind(this.heightMap, o, 0), u = []; n = e.next();)i = new y(n, r + s), this.indexes[n.id] = o++, u.push(i), s += i.height, this.onInsertItem(i);
            if (0 !== s)for (a.apply(this.heightMap, u); o < this.heightMap.length; o++)i = this.heightMap[o], i.top += s, this.indexes[i.id] = o, this.onRefreshItem(i)
        }, e.prototype.onInsertItem = function () {
        }, e.prototype.onRemoveItems = function (e) {
            for (var t, n, i, o = null, r = 0; t = e.next();)i = this.indexes[t.id], n = this.heightMap[i], r -= n.height, delete this.indexes[t.id], this.onRemoveItem(n), null === o && (o = i);
            if (0 !== r)for (this.heightMap.splice(o, i - o + 1), i = o; i < this.heightMap.length; i++)n = this.heightMap[i], n.top += r, this.indexes[n.id] = i, this.onRefreshItem(n)
        }, e.prototype.onRemoveItem = function () {
        }, e.prototype.onRefreshItemSet = function (e) {
            var t = this;
            this.onRefreshItems(new C(e.sort(function (e, n) {
                return t.indexes[e.id] - t.indexes[n.id]
            })))
        }, e.prototype.onRefreshItems = function (e) {
            for (var t, n, i, o, r = null, s = 0; t = e.next();) {
                for (o = this.indexes[t.id]; 0 !== s && null !== r && o > r; r++)n = this.heightMap[r], n.top += s, this.onRefreshItem(n);
                n = this.heightMap[o], i = t.getHeight(), n.top += s, s += i - n.height, n.height = i, this.onRefreshItem(n, !0), r = o + 1
            }
            if (0 !== s && null !== r)for (; r < this.heightMap.length; r++)n = this.heightMap[r], n.top += s, this.onRefreshItem(n)
        }, e.prototype.onRefreshItem = function (e, t) {
            "undefined" == typeof t && (t = !1)
        }, e.prototype.itemsCount = function () {
            return this.heightMap.length
        }, e.prototype.itemAt = function (e) {
            return this.heightMap[this.indexAt(e)].id
        }, e.prototype.withItemsInRange = function (e, t, n) {
            e = this.indexAt(e), t = this.indexAt(t);
            for (var i = e; t >= i; i++)n(this.heightMap[i].id)
        }, e.prototype.indexAt = function (e) {
            for (var t, n, i = 0, o = this.heightMap.length; o > i;)if (t = Math.floor((i + o) / 2), n = this.heightMap[t], e < n.top)o = t; else {
                if (!(e >= n.top + n.height))return t;
                if (i === t)break;
                i = t
            }
            return this.heightMap.length
        }, e.prototype.indexAfter = function (e) {
            return Math.min(this.indexAt(e) + 1, this.heightMap.length)
        }, e.prototype.itemAtIndex = function (e) {
            return this.heightMap[e]
        }, e.prototype.dispose = function () {
            this.heightMap = null, this.indexes = null
        }, e
    }();
    t.HeightMap = b;
    var C = function () {
        function e(e) {
            this.items = e, this.index = -1
        }

        return e.prototype.current = function () {
            return this.items[this.index] || null
        }, e.prototype.next = function () {
            return this.index = Math.min(this.index + 1, this.items.length), this.items[this.index]
        }, e.prototype.previous = function () {
            return this.index = Math.max(this.index - 1, -1), this.items[this.index]
        }, e.prototype.parent = function () {
            return this.index = this.items.length, this.items[this.index]
        }, e.prototype.first = function () {
            return this.index = 0, this.items[this.index]
        }, e.prototype.last = function () {
            return this.index = this.items.length - 1, this.items[this.index]
        }, e
    }(), E = function (e) {
        function t(t, n) {
            var i = this;
            e.call(this), this.isRefreshing = !1, this.context = t, this.modelListeners = [], this.viewListeners = [], this.dragAndDropListeners = [], this.model = null, this.items = {}, this.domNode = document.createElement("div"), this.domNode.className = "monaco-vtree", this.domNode.tabIndex = 0, this.context.options.alwaysFocused && c.addClass(this.domNode, "focused"), this.context.options.bare && c.addClass(this.domNode, "bare"), this.wrapper = document.createElement("div"), this.wrapper.className = "monaco-vtree-wrapper", this.scrollable = new g.ScrollableElement(this.wrapper, {horizontal: t.options.horizontalScrollMode || "hidden", vertical: t.options.verticalScrollMode || "auto"}), this.rowsContainer = document.createElement("div"), this.rowsContainer.className = "rows", this.fakeRow = document.createElement("div"), this.fakeRow.className = "row fake", this.fakeContent = document.createElement("div"), this.fakeContent.className = "content", this.fakeRow.appendChild(this.fakeContent), this.rowsContainer.appendChild(this.fakeRow);
            var o = c.trackFocus(this.domNode);
            o.addFocusListener(function (e) {
                return i.onFocus(e)
            }), o.addBlurListener(function (e) {
                return i.onBlur(e)
            }), this.viewListeners.push(function () {
                o.dispose()
            }), this.viewListeners.push(c.addListener(this.domNode, "keydown", function (e) {
                return i.onKeyDown(e)
            })), this.viewListeners.push(c.addListener(this.domNode, "keyup", function (e) {
                return i.onKeyUp(e)
            })), this.viewListeners.push(c.addListener(this.wrapper, "click", function (e) {
                return i.onClick(e)
            })), this.viewListeners.push(c.addListener(this.wrapper, "contextmenu", function (e) {
                return i.onContextMenu(e)
            })), this.viewListeners.push(c.addListener(this.wrapper, "scroll", function (e) {
                return i.onScroll(e)
            })), this.viewListeners.push(c.addListener(this.wrapper, h.EventType.Tap, function (e) {
                return i.onTap(e)
            })), this.viewListeners.push(c.addListener(this.wrapper, h.EventType.Change, function (e) {
                return i.onTouchChange(e)
            })), this.viewListeners.push(c.addListener(window, "dragover", function (e) {
                return i.onDragOver(e)
            })), this.viewListeners.push(c.addListener(window, "drop", function (e) {
                return i.onDrop(e)
            })), this.viewListeners.push(c.addListener(window, "dragend", function (e) {
                return i.onDragEnd(e)
            })), this.viewListeners.push(c.addListener(window, "dragleave", function (e) {
                return i.onDragOver(e)
            })), this.wrapper.appendChild(this.rowsContainer), this.domNode.appendChild(this.scrollable.getDomNode()), n.appendChild(this.domNode), this.scrollTop = 0, this.viewTop = 0, this.viewHeight = 0, this.renderTop = 0, this.renderHeight = 0, this.currentDropFeedbackHTMLElements = [], this.dragAndDropScrollInterval = null, this.dragAndDropScrollTimeout = null, this.onHiddenScrollTop = null, this.onRowsChanged(), this.layout()
        }

        return __extends(t, e), t.prototype.getHTMLElement = function () {
            return this.domNode
        }, t.prototype.focus = function () {
            this.domNode.focus()
        }, t.prototype.isFocused = function () {
            return document.activeElement === this.domNode
        }, t.prototype.blur = function () {
            this.domNode.blur()
        }, t.prototype.onVisible = function () {
            this.wrapper.scrollTop = this.onHiddenScrollTop, this.onHiddenScrollTop = null, this.scrollable.onElementDimensions(), this.scrollable.onElementInternalDimensions()
        }, t.prototype.onHidden = function () {
            this.onHiddenScrollTop = this.wrapper.scrollTop
        }, t.prototype.isTreeVisible = function () {
            return null === this.onHiddenScrollTop
        }, t.prototype.layout = function (e) {
            if (this.isTreeVisible()) {
                this.viewTop = c.getTopLeftOffset(this.wrapper).top;
                var t = this.wrapper.scrollTop, n = e || c.getContentHeight(this.wrapper);
                this.scrollable.onElementDimensions(), this.render(t, n)
            }
        }, t.prototype.render = function (e, n) {
            var i, o, r = e + n, s = this.scrollTop + this.viewHeight, a = e - t.RENDER_BUFFER;
            a = Math.max(a, 0);
            var u = r + t.RENDER_BUFFER, l = 0 === s ? 0 : s + t.RENDER_BUFFER;
            for (i = this.indexAt(a), o = Math.min(this.indexAt(this.renderTop), this.indexAfter(u)); o > i; i++)this.insertItemInDOM(this.itemAtIndex(i));
            for (i = this.indexAt(Math.max(l, a)), o = this.indexAfter(u); o > i; i++)this.insertItemInDOM(this.itemAtIndex(i));
            for (i = this.indexAt(this.renderTop), o = Math.min(this.indexAt(a), this.indexAfter(l)); o > i; i++)this.removeItemFromDOM(this.itemAtIndex(i));
            for (i = Math.max(this.indexAfter(u), this.indexAt(this.renderTop)), o = this.indexAfter(l); o > i; i++)this.removeItemFromDOM(this.itemAtIndex(i));
            this.scrollTop = e, this.viewHeight = n, this.renderTop = a, this.renderHeight = u - a
        }, t.prototype.setModel = function (e) {
            var t = this;
            this.releaseModel(), this.model = e, this.modelListeners.push(this.model.addBulkListener(function (e) {
                return t.onModelEvents(e)
            }))
        }, t.prototype.onModelEvents = function (e) {
            for (var t = [], n = 0, i = e.length; i > n; n++) {
                var o = e[n], r = o.getData();
                switch (o.getType()) {
                    case"refreshing":
                        this.onRefreshing();
                        break;
                    case"refreshed":
                        this.onRefreshed();
                        break;
                    case"clearingInput":
                        this.onClearingInput(r);
                        break;
                    case"setInput":
                        this.onSetInput(r);
                        break;
                    case"item:childrenRefreshing":
                        this.onItemChildrenRefreshing(r);
                        break;
                    case"item:childrenRefreshed":
                        this.onItemChildrenRefreshed(r);
                        break;
                    case"item:refresh":
                        t.push(r.item);
                        break;
                    case"item:expanding":
                        this.onItemExpanding(r);
                        break;
                    case"item:expanded":
                        this.onItemExpanded(r);
                        break;
                    case"item:collapsing":
                        this.onItemCollapsing(r);
                        break;
                    case"item:reveal":
                        this.onItemReveal(r);
                        break;
                    case"item:addTrait":
                        this.onItemAddTrait(r);
                        break;
                    case"item:removeTrait":
                        this.onItemRemoveTrait(r)
                }
            }
            t.length > 0 && this.onItemsRefresh(t)
        }, t.prototype.onRefreshing = function () {
            this.isRefreshing = !0
        }, t.prototype.onRefreshed = function () {
            this.isRefreshing = !1, this.onRowsChanged()
        }, t.prototype.onRowsChanged = function () {
            this.isRefreshing || (this.rowsContainer.style.height = this.getTotalHeight() + "px", this.scrollable.onElementInternalDimensions())
        }, t.prototype.withFakeRow = function (e) {
            return e(this.fakeContent)
        }, t.prototype.focusNextPage = function (e) {
            var t = this, n = this.indexAt(this.scrollTop + this.viewHeight);
            n = 0 === n ? 0 : n - 1;
            var i = this.itemAtIndex(n).model.getElement(), o = this.model.getFocus();
            if (o !== i)this.model.setFocus(i, e); else {
                var r = this.wrapper.scrollTop;
                this.wrapper.scrollTop += this.viewHeight, this.wrapper.scrollTop !== r && setTimeout(function () {
                    t.focusNextPage(e)
                }, 0)
            }
        }, t.prototype.focusPreviousPage = function (e) {
            var t, n = this;
            t = 0 === this.wrapper.scrollTop ? this.indexAt(this.scrollTop) : this.indexAfter(this.scrollTop - 1);
            var i = this.itemAtIndex(t).model.getElement(), o = this.model.getFocus();
            if (o !== i)this.model.setFocus(i, e); else {
                var r = this.wrapper.scrollTop;
                this.wrapper.scrollTop -= this.viewHeight, this.wrapper.scrollTop !== r && setTimeout(function () {
                    n.focusPreviousPage(e)
                }, 0)
            }
        }, t.prototype.onClearingInput = function (e) {
            var t = e.item;
            t && (this.onRemoveItems(t.getNavigator()), this.onRowsChanged())
        }, t.prototype.onSetInput = function (e) {
            this.inputItem = new y(e.item, 0)
        }, t.prototype.onItemChildrenRefreshing = function (e) {
            var n = e.item, i = this.items[n.id];
            i && (i.loadingPromise = d.Promise.timeout(t.LOADING_DECORATION_DELAY).then(function () {
                i.loadingPromise = null, c.addClass(i.row, "loading")
            })), e.isNested || (this.onRemoveItems(n.getNavigator()), this.onRowsChanged())
        }, t.prototype.onItemChildrenRefreshed = function (e) {
            var t = e.item, n = this.items[t.id];
            n && (n.loadingPromise && (n.loadingPromise.cancel(), n.loadingPromise = null), c.removeClass(n.row, "loading")), e.isNested || (this.onInsertItems(t.getNavigator(), 0 === t.getDepth() ? null : t), this.onRowsChanged())
        }, t.prototype.onItemsRefresh = function (e) {
            var t = this;
            e = e.filter(function (e) {
                return t.items.hasOwnProperty(e.id)
            }), this.onRefreshItemSet(e), this.onRowsChanged()
        }, t.prototype.onItemExpanding = function (e) {
            var t = this.items[e.item.id];
            t && t.row && c.addClass(t.row, "expanded")
        }, t.prototype.onItemExpanded = function (e) {
            var t = e.item, n = this.items[t.id];
            n && n.row && (c.addClass(n.row, "expanded"), this.onInsertItems(t.getNavigator(), t), this.onRowsChanged())
        }, t.prototype.onItemCollapsing = function (e) {
            var t = e.item, n = this.items[t.id];
            n && n.row && (c.removeClass(n.row, "expanded"), this.onRemoveItems(t.getNavigator()), this.onRowsChanged())
        }, t.prototype.onItemReveal = function (e) {
            var t = e.item, n = e.relativeTop, i = this.items[t.id];
            if (i && i.row)if (null !== n) {
                n = 0 > n ? 0 : n, n = n > 1 ? 1 : n;
                var o = i.height - this.viewHeight;
                this.wrapper.scrollTop = o * n + i.top
            } else {
                var r = i.top + i.height, s = this.wrapper.scrollTop + this.viewHeight;
                i.top < this.wrapper.scrollTop ? this.wrapper.scrollTop = i.top : r >= s && (this.wrapper.scrollTop = r - this.viewHeight)
            }
        }, t.prototype.onItemAddTrait = function (e) {
            var t = e.item, n = e.trait, i = this.items[t.id];
            i && i.row && c.addClass(i.row, n), "highlighted" === n && (c.addClass(this.domNode, n), this.highlightedItemWasDraggable = !!i.row.draggable, i.row.draggable && (i.row.draggable = !1))
        }, t.prototype.onItemRemoveTrait = function (e) {
            var t = e.item, n = e.trait, i = this.items[t.id];
            i && i.row && c.removeClass(i.row, n), "highlighted" === n && (c.removeClass(this.domNode, n), this.highlightedItemWasDraggable && (i.row.draggable = !0), delete this.highlightedItemWasDraggable)
        }, t.prototype.onInsertItem = function (e) {
            e.needsRender = !0, this.refreshViewItem(e), this.items[e.id] = e
        }, t.prototype.onRefreshItem = function (e, t) {
            "undefined" == typeof t && (t = !1), e.needsRender = e.needsRender || t, this.refreshViewItem(e)
        }, t.prototype.onRemoveItem = function (e) {
            this.removeItemFromDOM(e), e.renderCleanupFn && (e.renderCleanupFn(this.context.tree, e.model.getElement()), delete e.renderCleanupFn), delete e.row, delete e.content, delete e.model, delete this.items[e.id]
        }, t.prototype.refreshViewItem = function (e) {
            if (!e.row) {
                e.row = document.createElement("div"), e.row.className = "row", e.row[t.BINDING] = e, e.content = document.createElement("div"), e.content.className = "content", e.row.appendChild(e.content);
                for (var n = e.model.getAllTraits(), i = 0, o = n.length; o > i; i++)c.addClass(e.row, n[i])
            }
            e.row.style.height = e.height + "px", e.row.style.top = e.top + "px", e.row.style.paddingLeft = this.context.options.twistiePixels + (e.model.getDepth() - 1) * this.context.options.indentPixels + "px", c.toggleClass(e.row, "has-children", e.model.hasChildren()), c.toggleClass(e.row, "expanded", e.model.isExpanded());
            var r = this.context.dnd.getDragURI(this.context.tree, e.model.getElement());
            r !== e.uri && (e.unbindDragStart && (e.unbindDragStart(), delete e.unbindDragStart), r ? (e.uri = r, e.row.draggable = !0, e.unbindDragStart = c.addListener(e.row, "dragstart", this.onDragStart.bind(this, e))) : delete e.uri), this.shouldBeRendered(e) ? this.insertItemInDOM(e) : this.removeItemFromDOM(e)
        }, t.prototype.onClick = function (e) {
            var t = new p.StandardMouseEvent(e), n = this.getItemAround(t.target);
            this.context.controller.onClick(this.context.tree, n.model.getElement(), t)
        }, t.prototype.onTap = function (e) {
            var t = this.getItemAround(e.initialTarget);
            this.context.controller.onTap(this.context.tree, t.model.getElement(), e)
        }, t.prototype.onTouchChange = function (e) {
            this.wrapper.scrollTop -= e.translationY
        }, t.prototype.onContextMenu = function (e) {
            var t = new p.StandardMouseEvent(e), n = this.getItemAround(t.target);
            this.context.controller.onContextMenu(this.context.tree, n.model.getElement(), t)
        }, t.prototype.onScroll = function () {
            this.render(this.wrapper.scrollTop, this.viewHeight)
        }, t.prototype.onKeyDown = function (e) {
            var t = new f.KeyboardEvent(e);
            t.target && t.target.tagName && "input" === t.target.tagName.toLowerCase() || this.context.controller.onKeyDown(this.context.tree, t)
        }, t.prototype.onKeyUp = function (e) {
            this.context.controller.onKeyUp(this.context.tree, new f.KeyboardEvent(e))
        }, t.prototype.onDragStart = function (e, t) {
            this.model.setHighlight(), t.dataTransfer.effectAllowed = "copyMove", t.dataTransfer.setData("URL", e.uri), t.dataTransfer.setDragImage && t.dataTransfer.setDragImage(e.row, t.offsetX || 6, t.offsetY || 6), this.currentDragAndDropData = new m([e.model.getElement()]), this.context.dnd.onDragStart(this.context.tree, this.currentDragAndDropData, new p.DragMouseEvent(t))
        }, t.prototype.setupDragAndDropScrollInterval = function () {
            var e = this;
            this.dragAndDropScrollInterval || (this.dragAndDropScrollInterval = window.setInterval(function () {
                if (void 0 !== e.dragAndDropMouseY) {
                    var t = e.dragAndDropMouseY - e.viewTop, n = 0, i = e.viewHeight - 35;
                    35 > t ? n = Math.max(-14, .2 * (t - 35)) : t > i && (n = Math.min(14, .2 * (t - i))), e.wrapper.scrollTop += n
                }
            }, 10), this.cancelDragAndDropScrollTimeout(), this.dragAndDropScrollTimeout = window.setTimeout(function () {
                e.cancelDragAndDropScrollInterval(), e.dragAndDropScrollTimeout = null
            }, 1e3))
        }, t.prototype.cancelDragAndDropScrollInterval = function () {
            this.dragAndDropScrollInterval && (window.clearInterval(this.dragAndDropScrollInterval), this.dragAndDropScrollInterval = null), this.cancelDragAndDropScrollTimeout()
        }, t.prototype.cancelDragAndDropScrollTimeout = function () {
            this.dragAndDropScrollTimeout && (window.clearTimeout(this.dragAndDropScrollTimeout), this.dragAndDropScrollTimeout = null)
        }, t.prototype.onDragOver = function (e) {
            var t = this, n = new p.DragMouseEvent(e), i = this.getItemAround(n.target);
            if (!i) {
                if (this.currentDropHTMLElement) {
                    for (var o; o = this.currentDropFeedbackHTMLElements.pop();)c.removeClass(o, "drop-target");
                    this.currentDropPromise && (this.currentDropPromise.cancel(), this.currentDropPromise = null)
                }
                return this.cancelDragAndDropScrollInterval(), delete this.currentDropHTMLElement, delete this.currentDropElement, delete this.dragAndDropMouseY, !1
            }
            if (this.setupDragAndDropScrollInterval(), this.dragAndDropMouseY = n.posy, !this.currentDragAndDropData) {
                if (!n.dataTransfer.types)return!1;
                this.currentDragAndDropData = new v
            }
            this.currentDragAndDropData.update(n);
            var r, s = i.model, a = !1;
            do {
                if (o = s ? s.getElement() : this.model.getInput(), r = this.context.dnd.onDragOver(this.context.tree, this.currentDragAndDropData, o, n), r !== l.DragOverReaction.BUBBLE_UP)break;
                a = !0, s = s && s.parent
            } while (s);
            if (!s)return delete this.currentDropElement, !1;
            var u = r === l.DragOverReaction.ACCEPT;
            u ? (this.currentDropElement = s.getElement(), n.preventDefault(), n.dataTransfer.dropEffect = n.ctrlKey ? "copy" : "move") : delete this.currentDropElement;
            var h = s.id === this.inputItem.id ? this.wrapper : this.items[s.id].row;
            if (this.currentDropHTMLElement !== h || this.currentDropElementDidBubbleUp !== a) {
                if (this.currentDropHTMLElement) {
                    for (var o; o = this.currentDropFeedbackHTMLElements.pop();)c.removeClass(o, "drop-target");
                    this.currentDropPromise && (this.currentDropPromise.cancel(), this.currentDropPromise = null)
                }
                if (this.currentDropHTMLElement = h, this.currentDropElementDidBubbleUp = a, u) {
                    if (c.addClass(this.currentDropHTMLElement, "drop-target"), this.currentDropFeedbackHTMLElements.push(this.currentDropHTMLElement), a)for (var f, g = s.getNavigator(); f = g.next();)i = this.items[f.id], i && i.row && (c.addClass(i.row, "drop-target"), this.currentDropFeedbackHTMLElements.push(i.row));
                    this.currentDropPromise = d.Promise.timeout(500).then(function () {
                        t.context.tree.expand(t.currentDropElement)
                    })
                }
            }
            return!0
        }, t.prototype.onDrop = function (e) {
            if (this.currentDropElement) {
                var t = new p.DragMouseEvent(e);
                t.preventDefault(), this.currentDragAndDropData.update(t), this.context.dnd.drop(this.context.tree, this.currentDragAndDropData, this.currentDropElement, t), this.onDragEnd(e)
            }
            this.cancelDragAndDropScrollInterval()
        }, t.prototype.onDragEnd = function () {
            if (this.currentDropHTMLElement)for (var e; e = this.currentDropFeedbackHTMLElements.pop();)c.removeClass(e, "drop-target");
            this.currentDropPromise && (this.currentDropPromise.cancel(), this.currentDropPromise = null), this.cancelDragAndDropScrollInterval(), delete this.currentDragAndDropData, delete this.currentDropElement, delete this.currentDropHTMLElement, delete this.dragAndDropMouseY
        }, t.prototype.onFocus = function () {
            this.context.options.alwaysFocused || c.addClass(this.domNode, "focused")
        }, t.prototype.onBlur = function () {
            this.context.options.alwaysFocused || c.removeClass(this.domNode, "focused")
        }, t.prototype.insertItemInDOM = function (e) {
            e.needsRender && (e.renderCleanupFn = this.context.renderer.render(this.context.tree, e.model.getElement(), e.content, e.renderCleanupFn), e.needsRender = !1), this.isInDOM(e) || this.rowsContainer.appendChild(e.row)
        }, t.prototype.removeItemFromDOM = function (e) {
            this.isInDOM(e) && this.rowsContainer.removeChild(e.row)
        }, t.prototype.shouldBeRendered = function (e) {
            return e.top < this.renderTop + this.renderHeight && e.top + e.height > this.renderTop
        }, t.prototype.isInDOM = function (e) {
            return!(!e.row || !e.row.parentElement)
        }, t.prototype.getItemAround = function (e) {
            var n = this.inputItem;
            do {
                if (e[t.BINDING] && (n = e[t.BINDING]), e === this.wrapper)return n;
                if (e === document.body)return null
            } while (e = e.parentElement)
        }, t.prototype.releaseModel = function () {
            if (this.model) {
                for (; this.modelListeners.length;)this.modelListeners.pop()();
                this.model = null
            }
        }, t.prototype.dispose = function () {
            for (this.scrollable.destroy(), this.releaseModel(), this.modelListeners = null; this.viewListeners.length;)this.viewListeners.pop()();
            this.viewListeners = null, this.domNode.parentNode && this.domNode.parentNode.removeChild(this.domNode), this.domNode = null, e.prototype.dispose.call(this)
        }, t.BINDING = "monaco-vtree-row", t.RENDER_BUFFER = 400, t.LOADING_DECORATION_DELAY = 800, t
    }(b);
    t.TreeView = E
}), define("vs/css!vs/base/ui/widgets/tree/tree", ["vs/css!vs/editor/editor.main"], {}), define("vs/base/ui/widgets/tree/treeDefaults", ["require", "exports", "./tree", "vs/base/env", "vs/base/errors"], function (e, t, n, i, o) {
    "use strict";
    var r = i, s = o, a = function () {
        function e() {
        }

        return e.prototype.getHeight = function () {
            return 20
        }, e.prototype.render = function (e, t, n) {
            return n.textContent = "" + t, null
        }, e
    }();
    t.DefaultRenderer = a;
    var u = function () {
        function e() {
            this.downKeyBindings = {Space: this.onSpace.bind(this), UpArrow: this.onUp.bind(this), PageUp: this.onPageUp.bind(this), DownArrow: this.onDown.bind(this), PageDown: this.onPageDown.bind(this), LeftArrow: this.onLeft.bind(this), RightArrow: this.onRight.bind(this), Escape: this.onEscape.bind(this)}, this.upKeyBindings = {Enter: this.onEnter.bind(this)}
        }

        return e.prototype.onClick = function (e, t, n) {
            var i = r.browser.isMacintosh, o = i ? n.metaKey : n.ctrlKey;
            return i && n.ctrlKey ? (n.preventDefault(), n.stopPropagation(), !1) : n.middleButton || o ? !1 : n.target && n.target.tagName && "input" === n.target.tagName.toLowerCase() ? !1 : this.onLeftClick(e, t, n)
        }, e.prototype.onLeftClick = function (e, t, n, i) {
            "undefined" == typeof i && (i = "mouse");
            var o = {origin: i};
            return e.getInput() === t ? (e.clearFocus(o), e.clearSelection(o)) : (event.preventDefault(), event.stopPropagation(), e.DOMFocus(), e.setSelection([t], o), e.setFocus(t, o), e.isExpanded(t) ? e.collapse(t).done(null, s.onUnexpectedError) : e.expand(t).done(null, s.onUnexpectedError)), !0
        }, e.prototype.onContextMenu = function () {
            return!1
        }, e.prototype.onTap = function (e, t, n) {
            var i = n.initialTarget;
            return i && i.tagName && "input" === i.tagName.toLowerCase() ? !1 : this.onLeftClick(e, t, n, "touch")
        }, e.prototype.onKeyDown = function (e, t) {
            return this.onKey(this.downKeyBindings, e, t)
        }, e.prototype.onKeyUp = function (e, t) {
            return this.onKey(this.upKeyBindings, e, t)
        }, e.prototype.onKey = function (e, t, n) {
            var i = e[n.asString()];
            return i && i(t, n) ? (n.preventDefault(), n.stopPropagation(), !0) : !1
        }, e.prototype.onUp = function (e) {
            var t = {origin: "keyboard"};
            return e.getHighlight() ? e.clearHighlight(t) : (e.focusPrevious(1, t), e.reveal(e.getFocus())), !0
        }, e.prototype.onPageUp = function (e) {
            var t = {origin: "keyboard"};
            return e.getHighlight() ? e.clearHighlight(t) : (e.focusPreviousPage(t), e.reveal(e.getFocus())), !0
        }, e.prototype.onDown = function (e) {
            var t = {origin: "keyboard"};
            return e.getHighlight() ? e.clearHighlight(t) : (e.focusNext(1, t), e.reveal(e.getFocus())), !0
        }, e.prototype.onPageDown = function (e) {
            var t = {origin: "keyboard"};
            return e.getHighlight() ? e.clearHighlight(t) : (e.focusNextPage(t), e.reveal(e.getFocus())), !0
        }, e.prototype.onLeft = function (e) {
            var t = {origin: "keyboard"};
            if (e.getHighlight())e.clearHighlight(t); else {
                var n = e.getFocus();
                e.collapse(n).done(function (i) {
                    n && !i && e.focusParent(t)
                })
            }
            return!0
        }, e.prototype.onRight = function (e) {
            var t = {origin: "keyboard"};
            if (e.getHighlight())e.clearHighlight(t); else {
                var n = e.getFocus();
                e.expand(n).done(null, s.onUnexpectedError)
            }
            return!0
        }, e.prototype.onEnter = function (e) {
            var t = {origin: "keyboard"};
            if (e.getHighlight())return!1;
            var n = e.getFocus();
            return n && e.setSelection([n], t), !0
        }, e.prototype.onSpace = function (e) {
            if (e.getHighlight())return!1;
            var t = e.getFocus();
            return t && e.toggleExpansion(t), !0
        }, e.prototype.onEscape = function (e) {
            var t = {origin: "keyboard"};
            return e.getHighlight() ? (e.clearHighlight(t), !0) : e.getFocus() || e.getSelection().length ? (e.clearFocus(t), e.clearSelection(t), !0) : !1
        }, e
    }();
    t.DefaultController = u;
    var l = function () {
        function e() {
        }

        return e.prototype.getDragURI = function () {
            return null
        }, e.prototype.onDragStart = function () {
        }, e.prototype.onDragOver = function () {
            return null
        }, e.prototype.drop = function () {
        }, e
    }();
    t.DefaultDragAndDrop = l;
    var d = function () {
        function e() {
        }

        return e.prototype.isVisible = function () {
            return!0
        }, e
    }();
    t.DefaultFilter = d;
    var c = function () {
        function e() {
        }

        return e.prototype.compare = function () {
            return 0
        }, e
    }();
    t.DefaultSorter = c
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/base/ui/widgets/tree/treeImpl", ["require", "exports", "vs/base/types", "vs/base/ui/widgets/tree/treeDefaults", "vs/base/eventEmitter", "./treeModel", "./treeView", "vs/css!./tree"], function (e, t, n, i, o, r, s) {
    "use strict";
    var a = n, u = i, l = o, d = r, c = s, h = function () {
        function e(e, t, n) {
            if ("undefined" == typeof n && (n = {}), this.tree = e, this.configuration = t, this.options = n, !t.dataSource)throw new Error("You must provide a Data Source to the tree.");
            this.dataSource = t.dataSource, this.renderer = t.renderer || new u.DefaultRenderer, this.controller = t.controller || new u.DefaultController, this.dnd = t.dnd || new u.DefaultDragAndDrop, this.filter = t.filter || new u.DefaultFilter, this.sorter = t.sorter || null;
            var i = [this.dataSource, this.renderer, this.controller, this.dnd, this.filter, this.sorter];
            i.forEach(function (t) {
                t && a.isFunction(t.setTree) && t.setTree(e)
            })
        }

        return e
    }();
    t.TreeContext = h;
    var p = function (e) {
        function t(t, n, i) {
            "undefined" == typeof i && (i = {}), e.call(this), this.container = t, this.configuration = n, this.options = i, this.options.twistiePixels = "number" == typeof this.options.twistiePixels ? this.options.twistiePixels : 20, this.options.indentPixels = "number" == typeof this.options.indentPixels ? this.options.indentPixels : 10, this.options.alwaysFocused = this.options.alwaysFocused === !0 ? !0 : !1, this.options.bare = this.options.bare === !0 ? !0 : !1, this.context = new h(this, n, i), this.model = new d.TreeModel(this.context), this.view = new c.TreeView(this.context, this.container), this.view.setModel(this.model), this.addEmitter(this.model)
        }

        return __extends(t, e), t.prototype.getHTMLElement = function () {
            return this.view.getHTMLElement()
        }, t.prototype.layout = function (e) {
            this.view.layout(e)
        }, t.prototype.DOMFocus = function () {
            this.view.focus()
        }, t.prototype.isDOMFocused = function () {
            return this.view.isFocused()
        }, t.prototype.DOMBlur = function () {
            this.view.blur()
        }, t.prototype.onVisible = function () {
            this.view.onVisible()
        }, t.prototype.onHidden = function () {
            this.view.onHidden()
        }, t.prototype.setInput = function (e) {
            return this.model.setInput(e)
        }, t.prototype.getInput = function () {
            return this.model.getInput()
        }, t.prototype.refresh = function (e, t) {
            return"undefined" == typeof e && (e = null), "undefined" == typeof t && (t = !0), this.model.refresh(e, t)
        }, t.prototype.refreshAll = function (e, t) {
            return"undefined" == typeof t && (t = !0), this.model.refreshAll(e, t)
        }, t.prototype.expand = function (e) {
            return this.model.expand(e)
        }, t.prototype.expandAll = function (e) {
            return this.model.expandAll(e)
        }, t.prototype.collapse = function (e, t) {
            return"undefined" == typeof t && (t = !1), this.model.collapse(e)
        }, t.prototype.collapseAll = function (e, t) {
            return"undefined" == typeof e && (e = null), "undefined" == typeof t && (t = !1), this.model.collapseAll(e, t)
        }, t.prototype.toggleExpansion = function (e) {
            return this.model.toggleExpansion(e)
        }, t.prototype.toggleExpansionAll = function (e) {
            return this.model.toggleExpansionAll(e)
        }, t.prototype.isExpanded = function (e) {
            return this.model.isExpanded(e)
        }, t.prototype.reveal = function (e, t) {
            return"undefined" == typeof t && (t = null), this.model.reveal(e, t)
        }, t.prototype.setHighlight = function (e, t) {
            this.model.setHighlight(e, t)
        }, t.prototype.getHighlight = function () {
            return this.model.getHighlight()
        }, t.prototype.isHighlighted = function (e) {
            return this.model.isFocused(e)
        }, t.prototype.clearHighlight = function (e) {
            this.model.setHighlight(null, e)
        }, t.prototype.select = function (e, t) {
            this.model.select(e, t)
        }, t.prototype.selectAll = function (e, t) {
            this.model.selectAll(e, t)
        }, t.prototype.deselect = function (e, t) {
            this.model.deselect(e, t)
        }, t.prototype.deselectAll = function (e, t) {
            this.model.deselectAll(e, t)
        }, t.prototype.setSelection = function (e, t) {
            this.model.setSelection(e, t)
        }, t.prototype.isSelected = function (e) {
            return this.model.isSelected(e)
        }, t.prototype.getSelection = function () {
            return this.model.getSelection()
        }, t.prototype.clearSelection = function (e) {
            this.model.setSelection([], e)
        }, t.prototype.selectNext = function (e, t) {
            this.model.selectNext(e, t)
        }, t.prototype.selectPrevious = function (e, t) {
            this.model.selectPrevious(e, t)
        }, t.prototype.selectParent = function (e) {
            this.model.selectParent(e)
        }, t.prototype.setFocus = function (e, t) {
            this.model.setFocus(e, t)
        }, t.prototype.isFocused = function (e) {
            return this.model.isFocused(e)
        }, t.prototype.getFocus = function () {
            return this.model.getFocus()
        }, t.prototype.focusNext = function (e, t) {
            this.model.focusNext(e, t)
        }, t.prototype.focusPrevious = function (e, t) {
            this.model.focusPrevious(e, t)
        }, t.prototype.focusParent = function (e) {
            this.model.focusParent(e)
        }, t.prototype.focusFirst = function (e) {
            this.model.focusFirst(e)
        }, t.prototype.focusLast = function (e) {
            this.model.focusLast(e)
        }, t.prototype.focusNextPage = function (e) {
            this.view.focusNextPage(e)
        }, t.prototype.focusPreviousPage = function (e) {
            this.view.focusPreviousPage(e)
        }, t.prototype.clearFocus = function (e) {
            this.model.setFocus(null, e)
        }, t.prototype.withFakeRow = function (e) {
            return this.view.withFakeRow(e)
        }, t.prototype.dispose = function () {
            null !== this.model && (this.model.dispose(), this.model = null), null !== this.view && (this.view.dispose(), this.view = null), e.prototype.dispose.call(this)
        }, t
    }(l.EventEmitter);
    t.Tree = p
}), define("vs/css!vs/base/ui/widgets/highlightedlabel", ["vs/css!vs/editor/editor.main"], {}), define("vs/base/ui/widgets/highlightedLabel", ["require", "exports", "vs/base/dom/dom", "vs/base/objects", "vs/css!./highlightedlabel"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function () {
        function e(e, t, n) {
            "undefined" == typeof t && (t = ""), "undefined" == typeof n && (n = []), this.domNode = document.createElement("span"), this.domNode.className = "monaco-highlighted-label", e.getHTMLElement().appendChild(this.domNode), this.text = t, this.highlights = n, this.renderedOnce = !1
        }

        return e.prototype.destroy = function () {
            this.text = null, this.highlights = null
        }, e.prototype.getHTMLElement = function () {
            return this.domNode
        }, e.prototype.setValue = function (e, t) {
            "undefined" == typeof e && (e = ""), "undefined" == typeof t && (t = []), this.renderedOnce && this.text === e && r.equals(this.highlights, t) || (this.text = e, this.highlights = t, this.render(), this.renderedOnce = !0)
        }, e.prototype.render = function () {
            o.clearNode(this.domNode);
            for (var e, t = [], n = 0, i = 0; i < this.highlights.length; i++)e = this.highlights[i], n < e.start && (t.push("<span>"), t.push(this.text.substring(n, e.start)), t.push("</span>"), n = e.end), t.push('<span class="highlight">'), t.push(this.text.substring(e.start, e.end)), t.push("</span>"), n = e.end;
            n < this.text.length && (t.push("<span>"), t.push(this.text.substring(n)), t.push("</span>")), this.domNode.innerHTML = t.join("")
        }, e
    }();
    t.HighlightedLabel = s
}), define("vs/css!vs/editor/contrib/suggest/suggest", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/suggest/suggestWidget", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/lib/winjs.base", "vs/base/errors", "vs/editor/modes/modes", "vs/base/dom/builder", "vs/base/ui/widgets/tree/preRenderer", "vs/base/ui/widgets/tree/treeImpl", "vs/base/ui/widgets/tree/treeDefaults", "vs/base/ui/widgets/highlightedLabel", "vs/editor/core/constants", "vs/editor/editor", "vs/css!./suggest"], function (e, t, n, i, o, r, s, a, u, l, d, c, h) {
    "use strict";
    function p(e, t, n) {
        for (var i = e.toLowerCase(), o = 0, r = 0; r < t.length && r < e.length; r++)if (t[r] === e[r])o += 2; else {
            if (n[r] !== i[r])break;
            o += 1
        }
        return o
    }

    var f = n, g = i, m = o, v = r, y = s, b = a, C = u, E = l, w = d, _ = c, S = h, T = y.$, L = function () {
        function e(e, t) {
            this.parent = e, this.message = t
        }

        return e
    }();
    t.Message = L;
    var N = function () {
        function e(e) {
            this.child = new L(this, e)
        }

        return e
    }();
    t.MessageRoot = N;
    var x = function () {
        function e() {
            this.root = null
        }

        return e.prototype.isRoot = function (e) {
            return e instanceof N ? !0 : e instanceof L ? !1 : e.suggestions ? (this.root = e, !0) : !1
        }, e.prototype.getId = function (t, n) {
            if (n instanceof N)return"messageroot";
            if (n instanceof L)return"message" + n.message;
            if (n.suggestions)return"root";
            if (v.isISuggestion(n))return"string" != typeof n.id && (n.id = String(e._IdPool++)), n.id;
            throw m.illegalArgument("element")
        }, e.prototype.getParent = function (e, t) {
            return t instanceof N ? g.Promise.as(null) : t instanceof L ? g.Promise.as(t.parent) : g.Promise.as(this.isRoot(t) ? null : this.root)
        }, e.prototype.getChildren = function (e, t) {
            return t instanceof N ? g.Promise.as([t.child]) : t instanceof L ? g.Promise.as([]) : g.Promise.as(this.isRoot(t) ? this.root.suggestions : [])
        }, e.prototype.hasChildren = function (e, t) {
            return this.isRoot(t)
        }, e._IdPool = 0, e
    }(), M = function (e) {
        function t() {
            e.apply(this, arguments)
        }

        return __extends(t, e), t.prototype.onLeftClick = function (e, t, n) {
            return n.preventDefault(), n.stopPropagation(), t instanceof L || e.setSelection([t], {origin: "mouse"}), !0
        }, t
    }(E.DefaultController), I = function (e) {
        function t(t, n) {
            e.call(this, t), this.editor = n
        }

        return __extends(t, e), t.prototype.getHeight = function (t, n) {
            var i = n;
            return n instanceof L || !i.documentationLabel || !t.isFocused(i) ? 19 : e.prototype.getHeight.call(this, t, n)
        }, t.prototype.render = function (e, t, n) {
            return this.renderContents(e, t, n)
        }, t.prototype.renderContents = function (e, t, n) {
            var i = T(n);
            if (t instanceof L)return i.empty().span({style: {opacity: .7, "padding-left": "12px"}, text: t.message}), null;
            var o = t, r = i.getBinding(), s = i.clone();
            if (!r) {
                s.attr("aria-label", o.type), T(".icon").addClass(o.type).appendTo(s), r = {};
                var a = T(".text").appendTo(s);
                r.main = T(".main").appendTo(a), r.highlightedLabel = new w.HighlightedLabel(r.main), r.typeLabel = T("span.type-label").appendTo(r.main), r.documentation = T(".docs").appendTo(a), r.documentationLabel = T("span.docs-label").appendTo(r.documentation), i.bind(r)
            }
            return r.highlightedLabel.setValue(o.label, o.highlights), r.typeLabel.text(o.typeLabel || ""), r.documentationLabel.text(o.documentationLabel || ""), function () {
                r.highlightedLabel.destroy()
            }
        }, t
    }(b.PreRenderer), R = function () {
        function e(t, n) {
            var i = this;
            this.editor = t, this.isActive = !1, this.isLoading = !1, this.modelListenersToRemove = [], this.model = null, this.telemetryData = null, this.telemetryService = n;
            var o = function () {
                var e = i.editor.getModel();
                i.shouldShowEmptySuggestionList = e && e.getMode().suggestSupport ? e.getMode().suggestSupport.shouldShowEmptySuggestionList() : !1
            };
            o(), this.listenersToRemove = [], this.listenersToRemove.push(t.addListener(_.EventType.ModelChanged, o)), this.listenersToRemove.push(t.addListener(_.EventType.ModelModeChanged, o)), this.builder = T(".editor-widget.suggest-widget.monaco-editor-background").style({width: e.WIDTH + "px", height: e.HEIGHT + "px"}), this.editor.getConfiguration().iconsInSuggestions || this.builder.addClass("no-icons");
            var r = new x;
            this.renderer = new I(r, this.editor), this.tree = new C.Tree(this.builder.getHTMLElement(), {dataSource: r, renderer: this.renderer, controller: new M}, {twistiePixels: 0, alwaysFocused: !0, verticalScrollMode: "visible"}), this.listenersToRemove.push(t.addListener("blur", function () {
                g.Promise.timeout(150).done(function () {
                    i.tree && !i.tree.isDOMFocused() && i.hide()
                })
            })), this.listenersToRemove.push(this.tree.addListener("selection", function (e) {
                if (e.selection && e.selection.length > 0) {
                    var t = e.selection[0];
                    t.hasOwnProperty("suggestions") || t instanceof N || t instanceof L || (i.telemetryData.selectedIndex = i.tree.getInput().suggestions.indexOf(t), i.telemetryData.wasCancelled = !1, i.submitTelemetryData(), i.model.accept(t), i.editor.focus())
                }
            }));
            var s = null;
            this.listenersToRemove.push(this.tree.addListener("focus", function (e) {
                var t = e.focus, n = e.payload;
                if (v.isISuggestion(t) && i.resolveDetails(t), t !== s) {
                    var o = [];
                    s && o.push(s), t && o.push(t), s = t, i.tree.refreshAll(o).done(function () {
                        t && i.tree.reveal(t, n && n.firstSuggestion ? 0 : null)
                    }, m.onUnexpectedError)
                }
            })), this.editor.addContentWidget(this), this.listenersToRemove.push(this.editor.addListener(_.EventType.CursorSelectionChanged, function () {
                i.isActive && i.editor.layoutContentWidget(i)
            })), this.hide()
        }

        return e.prototype.setModel = function (t) {
            var n = this;
            this.releaseModel(), this.model = t;
            var i, o = null;
            this.modelListenersToRemove.push(this.model.addListener("loading", function (t) {
                t.auto || n.isActive || (o = n.telemetryService.start("suggestWidgetLoadingTime"), n.isLoading = !0, i = setTimeout(function () {
                    n.builder.removeClass("empty"), n.tree.setInput(e.LOADING_MESSAGE).done(null, m.onUnexpectedError), n.show()
                }, 50), t.retrigger || (n.telemetryData = {wasAutomaticallyTriggered: t.characterTriggered}))
            })), this.modelListenersToRemove.push(this.model.addListener("suggest", function (e) {
                if (n.isLoading = !1, "undefined" != typeof i && clearTimeout(i), !e.auto) {
                    n.builder.removeClass("empty"), n.tree.setInput(e.suggestions).done(null, m.onUnexpectedError), n.show();
                    for (var t, r = e.suggestions.currentWord, s = r.toLowerCase(), a = e.suggestions.suggestions, u = -1, l = e.suggestions.suggestions[0], d = -1, c = 0, h = a.length; h > c; c++) {
                        t = a[c];
                        var f = p(t.label, r, s);
                        f > d && (d = f, l = t, u = c)
                    }
                    n.resolveDetails(l), n.tree.setFocus(l, {firstSuggestion: !0}), n.telemetryData.suggestionCount = a.length, n.telemetryData.suggestedIndex = u, n.telemetryData.hintLength = r.length, o && (o.data = {reason: "results"}, o.stop(), o = null)
                }
            })), this.modelListenersToRemove.push(this.model.addListener("empty", function (t) {
                var r = n.isLoading;
                n.isLoading = !1, "undefined" != typeof i && clearTimeout(i), t.auto || (r ? n.shouldShowEmptySuggestionList ? (n.builder.removeClass("empty"), n.tree.setInput(e.NO_SUGGESTIONS_MESSAGE).done(null, m.onUnexpectedError), n.show()) : n.hide() : n.builder.addClass("empty"), o && (o.data = {reason: "empty"}, o.stop(), o = null))
            })), this.modelListenersToRemove.push(this.model.addListener("cancel", function (e) {
                n.isLoading = !1, n.hide(), e.auto || (!e.retrigger && n.telemetryData && (n.telemetryData.selectedIndex = -1, n.telemetryData.wasCancelled = !0, n.submitTelemetryData()), o && (o.data = {reason: "cancel"}, o.stop(), o = null))
            }))
        }, e.prototype.resolveDetails = function (e) {
            var t = this;
            if (e.detailsResolved !== !0) {
                var n = this.editor.getModel().getMode().suggestSupport;
                "function" == typeof n.getSuggestionDetails && (this.currentSuggestionDetails && this.currentSuggestionDetails.cancel(), this.currentSuggestionDetails = n.getSuggestionDetails(this.editor.getModel().getAssociatedResource(), this.editor.getPosition(), e), this.currentSuggestionDetails.then(function (n) {
                    return e.detailsResolved = !0, e.codeSnippet = n.codeSnippet, e.documentationLabel = n.documentationLabel, e.highlights = n.highlights, e.label = n.label, e.type = n.type, e.typeLabel = n.typeLabel, t.tree.refresh(e)
                }).done(void 0, m.onUnexpectedError))
            }
        }, e.prototype.selectNextPage = function () {
            return this.isLoading ? !0 : this.isActive ? (this.tree.focusNextPage(), !0) : !1
        }, e.prototype.selectNext = function () {
            if (this.isLoading)return!0;
            if (this.isActive) {
                var e = this.tree.getFocus();
                return this.tree.focusNext(1), e === this.tree.getFocus() && this.tree.focusFirst(), !0
            }
            return!1
        }, e.prototype.selectPreviousPage = function () {
            return this.isLoading ? !0 : this.isActive ? (this.tree.focusPreviousPage(), !0) : !1
        }, e.prototype.selectPrevious = function () {
            if (this.isLoading)return!0;
            if (this.isActive) {
                var e = this.tree.getFocus();
                return this.tree.focusPrevious(1), e === this.tree.getFocus() && this.tree.focusLast(), !0
            }
            return!1
        }, e.prototype.acceptSelectedSuggestion = function () {
            if (this.isLoading)return!0;
            if (this.isActive) {
                var e = this.tree.getFocus();
                return e ? this.tree.setSelection([e]) : this.model.cancel(), !0
            }
            return!1
        }, e.prototype.releaseModel = function () {
            for (var e; e = this.modelListenersToRemove.pop();)e();
            this.model = null
        }, e.prototype.show = function () {
            this.isActive = !0, this.builder.style("visibility", "visible"), this.tree.layout(), this.editor.layoutContentWidget(this)
        }, e.prototype.hide = function () {
            this.isActive = !1, this.builder.style("visibility", "hidden"), this.editor.layoutContentWidget(this)
        }, e.prototype.getPosition = function () {
            return this.isActive ? {position: this.editor.getPosition(), preference: [S.ContentWidgetPositionPreference.BELOW, S.ContentWidgetPositionPreference.ABOVE]} : null
        }, e.prototype.getDomNode = function () {
            return this.builder.getHTMLElement()
        }, e.prototype.getId = function () {
            return e.ID
        }, e.prototype.submitTelemetryData = function () {
            this.telemetryService.publicLog("suggestWidget", this.telemetryData), this.telemetryData = null
        }, e.prototype.destroy = function () {
            this.releaseModel(), this.builder.destroy(), this.tree.dispose(), this.tree = null, this.renderer && (this.renderer.dispose(), this.renderer = null), this.listenersToRemove.forEach(function (e) {
                e()
            }), this.listenersToRemove = null
        }, e.ID = "editor.widget.suggestWidget", e.WIDTH = 440, e.HEIGHT = 240, e.LOADING_MESSAGE = new N(f.localize("vs_editor_contrib_suggest_suggestWidget", 0)), e.NO_SUGGESTIONS_MESSAGE = new N(f.localize("vs_editor_contrib_suggest_suggestWidget", 1)), e
    }();
    t.SuggestWidget = R
}), define("vs/css!vs/editor/contrib/suggest/quickSuggest", ["vs/css!vs/editor/editor.main"], {}), define("vs/editor/contrib/suggest/quickSuggestWidget", ["require", "exports", "vs/base/dom/builder", "vs/base/dom/dom", "vs/base/dom/mouseEvent", "vs/editor/editor", "vs/css!./quickSuggest"], function (e, t, n, i, o, r) {
    "use strict";
    function s(e, t) {
        if ("snippet" === t.type)return!1;
        var n = t.highlights;
        if (1 !== n.length || n[0].start > 0)return!1;
        var i = t.label;
        return i.length === e.length ? !1 : !0
    }

    var a = n, u = i, l = o, d = r;
    t.QUICK_SUGGEST_WIDGET_ID = "editor.widget.quickSuggestWidget";
    var c = function () {
        function e(e, n) {
            var i = this;
            this.editor = e, this.handlerService = n, this.modelListenersToRemove = [], this.model = null, this.isVisible = !1, this.currentSuggestion = null, this.currentSuggestionIndex = -1, this.suggestions = null, this.currentWord = null, this.builder = a.Build.offDOM().div({"class": "editor-widget quick-suggest-widget"}), this.bindings = this.handlerService.bindGroup(function (e) {
                var t = function () {
                    return i.currentSuggestion ? i.model.accept(i.currentSuggestion) : void 0
                }, n = function () {
                    return 1 === i.suggestions.length ? t() : i.currentSuggestion ? (i.next(), !0) : !1
                }, o = function () {
                    return i.currentSuggestion ? (i.previous(), !0) : !1
                }, r = function () {
                    return i.model.cancel()
                };
                e({key: "Tab"}, n), e({shift: !0, key: "Tab"}, o), e({key: "RightArrow"}, t), e({key: "Escape"}, r)
            }, {id: t.QUICK_SUGGEST_WIDGET_ID}), this.bindings.deactivate(), this.listenersToRemove = [], this.listenersToRemove.push(u.addListener(this.getDomNode(), "mousedown", function (e) {
                new l.StandardMouseEvent(e).preventDefault()
            })), this.listenersToRemove.push(e.addListener("blur", function () {
                i.cancel()
            })), this.editor.addContentWidget(this)
        }

        return e.prototype.setModel = function (e) {
            var t = this;
            this.releaseModel(), this.model = e, this.modelListenersToRemove.push(this.model.addListener("suggest", function (e) {
                e.auto ? (t.currentWord = e.suggestions.currentWord, t.suggestions = e.suggestions.suggestions.filter(s.bind(null, t.currentWord)), t.currentSuggestionIndex = 0, t.currentSuggestion = t.suggestions[t.currentSuggestionIndex], t.onSuggestions()) : t.cancel()
            })), this.modelListenersToRemove.push(this.model.addListener("refilter", function (e) {
                if (e.auto) {
                    var n = t.suggestions[t.currentSuggestionIndex];
                    t.suggestions = t.suggestions.filter(e.filter), t.currentSuggestionIndex = 0;
                    for (var i = 0; i < t.suggestions.length; i++)if (t.suggestions[i] === n) {
                        t.currentSuggestionIndex = i;
                        break
                    }
                    t.currentSuggestion = t.suggestions[t.currentSuggestionIndex], t.currentWord = e.currentWord, t.onSuggestions()
                } else t.cancel()
            })), this.modelListenersToRemove.push(this.model.addListener("empty", function () {
                return t.cancel()
            })), this.modelListenersToRemove.push(this.model.addListener("cancel", function () {
                return t.cancel()
            }))
        }, e.prototype.onSuggestions = function () {
            return this.suggestions.length ? (this.render(), void 0) : (this.hide(), void 0)
        }, e.prototype.next = function () {
            this.currentSuggestionIndex = (this.currentSuggestionIndex + 1) % this.suggestions.length, this.currentSuggestion = this.suggestions[this.currentSuggestionIndex], this.render()
        }, e.prototype.previous = function () {
            this.currentSuggestionIndex = --this.currentSuggestionIndex < 0 ? this.suggestions.length - 1 : this.currentSuggestionIndex, this.currentSuggestion = this.suggestions[this.currentSuggestionIndex], this.render()
        }, e.prototype.render = function () {
            this.builder.text(this.currentSuggestion.label.substring(this.currentWord.length)), this.show()
        }, e.prototype.cancel = function () {
            this.currentSuggestion = null, this.hide()
        }, e.prototype.releaseModel = function () {
            for (var e; e = this.modelListenersToRemove.pop();)e();
            this.model = null
        }, e.prototype.show = function () {
            this.isVisible = !0, this.builder.display("block"), this.bindings.activate(), this.editor.layoutContentWidget(this)
        }, e.prototype.hide = function () {
            this.isVisible = !1, this.bindings.deactivate(), this.builder.display("none"), this.editor.layoutContentWidget(this)
        }, e.prototype.getPosition = function () {
            return this.isVisible ? {position: this.editor.getPosition(), preference: [d.ContentWidgetPositionPreference.EXACT]} : null
        }, e.prototype.getId = function () {
            return e.ID
        }, e.prototype.getDomNode = function () {
            return this.builder.getHTMLElement()
        }, e.prototype.destroy = function () {
            for (; this.listenersToRemove.length > 0;)this.listenersToRemove.pop()();
            this.bindings.dispose(), this.releaseModel(), this.builder.destroy()
        }, e.ID = "editor.contrib.quickSuggestWidget", e
    }();
    t.QuickSuggestWidget = c
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/parameterHints/parameterHintsModel", ["require", "exports", "vs/base/lib/winjs.base", "vs/base/async", "vs/editor/core/constants", "vs/base/eventEmitter"], function (e, t, n, i, o, r) {
    "use strict";
    var s = n, a = i, u = o, l = r, d = function (e) {
        function t(n) {
            var i = this;
            e.call(this), this.editor = n, this.listenersToRemove = [], this.throttledDelayer = new a.ThrottledDelayer(t.DELAY), this.active = !1, this.listenersToRemove.push(this.editor.addListener(u.EventType.CursorSelectionChanged, function () {
                i.isTriggered() && i.trigger()
            }))
        }

        return __extends(t, e), t.prototype.cancel = function (e) {
            "undefined" == typeof e && (e = !1), this.active = !1, this.throttledDelayer.cancel(), e || this.emit("cancel")
        }, t.prototype.trigger = function (e) {
            "undefined" == typeof e && (e = t.DELAY);
            var n = this;
            if (this.editor.getModel().getMode().parameterHintsSupport)return this.cancel(!0), this.throttledDelayer.trigger(function () {
                return n.doTrigger()
            }, e)
        }, t.prototype.doTrigger = function () {
            var e = this, t = this.editor.getModel();
            if (!t || !t.getMode().parameterHintsSupport)return s.Promise.as(!1);
            var n = t.getMode().parameterHintsSupport;
            return n.getParameterHints(t.getAssociatedResource(), this.editor.getPosition()).then(function (t) {
                if (!t)return e.cancel(), e.emit("cancel"), !1;
                e.active = !0;
                var n = {hints: t};
                return e.emit("hint", n), !0
            })
        }, t.prototype.isTriggered = function () {
            return this.active || this.throttledDelayer.isTriggered()
        }, t.prototype.dispose = function () {
            this.cancel(!0), this.listenersToRemove && (this.listenersToRemove.forEach(function (e) {
                e()
            }), this.listenersToRemove = null), this.emit("destroy", null), e.prototype.dispose.call(this)
        }, t.DELAY = 120, t
    }(l.EventEmitter);
    t.ParameterHintsModel = d
}), define("vs/css!vs/editor/contrib/parameterHints/parameterHints", ["vs/css!vs/editor/editor.main"], {}), define("vs/editor/contrib/parameterHints/parameterHintsWidget", ["require", "exports", "vs/base/dom/builder", "vs/editor/core/constants", "vs/editor/editor", "vs/css!./parameterHints"], function (e, t, n, i, o) {
    "use strict";
    var r = n, s = i, a = o, u = r.$, l = function () {
        function e(t, n, i) {
            var o = this;
            this.editor = n, this.modelListenersToRemove = [], this.model = null, this.isVisible = !1, this.setModel(t), this.triggerCharactersListeners = [], this.onModelChanged(), this.modelListenersToRemove.push(this.editor.addListener(s.EventType.ModelChanged, function () {
                return o.onModelChanged()
            })), this.modelListenersToRemove.push(this.editor.addListener(s.EventType.ModelModeChanged, function () {
                return o.onModelChanged()
            })), this.$el = u(".editor-widget.parameter-hints-widget").on("click", function () {
                o.selectNext(), o.editor.focus()
            }), this.$wrapper = u(".wrapper.monaco-editor-background").appendTo(this.$el);
            var r = u(".buttons").appendTo(this.$wrapper);
            u(".button.previous").on("click",function (e) {
                e.preventDefault(), e.stopPropagation(), o.selectPrevious()
            }).appendTo(r), u(".button.next").on("click",function (e) {
                e.preventDefault(), e.stopPropagation(), o.selectNext()
            }).appendTo(r), this.$overloads = u(".overloads").appendTo(this.$wrapper), this.$signatures = u(".signatures").appendTo(this.$wrapper), this.signatureViews = [], this.currentSignature = 0, this.bindings = i.bindGroup(function (e) {
                e({key: "Escape"}, o.cancel.bind(o)), e({key: "UpArrow"}, o.selectPrevious.bind(o)), e({key: "DownArrow"}, o.selectNext.bind(o))
            }, {id: e.ID}), this.editor.addContentWidget(this), this.hide()
        }

        return e.prototype.onModelChanged = function () {
            for (var e = this; this.triggerCharactersListeners.length > 0;)this.triggerCharactersListeners.pop()();
            if (this.editor.getModel()) {
                var t = this.editor.getModel().getMode();
                if (t.parameterHintsSupport)for (var n = t.parameterHintsSupport.getParameterHintsTriggerCharacters(), i = 0; i < n.length; i++)this.triggerCharactersListeners.push(this.editor.addTypingListener(n[i], function () {
                    return e.model.trigger()
                }))
            }
        }, e.prototype.setModel = function (e) {
            var t = this;
            this.releaseModel(), this.model = e, this.modelListenersToRemove.push(this.model.addListener("hint", function (e) {
                t.show(), t.render(e.hints), t.currentSignature = e.hints.currentSignature, t.select(t.currentSignature)
            })), this.modelListenersToRemove.push(this.model.addListener("cancel", function () {
                t.hide()
            }))
        }, e.prototype.show = function () {
            this.isVisible = !0, this.$el.removeClass("hidden"), this.bindings.activate(), this.editor.layoutContentWidget(this)
        }, e.prototype.hide = function () {
            this.isVisible = !1, this.bindings.deactivate(), this.$el.addClass("hidden"), this.editor.layoutContentWidget(this)
        }, e.prototype.getPosition = function () {
            return this.isVisible ? {position: this.editor.getPosition(), preference: [a.ContentWidgetPositionPreference.ABOVE, a.ContentWidgetPositionPreference.BELOW]} : null
        }, e.prototype.render = function (e) {
            e.signatures.length > 1 ? this.$el.addClass("multiple") : this.$el.removeClass("multiple"), this.$signatures.empty(), this.signatureViews = [];
            var t = 0;
            e.currentSignature;
            for (var n = 0, i = e.signatures.length; i > n; n++) {
                var o = e.signatures[n], r = this.renderSignature(this.$signatures, o, e.currentParameter);
                this.renderDocumentation(r, o, e.currentParameter);
                var s = r.getClientArea().height;
                this.signatureViews.push({top: t, height: s}), t += s
            }
        }, e.prototype.renderSignature = function (e, t, n) {
            var i = u(".signature").appendTo(e), o = (t.label, t.parameters.length > 0);
            if (o) {
                for (var r = u("span.parameters"), s = 0, a = 0, l = t.parameters.length; l > a; a++) {
                    var d = t.parameters[a];
                    (0 === a ? i : r).append(u("span").text(t.label.substring(s, d.signatureLabelOffset))), r.append(u("span.parameter").addClass(a === n ? "active" : "").text(t.label.substring(d.signatureLabelOffset, d.signatureLabelEnd))), s = d.signatureLabelEnd
                }
                i.append(r), i.append(u("span").text(t.label.substring(s)))
            } else i.append(u("span").text(t.label));
            return i
        }, e.prototype.renderDocumentation = function (e, t, n) {
            t.documentation && e.append(u(".documentation").text(t.documentation));
            var i = t.parameters[n];
            if (i && i.documentation) {
                var o = u(".documentation");
                o.append(u("span.parameter").text(i.label)), o.append(u("span").text(i.documentation)), e.append(o)
            }
        }, e.prototype.select = function (e) {
            var t = this.signatureViews[e];
            this.$signatures.style({height: t.height + "px"}), this.$signatures.getHTMLElement().scrollTop = t.top, this.$overloads.text(e + 1 + "/" + this.signatureViews.length)
        }, e.prototype.selectNext = function () {
            return this.signatureViews.length < 2 ? (this.cancel(), !1) : (this.currentSignature = (this.currentSignature + 1) % this.signatureViews.length, this.select(this.currentSignature), !0)
        }, e.prototype.selectPrevious = function () {
            return this.signatureViews.length < 2 ? (this.cancel(), !1) : (this.currentSignature--, this.currentSignature < 0 && (this.currentSignature = this.signatureViews.length - 1), this.select(this.currentSignature), !0)
        }, e.prototype.cancel = function () {
            this.model.cancel()
        }, e.prototype.getDomNode = function () {
            return this.$el.getHTMLElement()
        }, e.prototype.getId = function () {
            return e.ID
        }, e.prototype.releaseModel = function () {
            for (var e; e = this.modelListenersToRemove.pop();)e();
            this.model && (this.model.dispose(), this.model = null)
        }, e.prototype.destroy = function () {
            for (this.releaseModel(); this.triggerCharactersListeners.length > 0;)this.triggerCharactersListeners.pop()();
            this.$overloads && (this.$overloads.destroy(), delete this.$overloads), this.$signatures && (this.$signatures.destroy(), delete this.$signatures), this.$wrapper && (this.$wrapper.destroy(), delete this.$wrapper), this.$el && (this.$el.destroy(), delete this.$el), this.bindings && (this.bindings.dispose(), delete this.bindings)
        }, e.ID = "editor.widget.parameterHintsWidget", e
    }();
    t.ParameterHintsWidget = l
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/parameterHints/parameterHints", ["require", "exports", "vs/nls!vs/editor/editor.main", "./parameterHintsModel", "./parameterHintsWidget", "vs/base/lib/winjs.base", "vs/editor/editorExtensions", "vs/platform/platform", "vs/platform/actionRegistry"], function (e, t, n, i, o, r, s, a, u) {
    "use strict";
    var l = n, d = i, c = o, h = r, p = s, f = a, g = u, m = function (e) {
        function t(t, n) {
            e.call(this, t, n), this.model = new d.ParameterHintsModel(this.editor), this.parameterHintsWidget = null
        }

        return __extends(t, e), t.prototype.getModel = function () {
            return this.model
        }, t.prototype.injectHandlerService = function (t) {
            e.prototype.injectHandlerService.call(this, t), this.parameterHintsWidget || (this.parameterHintsWidget = new c.ParameterHintsWidget(this.model, this.editor, this.handlerService))
        }, t.prototype.getEnablementState = function () {
            return e.prototype.getEnablementState.call(this) && !!this.editor.getModel().getMode().parameterHintsSupport
        }, t.prototype.run = function () {
            return h.TPromise.as(!1)
        }, t.prototype.dispose = function () {
            e.prototype.dispose.call(this), this.model && (this.model.dispose(), this.model = null), this.parameterHintsWidget && (this.parameterHintsWidget.destroy(), this.parameterHintsWidget = null)
        }, t.ID = "editor.contrib.parameterHints.trigger", t
    }(p.EditorAction);
    t.TriggerParameterHintsAction = m;
    var v = f.Registry.as(p.Extensions.EditorContributions);
    v.registerEditorContribution(new g.ActionDescriptor(m, m.ID, l.localize("vs_editor_contrib_parameterHints_parameterHints", 0)))
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/suggest/suggestModel", ["require", "exports", "vs/editor/contrib/snippet/snippet", "vs/base/lib/winjs.base", "vs/editor/core/constants", "vs/editor/core/range", "vs/base/eventEmitter", "vs/base/strings", "vs/base/performance/timer", "vs/editor/contrib/parameterHints/parameterHints"], function (e, t, n, i, o, r, s, a, u, l) {
    "use strict";
    var d, c = n, h = i, p = o, f = r, g = s, m = a, v = u, y = l;
    !function (e) {
        e[e.NOT_ACTIVE = 0] = "NOT_ACTIVE", e[e.MANUAL_TRIGGER = 1] = "MANUAL_TRIGGER", e[e.AUTO_TRIGGER = 2] = "AUTO_TRIGGER"
    }(d || (d = {}));
    var b = function () {
        function e(e, t) {
            "undefined" == typeof t && (t = e.getPosition());
            var n = e.getModel(), i = n.getLineContent(t.lineNumber);
            this.wordBefore = "";
            var o = n.getWordAtPosition(t, !1);
            o && (this.wordBefore = i.substring(o.startColumn - 1, t.column - 1)), this.lineNumber = t.lineNumber, this.column = t.column, this.lineContentBefore = i.substr(0, t.column - 1), this.lineContentAfter = i.substr(t.column - 1)
        }

        return e.prototype.isValidForAutoSuggest = function () {
            return/^\s*$/.test(this.lineContentAfter) ? 0 === this.wordBefore.length ? !1 : !0 : !1
        }, e.prototype.isValidForNewContext = function (e) {
            return this.lineNumber !== e.lineNumber ? !1 : e.column < this.column - this.wordBefore.length ? !1 : 0 !== e.lineContentBefore.indexOf(this.lineContentBefore) || this.lineContentAfter !== e.lineContentAfter ? !1 : "" === e.wordBefore && e.lineContentBefore !== this.lineContentBefore ? !1 : !0
        }, e.prototype.isValidForRetrigger = function (e) {
            return 0 !== this.lineContentBefore.indexOf(e.lineContentBefore) || this.lineContentAfter !== e.lineContentAfter ? !1 : this.lineContentBefore.length > e.lineContentBefore.length && 0 === this.wordBefore.length ? !1 : !0
        }, e
    }(), C = function (e) {
        function t(t, n) {
            var i = this;
            e.call(this), this.editor = t, this.onAccept = n, this.listenersToRemove = [], this.autoSuggestDelay = this.editor.getConfiguration().quickSuggestionsDelay, (isNaN(this.autoSuggestDelay) || !this.autoSuggestDelay && 0 !== this.autoSuggestDelay || this.autoSuggestDelay > 2e3 || this.autoSuggestDelay < 0) && (this.autoSuggestDelay = 500), this.triggerAutoSuggestPromise = null, this.state = d.NOT_ACTIVE, this.requestPromise = null, this.suggestions = null, this.requestContext = null, this.listenersToRemove.push(this.editor.addListener(p.EventType.CursorSelectionChanged, function (e) {
                return e.selection.isEmpty() ? "mouse" === e.source ? (i.cancel(), void 0) : (i.onCursorChange(), void 0) : (i.cancel(), void 0)
            })), this.listenersToRemove.push(this.editor.addListener(p.EventType.ModelChanged, function () {
                i.cancel()
            }))
        }

        return __extends(t, e), t.prototype.cancel = function (e, t) {
            "undefined" == typeof e && (e = !1), "undefined" == typeof t && (t = !1);
            var n = this.state !== d.NOT_ACTIVE;
            return this.triggerAutoSuggestPromise && (this.triggerAutoSuggestPromise.cancel(), this.triggerAutoSuggestPromise = null), this.requestPromise && (this.requestPromise.cancel(), this.requestPromise = null), this.state = d.NOT_ACTIVE, this.suggestions = null, this.requestContext = null, e || this.emit("cancel", {retrigger: t}), n
        }, t.prototype.isAutoSuggest = function () {
            return this.state === d.AUTO_TRIGGER
        }, t.prototype.onCursorChange = function () {
            var e = this;
            if (this.editor.getModel().getMode().suggestSupport) {
                var t = new b(this.editor);
                this.state === d.NOT_ACTIVE ? (this.cancel(), t.isValidForAutoSuggest() && (this.triggerAutoSuggestPromise = h.Promise.timeout(this.autoSuggestDelay), this.triggerAutoSuggestPromise.then(function () {
                    e.triggerAutoSuggestPromise = null, e.trigger(!0, !1)
                }))) : this.onNewContext(t)
            }
        }, t.prototype.trigger = function (e, t, n) {
            "undefined" == typeof n && (n = !1);
            var i = this, o = this.editor.getModel(), r = o.getMode().suggestSupport;
            if (r) {
                var s = v.start(v.Topic.EDITOR, "suggest/TRIGGER");
                this.cancel(!1, n), this.state = e ? d.AUTO_TRIGGER : d.MANUAL_TRIGGER, this.emit("loading", {auto: this.isAutoSuggest(), characterTriggered: t, retrigger: n}), this.requestContext = new b(this.editor);
                var a = v.start(v.Topic.EDITOR, "suggest/REQUEST");
                this.requestPromise = r.suggest(o.getAssociatedResource(), this.editor.getPosition()), this.requestPromise.then(function (e) {
                    a.stop(), i.requestPromise = null, e.suggestions && e.suggestions.length > 0 ? (i.suggestions = e.suggestions, i.onNewContext(new b(i.editor))) : i.emit("empty"), s.stop()
                }, function () {
                    a.stop(), s.stop()
                })
            }
        }, t.prototype.onNewContext = function (e) {
            if (!this.requestContext.isValidForNewContext(e))return this.requestContext.isValidForRetrigger(e) ? this.trigger(this.state === d.AUTO_TRIGGER, !1, !0) : this.cancel(), void 0;
            if (this.suggestions) {
                var t = this.editor.getModel().getMode().suggestSupport, n = this.suggestions, i = t.getFilter();
                i && (n = n.filter(i.bind(null, e.wordBefore))), n = n.sort(function (e, t) {
                    return m.localeCompare(e.label.toLowerCase(), t.label.toLowerCase())
                }), n.length > 0 ? this.emit("suggest", {suggestions: {suggestions: n, currentWord: e.wordBefore}, auto: this.isAutoSuggest()}) : this.emit("empty")
            }
        }, t.prototype.accept = function (e) {
            if (!e && null === this.suggestions)return!1;
            e = e || this.suggestions[0], this.cancel();
            var t = new b(this.editor), n = new f.Range(t.lineNumber, t.column - t.wordBefore.length, t.lineNumber, t.column);
            this.onAccept(new c.CodeSnippet(e.codeSnippet), n);
            var i = this.editor.getAction(y.TriggerParameterHintsAction.ID), o = i ? i.getModel() : null;
            return o && o.doTrigger(), !0
        }, t.prototype.destroy = function () {
            this.cancel(!0), this.listenersToRemove && (this.listenersToRemove.forEach(function (e) {
                e()
            }), this.listenersToRemove = null), this.emit("destroy", null)
        }, t
    }(g.EventEmitter);
    t.SuggestModel = C
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/suggest/suggest", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/editor/contrib/snippet/snippet", "vs/editor/core/constants", "./suggestWidget", "./suggestModel", "./quickSuggestWidget", "vs/base/env", "vs/base/errors", "vs/base/lib/winjs.base", "vs/editor/editorExtensions", "vs/platform/platform", "vs/platform/actionRegistry"], function (e, t, n, i, o, r, s, a, u, l, d, c, h, p) {
    "use strict";
    var f = n, g = i, m = o, v = r, y = s, b = a, C = u, E = l, w = d, _ = c, S = h, T = p, L = function (e) {
        function t(t, n) {
            var i = this;
            e.call(this, t, n), this.model = new y.SuggestModel(this.editor, function (e, t) {
                g.InsertSnippetHelper.run(i.editor, i.handlerService, e, t)
            }), this.quickSuggestWidget = null, this.suggestWidget = null, this.binding = null, this.triggerCharacterListeners = [], this.toUnhook.push(t.addListener(m.EventType.ConfigurationChanged, function () {
                return i.update()
            })), this.toUnhook.push(t.addListener(m.EventType.ModelChanged, function () {
                return i.update()
            })), this.toUnhook.push(t.addListener(m.EventType.ModelModeChanged, function () {
                return i.update()
            }))
        }

        return __extends(t, e), t.prototype.injectHandlerService = function (t) {
            e.prototype.injectHandlerService.call(this, t), this.quickSuggestWidget || (this.quickSuggestWidget = new b.QuickSuggestWidget(this.editor, this.handlerService), this.quickSuggestWidget.setModel(this.model))
        }, t.prototype.injectTelemetryService = function (t) {
            e.prototype.injectTelemetryService.call(this, t), this.suggestWidget || (this.suggestWidget = new v.SuggestWidget(this.editor, this.telemetryService), this.suggestWidget.setModel(this.model))
        }, t.prototype.injectionDone = function () {
            this.update()
        }, t.prototype.getEnablementState = function () {
            return e.prototype.getEnablementState.call(this) && !!this.editor.getModel().getMode().suggestSupport
        }, t.prototype.update = function () {
            var e = this;
            if (this.triggerCharacterListeners.forEach(function (e) {
                e()
            }), this.triggerCharacterListeners = [], this.editor.getModel() && this.editor.getConfiguration().suggestOnTriggerCharacters) {
                var t = this.editor.getModel().getMode();
                if (t.suggestSupport)for (var n = t.suggestSupport.getTriggerCharacters(), i = function () {
                    var n = e.editor.getPosition(), i = e.editor.getModel().getLineContent(n.lineNumber), o = e.editor.getModel().getRawLineTokens(n.lineNumber);
                    t.suggestSupport.shouldAutotriggerSuggest(i, o, n.column - 1) && e.triggerSuggest(!0).done(null, E.onUnexpectedError)
                }, o = 0; o < n.length; o++)this.triggerCharacterListeners.push(this.editor.addTypingListener(n[o], function () {
                    return i()
                }))
            }
        }, t.prototype.run = function () {
            return this.triggerSuggest(!1)
        }, t.prototype.triggerSuggest = function (e) {
            var t = this;
            return null !== this.binding && (this.binding.dispose(), this.binding = null), this.suggestWidget.setModel(this.model), this.binding = this.handlerService.bindGroup(function (e) {
                e({key: "Enter"}, function () {
                    return t.accept()
                }, {once: !0}), e({key: "Tab"}, function () {
                    return t.accept()
                }, {once: !0}), e({key: "Escape"}, function () {
                    return t.cancel()
                }, {once: !0}), e({key: "DownArrow"}, function () {
                    return t.next()
                }), e({key: "PageDown"}, function () {
                    return t.nextPage()
                }), e({key: "UpArrow"}, function () {
                    return t.prev()
                }), e({key: "PageUp"}, function () {
                    return t.prevPage()
                })
            }), this.model.trigger(!1, e), this.editor.focus(), w.TPromise.as(!1)
        }, t.prototype.dispose = function () {
            for (e.prototype.dispose.call(this); this.triggerCharacterListeners.length > 0;)this.triggerCharacterListeners.pop()();
            this.quickSuggestWidget && (this.quickSuggestWidget.destroy(), this.quickSuggestWidget = null), this.suggestWidget && (this.suggestWidget.destroy(), this.suggestWidget = null), this.model && (this.model.destroy(), this.model = null), null !== this.binding && (this.binding.dispose(), this.binding = null)
        }, t.prototype.accept = function () {
            return this.suggestWidget.acceptSelectedSuggestion()
        }, t.prototype.cancel = function () {
            return this.model.cancel()
        }, t.prototype.prevPage = function () {
            return this.suggestWidget.selectPreviousPage()
        }, t.prototype.prev = function () {
            return this.suggestWidget.selectPrevious()
        }, t.prototype.nextPage = function () {
            return this.suggestWidget.selectNextPage()
        }, t.prototype.next = function () {
            return this.suggestWidget.selectNext()
        }, t.ID = "editor.actions.triggerSuggest", t
    }(_.EditorAction);
    t.TriggerSuggestAction = L;
    var N = new T.ActionDescriptor(L, L.ID, f.localize("vs_editor_contrib_suggest_suggest", 0), {ctrlCmd: !C.browser.isMacintosh, winCtrl: C.browser.isMacintosh, key: "Space"}), x = S.Registry.as(_.Extensions.EditorContributions);
    x.registerEditorContribution(N)
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/diffNavigator/diffNavigator", ["require", "exports", "vs/base/eventEmitter", "vs/base/assert", "vs/editor/core/constants", "vs/editor/core/range", "vs/base/objects"], function (e, t, n, i, o, r, s) {
    "use strict";
    var a = n, u = i, l = o, d = r, c = s, h = {followsCaret: !0, ignoreCharChanges: !0, alwaysRevealFirst: !0}, p = function (e) {
        function t(t, n) {
            "undefined" == typeof n && (n = {});
            var i = this;
            e.call(this), this.editor = t, this.options = c.mixin(n, h, !1), this.disposed = !1, this.toUnbind = [], this.nextIdx = -1, this.ranges = [], this.ignoreSelectionChange = !1, this.revealFirst = this.options.alwaysRevealFirst, this.toUnbind.push(this.editor.addListener(l.EventType.Disposed, function () {
                return i.dispose()
            })), this.toUnbind.push(this.editor.addListener(l.EventType.DiffUpdated, function () {
                return i.onDiffUpdated()
            })), this.options.followsCaret && this.toUnbind.push(this.editor.getModifiedEditor().addListener(l.EventType.CursorPositionChanged, function () {
                i.ignoreSelectionChange || (i.nextIdx = -1)
            })), this.options.alwaysRevealFirst && this.toUnbind.push(this.editor.getModifiedEditor().addListener(l.EventType.ModelChanged, function () {
                i.revealFirst = !0
            })), this.init()
        }

        return __extends(t, e), t.prototype.init = function () {
            var e = this.editor.getLineChanges();
            !e
        }, t.prototype.onDiffUpdated = function () {
            this.init(), this.compute(this.editor.getLineChanges()), this.revealFirst && (this.revealFirst = !1, this.nextIdx = -1, this.next())
        }, t.prototype.compute = function (e) {
            var n = this;
            this.ranges = [], e.forEach(function (e) {
                !n.options.ignoreCharChanges && e.charChanges ? e.charChanges.forEach(function (e) {
                    n.ranges.push({rhs: !0, range: new d.Range(e.modifiedStartLineNumber, e.modifiedStartColumn, e.modifiedEndLineNumber, e.modifiedEndColumn)})
                }) : n.ranges.push({rhs: !0, range: new d.Range(e.modifiedStartLineNumber, 1, e.modifiedStartLineNumber, 1)})
            }), this.ranges.sort(function (e, t) {
                return e.range.getStartPosition().isBeforeOrEqual(t.range.getStartPosition()) ? -1 : t.range.getStartPosition().isBeforeOrEqual(e.range.getStartPosition()) ? 1 : 0
            }), this.emit(t.Events.UPDATED, {})
        }, t.prototype.initIdx = function (e) {
            for (var t = !1, n = this.editor.getPosition(), i = 0, o = this.ranges.length; o > i && !t; i++) {
                var r = this.ranges[i].range;
                n.isBeforeOrEqual(r.getStartPosition()) && (this.nextIdx = i + (e ? 0 : -1), t = !0)
            }
            t || (this.nextIdx = e ? 0 : this.ranges.length - 1), this.nextIdx < 0 && (this.nextIdx = this.ranges.length - 1)
        }, t.prototype.move = function (e) {
            if (u.ok(!this.disposed, "Illegal State - diff navigator has been disposed"), this.canNavigate()) {
                -1 === this.nextIdx ? this.initIdx(e) : e ? (this.nextIdx += 1, this.nextIdx >= this.ranges.length && (this.nextIdx = 0)) : (this.nextIdx -= 1, this.nextIdx < 0 && (this.nextIdx = this.ranges.length - 1));
                var t = this.ranges[this.nextIdx];
                this.ignoreSelectionChange = !0;
                try {
                    this.editor.setPosition(t.range.getStartPosition(), !0, !0, !0)
                } finally {
                    this.ignoreSelectionChange = !1
                }
            }
        }, t.prototype.canNavigate = function () {
            return this.ranges.length > 0
        }, t.prototype.next = function () {
            this.move(!0)
        }, t.prototype.previous = function () {
            this.move(!1)
        }, t.prototype.dispose = function () {
            for (; this.toUnbind.length > 0;)this.toUnbind.pop()();
            this.ranges = null, this.disposed = !0, e.prototype.dispose.call(this)
        }, t.Events = {UPDATED: "navigation.updated"}, t
    }(a.EventEmitter);
    t.DiffNavigator = p
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/smartSelect/smartSelect", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/env", "vs/base/lib/winjs.base", "vs/editor/core/constants", "vs/editor/core/range", "vs/editor/editorExtensions", "vs/platform/platform", "vs/platform/actionRegistry"], function (e, t, n, i, o, r, s, a, u, l) {
    "use strict";
    var d = n, c = i, h = o, p = r, f = s, g = a, m = u, v = l, y = function () {
        function e(e) {
            this.editor = e, this.next = null, this.previous = null, this.selection = e.getSelection()
        }

        return e
    }(), b = null, C = !1, E = function (e) {
        function t(t, n, i) {
            e.call(this, t, n), this.forward = i
        }

        return __extends(t, e), t.prototype.getEnablementState = function () {
            return e.prototype.getEnablementState.call(this) && !!this.editor.getModel().getMode().logicalSelectionSupport
        }, t.prototype.run = function () {
            var e = this, t = this.editor.getSelection(), n = this.editor.getModel(), i = n.getMode().logicalSelectionSupport;
            b && b.editor !== this.editor && (b = null);
            var o = h.Promise.as(b);
            return b || (o = i.getRangesToPosition(n.getAssociatedResource(), t.getStartPosition()).then(function (t) {
                var n;
                t.filter(function (t) {
                    var n = e.editor.getSelection(), i = new f.Range(t.range.startLineNumber, t.range.startColumn, t.range.endLineNumber, t.range.endColumn);
                    return i.containsPosition(n.getStartPosition()) && i.containsPosition(n.getEndPosition())
                }).forEach(function (t) {
                    var i = t.range, o = new y(e.editor);
                    o.selection = new f.Range(i.startLineNumber, i.startColumn, i.endLineNumber, i.endColumn), n && (o.next = n, n.previous = o), n = o
                });
                var i = new y(e.editor);
                i.next = n, n && (n.previous = i), b = i
            }).then(function () {
                var t = e.editor.addListener(p.EventType.CursorPositionChanged, function () {
                    C || (b = null, t())
                })
            })), o.then(function () {
                if (b = e.forward ? b.next : b.previous) {
                    C = !0;
                    try {
                        e.editor.setSelection(b.selection)
                    } finally {
                        C = !1
                    }
                }
            })
        }, t
    }(g.EditorAction), w = function (e) {
        function t(t, n) {
            e.call(this, t, n, !0)
        }

        return __extends(t, e), t.ID = "editor.action.smartSelect.grow", t
    }(E), _ = function (e) {
        function t(t, n) {
            e.call(this, t, n, !1)
        }

        return __extends(t, e), t.ID = "editor.action.smartSelect.shrink", t
    }(E), S = m.Registry.as(g.Extensions.EditorContributions);
    S.registerEditorContribution(new v.ActionDescriptor(w, w.ID, d.localize("vs_editor_contrib_smartSelect_smartSelect", 0), c.browser.isMacintosh ? {shift: !0, cmdCtrl: !0, winCtrl: !0, alt: !1, key: "RightArrow"} : {shift: !0, alt: !0, key: "RightArrow"})), S.registerEditorContribution(new v.ActionDescriptor(_, _.ID, d.localize("vs_editor_contrib_smartSelect_smartSelect", 1), c.browser.isMacintosh ? {shift: !0, cmdCtrl: !0, winCtrl: !0, alt: !1, key: "LeftArrow"} : {shift: !0, alt: !0, key: "LeftArrow"}))
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/smartSelect/jumpToBracket", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/lib/winjs.base", "vs/editor/core/constants", "vs/editor/editorExtensions", "vs/platform/platform", "vs/platform/actionRegistry"], function (e, t, n, i, o, r, s, a) {
    "use strict";
    var u = n, l = i, d = o, c = r, h = s, p = a, f = function (e) {
        function t(t, n) {
            e.call(this, t, n)
        }

        return __extends(t, e), t.prototype.run = function () {
            return this.editor.trigger(this.id, d.Handler.JumpToBracket, {}), l.TPromise.as(!0)
        }, t.ID = "editor.action.jumpToBracket", t
    }(c.EditorAction), g = h.Registry.as(c.Extensions.EditorContributions);
    g.registerEditorContribution(new p.ActionDescriptor(f, f.ID, u.localize("vs_editor_contrib_smartSelect_jumpToBracket", 0), {ctrlCmd: !0, alt: !0, key: "]"}))
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/color/colorPicker", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/ui/actions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function (e) {
        function t() {
            e.call(this, t.ID), this.label = o.localize("vs_editor_contrib_color_colorPicker", 0)
        }

        return __extends(t, e), t.prototype.run = function () {
            return null
        }, t.ID = "editor.actions.colorPicker.trigger", t
    }(r.Action);
    t.ColorPickerAction = s
}), define("vs/css!vs/editor/contrib/referenceSearch/referenceSearch", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/referenceSearch/referenceSearch", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/lib/winjs.base", "vs/platform/services", "vs/platform/platform", "vs/platform/actionRegistry", "vs/base/lifecycle", "vs/base/network", "vs/base/errors", "vs/base/strings", "vs/base/eventEmitter", "vs/base/dom/builder", "vs/base/ui/widgets/tree/treeImpl", "vs/base/ui/widgets/tree/treeDefaults", "vs/editor/core/codeEditorWidget", "vs/editor/core/constants", "vs/editor/editorExtensions", "vs/editor/contrib/zoneWidget/zoneWidget", "vs/css!./referenceSearch"], function (e, t, n, i, o, r, s, a, u, l, d, c, h, p, f, g, m, v, y) {
    "use strict";
    var b = n, C = i, E = o, w = r, _ = s, S = a, T = u, L = l, N = d, x = c, M = h, I = p, R = f, D = g, P = m, O = v, k = y, A = function (e) {
        function t(n) {
            e.call(this), this._references = n, this._references.sort(t.compare), this._currentReference = null
        }

        return __extends(t, e), t.compare = function (e, t) {
            return e.resourceUrl === t.resourceUrl ? e.range.startLineNumber - t.range.startLineNumber : N.localeCompare(e.resourceUrl, t.resourceUrl)
        }, Object.defineProperty(t.prototype, "currentReference", {get: function () {
            return this._currentReference
        }, set: function (e) {
            this._currentReference = e, this.emit(t.ON_CURRENT_REF, this)
        }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, "references", {get: function () {
            return this._references
        }, enumerable: !0, configurable: !0}), t.prototype.findReferenceFromPosition = function (e, t) {
            for (var n = 0, i = this._references.length; i > n; n++) {
                var o = this._references[n].range;
                if (this._references[n].resourceUrl === e && o.startLineNumber <= t.lineNumber && o.endLineNumber >= t.lineNumber && o.startColumn <= t.column && o.endColumn >= t.column)return n
            }
            return-1
        }, t.ON_CURRENT_REF = "references.model.onCurrentReferenceChanged", t
    }(x.EventEmitter), H = function () {
        function e() {
        }

        return e.prototype.getId = function (e, t) {
            if (t instanceof A)return"reference.model";
            var n = t;
            return n.resourceUrl + n.range.startLineNumber + n.range.startColumn + n.range.endLineNumber + n.range.endColumn
        }, e.prototype.getChildren = function (e, t) {
            var n = [];
            return t instanceof A && (n = t.references), C.Promise.as(n)
        }, e.prototype.hasChildren = function (e, t) {
            return t instanceof A
        }, e.prototype.getParent = function (e, t) {
            var n = null;
            return t instanceof A || (n = e.getInput()), C.Promise.as(n)
        }, e
    }(), W = function () {
        function e() {
        }

        return e.prototype.compare = function (e, t, n) {
            var i = t, o = n;
            return A.compare(i, o)
        }, e
    }(), V = function (e) {
        function t() {
            e.apply(this, arguments)
        }

        return __extends(t, e), t.prototype.onClick = function (n, i, o) {
            var r = e.prototype.onClick.call(this, n, i, o);
            return n.emit(2 === o.detail ? t.Events.SELECTED : t.Events.FOCUSED, i), r
        }, t.prototype.onEscape = function () {
            return!1
        }, t.prototype.onEnter = function (n, i) {
            var o = e.prototype.onEnter.call(this, n, i);
            return n.emit(t.Events.SELECTED, n.getFocus()), o
        }, t.prototype.onUp = function (t, n) {
            return e.prototype.onUp.call(this, t, n), this.fakeFocus(t, n), !0
        }, t.prototype.onPageUp = function (t, n) {
            return e.prototype.onPageUp.call(this, t, n), this.fakeFocus(t, n), !0
        }, t.prototype.onLeft = function (t, n) {
            return e.prototype.onLeft.call(this, t, n), this.fakeFocus(t, n), !0
        }, t.prototype.onDown = function (t, n) {
            return e.prototype.onDown.call(this, t, n), this.fakeFocus(t, n), !0
        }, t.prototype.onPageDown = function (t, n) {
            return e.prototype.onPageDown.call(this, t, n), this.fakeFocus(t, n), !0
        }, t.prototype.onRight = function (t, n) {
            return e.prototype.onRight.call(this, t, n), this.fakeFocus(t, n), !0
        }, t.prototype.fakeFocus = function (e) {
            var n = e.getFocus();
            e.setSelection([n]), e.emit(t.Events.FOCUSED, n)
        }, t.Events = {FOCUSED: "events/custom/focused", SELECTED: "events/custom/selected"}, t
    }(R.DefaultController), F = function () {
        function e(e) {
            this.lineHeightInPx = e
        }

        return e.prototype.getHeight = function () {
            return 1.2 * this.lineHeightInPx
        }, e.prototype.render = function (e, t, n) {
            var i = t, o = (this.getHeight(e, t), i.resourceUrl.lastIndexOf("/")), r = "inMemory" === new T.URL(i.resourceUrl).getScheme() ? b.localize("vs_editor_contrib_referenceSearch_referenceSearch", 0) : i.resourceUrl.substring(o + 1), s = b.localize("vs_editor_contrib_referenceSearch_referenceSearch", 1, i.range.startLineNumber);
            return M.Build.withElement(n).div({"class": "reference", text: r, title: r + s}, function (e) {
                e.span().text(s).addClass("lineNumber")
            }), null
        }, e
    }(), U = function (e) {
        function t(t, n, i) {
            e.call(this, i, {frameColor: "#EFEFF2"}), this.editorService = t, this.requestService = n, this.toUnhook = [], this.tree = null, this.treeContainer = null, this.preview = null, this.previewContainer = null, this.previewDecorations = [], this.lastHeight = null, this.create()
        }

        return __extends(t, e), t.prototype.createArrow = function (t, n, i) {
            return e.prototype.createArrow.call(this, t, n, i)
        }, t.prototype.fillContainer = function (e) {
            var t = this, n = M.withElement(e);
            n.addClass("reference-zone-widget"), n.div({"class": "label"}, function (e) {
                t.labelContainer = e.show()
            }), n.div({"class": "preview inline"}, function (e) {
                var n = t.editor.getConfiguration();
                n.readOnly = !0, n.scrollBeyondLastLine = !1, n.scrollbar = {useShadows: !1}, t.preview = new D.CodeEditorWidget(e.getHTMLElement(), n, null), t.previewContainer = e.hide()
            }), n.div({"class": "tree inline"}, function (e) {
                var n = {dataSource: new H, renderer: new F(t.editor.getConfiguration().lineHeight), sorter: new W, controller: new V}, i = {allowHorizontalScroll: !1, indentPixels: 0};
                t.tree = new I.Tree(e.getHTMLElement(), n, i), t.treeContainer = e.hide()
            })
        }, t.prototype.doLayout = function (e) {
            var t = e + "px";
            t !== this.lastHeight && (this.treeContainer.style({height: t}), this.previewContainer.style({height: t}), this.tree.layout(e), this.preview.layout(), this.lastHeight = t)
        }, t.prototype.onWidth = function () {
            this.preview.layout()
        }, t.prototype.setModel = function (e) {
            for (var n = this; this.toUnhook.length > 0;)this.toUnhook.pop()();
            this.model = e, this.model && (this.toUnhook.push(this.tree.addListener(V.Events.FOCUSED, function (e) {
                n.showReferencePreview(e)
            })), this.toUnhook.push(this.tree.addListener(V.Events.SELECTED, function (e) {
                n.showReferencePreview(e), n.model.currentReference = e
            })), this.tree.setInput(this.model).then(function () {
                n.tree.setSelection([n.model.currentReference])
            }).done(null, L.onUnexpectedError), this.toUnhook.push(this.preview.addListener(P.EventType.MouseDown, function (e) {
                2 === e.event.detail && n.emit(t.Events.EditorDoubleClick, {reference: n.tree.getFocus(), range: e.target.range})
            })))
        }, t.prototype.focus = function () {
            this.tree.DOMFocus()
        }, t.prototype.showLoading = function (e) {
            this.labelContainer.text(b.localize("vs_editor_contrib_referenceSearch_referenceSearch", 2)).show(), this.treeContainer.hide(), this.previewContainer.hide(), this.show(e, 2)
        }, t.prototype.showNoResultsMessage = function (e) {
            this.labelContainer.text(b.localize("vs_editor_contrib_referenceSearch_referenceSearch", 3)).show(), this.treeContainer.hide(), this.previewContainer.hide(), this.show(e, 2)
        }, t.prototype.showAtReference = function (e) {
            this.labelContainer.hide(), this.treeContainer.show(), this.previewContainer.show(), this.show(e.range, 18), this.focus()
        }, t.prototype.showReferencePreview = function (e) {
            var t = this, n = {path: this.requestService.getPath("root", new T.URL(e.resourceUrl))};
            this.editorService.resolveEditorModel(n).done(function (n) {
                t.preview.setModel(n.textEditorModel), t.preview.setSelection(e.range, !0, !0, !0), t.preview.changeDecorations(function (n) {
                    for (var i = [], o = {className: "reference-decoration"}, r = 0; r < t.model.references.length; r++) {
                        var s = t.model.references[r];
                        s.resourceUrl === e.resourceUrl && i.push({range: s.range, options: o})
                    }
                    t.previewDecorations = n.deltaDecorations(t.previewDecorations, i)
                })
            }, L.onUnexpectedError), this.tree.setSelection([e]), this.tree.setFocus(e), this.tree.reveal(e)
        }, t.prototype.revealCurrentReference = function () {
            var e = this.model.currentReference.resourceUrl, t = this.model.currentReference.range;
            return this.editorService.openEditor({path: this.requestService.getPath("root", new T.URL(e)), options: {selection: t}})
        }, t.prototype.dispose = function () {
            this.setModel(null), this.preview.destroy(), this.tree.dispose(), e.prototype.dispose.call(this)
        }, t.Events = {EditorDoubleClick: "editorDoubleClick"}, t
    }(k.ZoneWidget), B = function (e) {
        function t(t, n) {
            e.call(this, t, n, O.Precondition.WidgetFocus), this.handlerService = null, this.editorService = null, this.requestIdPool = 0, this.model = null, this.modelRevealing = !1, this.widget = null, this.callOnClear = [], this.label = b.localize("vs_editor_contrib_referenceSearch_referenceSearch", 4), this.enabled = !1
        }

        return __extends(t, e), t.prototype.injectEditorService = function (e) {
            this.editorService = e
        }, t.prototype.injectRequestService = function (e) {
            this.requestService = e
        }, t.prototype.injectMessageService = function (e) {
            this.messageService = e
        }, t.prototype.injectionDone = function () {
            this.updateEnablementState()
        }, t.prototype.getEnablementState = function () {
            return!!(this.handlerService && this.editorService && this.requestService && this.messageService && e.prototype.getEnablementState.call(this) && this.editor.getModel().getMode().referenceSupport)
        }, t.prototype.run = function () {
            var e = this, t = this.editor.getSelection(), n = this.widget ? this.widget.position : null, i = this.clear();
            if (i && n && t.containsPosition(n))return null;
            var o = ++this.requestIdPool, r = this.editor.getModel(), s = this.editor.getModel().getMode().referenceSupport, a = this.telemetryService.start("findReferences", {mode: r.getMode().getId()});
            return s.findReferences(r.getAssociatedResource(), t.getStartPosition()).then(function (n) {
                if (o !== e.requestIdPool)return a.stop(), void 0;
                if (0 === n.length)return e.widget.showNoResultsMessage(t), a.stop(), void 0;
                e.model = new A(n);
                var i = e.model.findReferenceFromPosition(r.getAssociatedResource().toExternal(), t.getStartPosition());
                e.model.currentReference = e.model.references[i], e.callOnClear.push(e.model.addListener(A.ON_CURRENT_REF, function () {
                    e.model.currentReference && (e.modelRevealing = !0, e.widget.revealCurrentReference().done(function () {
                        e.modelRevealing = !1, window.setTimeout(function () {
                            e.widget.showReferencePreview(e.model.currentReference), e.widget.showAtReference(e.model.currentReference)
                        }, 0)
                    }, L.onUnexpectedError))
                })), e._startTime = Date.now(), e.widget.setModel(e.model), e.widget.showAtReference(e.model.currentReference), e.widget.showReferencePreview(e.model.references[(i + 1) % e.model.references.length]), a.stop()
            }, function (t) {
                e.messageService.show(E.Severity.Error, t), a.stop()
            }), this.callOnClear.push(this.handlerService.bind({key: "Escape"},function () {
                return e.clear()
            }, {once: !0, id: "referenceSearch"}).dispose), this.callOnClear.push(this.editor.addListener(P.EventType.ModelModeChanged, function () {
                e.clear()
            })), this.callOnClear.push(this.editor.addListener(P.EventType.ModelChanged, function () {
                e.modelRevealing || e.clear()
            })), this.widget = new U(this.editorService, this.requestService, this.editor), this.widget.showLoading(t), this.callOnClear.push(this.widget.addListener(U.Events.EditorDoubleClick, function (t) {
                e.editorService.openEditor({path: e.requestService.getPath("root", new T.URL(t.reference.resourceUrl)), options: {selection: t.range}}).done(null, L.onUnexpectedError), e.clear()
            })), C.Promise.as(this.widget)
        }, t.prototype.clear = function () {
            this.telemetryService.log("zoneWidgetShown", {mode: "reference search", elapsedTime: Date.now() - this._startTime}), S.cAll(this.callOnClear), this.model = null;
            var e = !1;
            return null !== this.widget && (this.widget.dispose(), this.widget = null, e = !0), this.editor.focus(), this.requestIdPool += 1, e
        }, t.ID = "editor.actions.referenceSearch.trigger", t
    }(O.EditorAction);
    t.ReferenceAction = B;
    var z = new _.ActionDescriptor(B, B.ID, b.localize("vs_editor_contrib_referenceSearch_referenceSearch", 5), {shift: !0, key: "F12"}), q = w.Registry.as(O.Extensions.EditorContributions);
    q.registerEditorContribution(z)
}), define("vs/css!vs/editor/contrib/links/links", ["vs/css!vs/editor/editor.main"], {}), define("vs/editor/contrib/links/links", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/lib/winjs.base", "vs/platform/platform", "vs/base/env", "vs/editor/core/constants", "vs/editor/core/range", "vs/editor/editorExtensions", "vs/editor/editor", "vs/css!./links"], function (e, t, n, i, o, r, s, a, u, l) {
    "use strict";
    var d = n, c = i, h = o, p = r, f = s, g = a, m = u, v = l, y = function () {
        function e(e) {
            var t = this;
            this.editor = e, this.listenersToRemove = [], this.listenersToRemove.push(e.addListener("change", function () {
                return t.onChange()
            })), this.listenersToRemove.push(e.addListener(f.EventType.ModelChanged, function () {
                t.decorations = [], t.stop(), t.beginCompute()
            })), this.listenersToRemove.push(this.editor.addListener(f.EventType.MouseUp, function (e) {
                return t.onEditorMouseUp(e)
            })), this.listenersToRemove.push(this.editor.addListener(f.EventType.MouseMove, function (e) {
                return t.onEditorMouseMove(e)
            })), this.listenersToRemove.push(this.editor.addListener(f.EventType.KeyDown, function (e) {
                return t.onEditorKeyDown(e)
            })), this.listenersToRemove.push(this.editor.addListener(f.EventType.KeyUp, function (e) {
                return t.onEditorKeyUp(e)
            })), this.timeoutPromise = null, this.computePromise = null, this.decorations = [], this.beginCompute()
        }

        return e.prototype.onChange = function () {
            var t = this;
            this.stop(), this.timeoutPromise = c.TPromise.timeout(e.RECOMPUTE_TIME), this.timeoutPromise.then(function () {
                t.timeoutPromise = null, t.beginCompute()
            })
        }, e.prototype.beginCompute = function () {
            var e = this;
            if (this.editor.getModel()) {
                var t = this.editor.getModel().getMode();
                t.linkSupport && (this.computePromise = t.linkSupport.computeLinks(this.editor.getModel().getAssociatedResource()), this.computePromise.then(function (t) {
                    return e.updateDecorations(t)
                }))
            }
        }, e.prototype.updateDecorations = function (t) {
            var n = [];
            if (t)for (var i = 0; i < t.length; i++)n.push({range: t[i].range, options: {inlineClassName: e.CLASS_NAME, hoverMessage: e.HOVER_MESSAGE}});
            this.decorations = this.editor.deltaDecorations(this.decorations, n)
        }, e.prototype.onEditorKeyDown = function (t) {
            t.key === e.TRIGGER_KEY_VALUE && this.lastMouseEvent && this.onEditorMouseMove(this.lastMouseEvent, t)
        }, e.prototype.onEditorKeyUp = function (t) {
            t.key === e.TRIGGER_KEY_VALUE && this.cleanUpActiveLinkDecoration()
        }, e.prototype.onEditorMouseMove = function (t, n) {
            var i = this;
            if (this.lastMouseEvent = t, this.isEnabled(t, n)) {
                this.cleanUpActiveLinkDecoration();
                var o = this.getLinkDecoration(t);
                o && o.options && o.options.inlineClassName !== e.CLASS_NAME_ACTIVE && this.editor.changeDecorations(function (t) {
                    t.changeDecorationOptions(o.id, {inlineClassName: e.CLASS_NAME_ACTIVE, hoverMessage: e.HOVER_MESSAGE}), i.activeLinkDecoration = o
                })
            } else this.cleanUpActiveLinkDecoration()
        }, e.prototype.cleanUpActiveLinkDecoration = function () {
            if (this.activeLinkDecoration) {
                var t = this.activeLinkDecoration.id;
                this.activeLinkDecoration = null, this.editor.changeDecorations(function (n) {
                    n.changeDecorationOptions(t, {inlineClassName: e.CLASS_NAME, hoverMessage: e.HOVER_MESSAGE})
                })
            }
        }, e.prototype.onEditorMouseUp = function (e) {
            if (this.isEnabled(e)) {
                var t = this.getLinkDecoration(e);
                if (t) {
                    var n = this.editor.getModel().getValueInRange(t.range);
                    window.open(n)
                }
            }
        }, e.prototype.getLinkDecoration = function (t) {
            for (var n = t.target.position, i = this.editor.getModel().getDecorationsInRange({startLineNumber: n.lineNumber, startColumn: n.column, endLineNumber: n.lineNumber, endColumn: n.column}, null, !0), o = 0; o < i.length; o++) {
                var r = i[o];
                if (r.options && (r.options.inlineClassName === e.CLASS_NAME || r.options.inlineClassName === e.CLASS_NAME_ACTIVE)) {
                    var s = new g.Range(r.range.startLineNumber, r.range.startColumn, r.range.endLineNumber, r.range.endColumn);
                    if (s.containsPosition(n))return r
                }
            }
            return null
        }, e.prototype.isEnabled = function (t, n) {
            return t.target.type === v.MouseTargetType.CONTENT_TEXT && (t.event[e.TRIGGER_MODIFIER] || n && n.key === e.TRIGGER_KEY_VALUE) && !!this.editor.getModel().getMode().linkSupport
        }, e.prototype.stop = function () {
            this.timeoutPromise && (this.timeoutPromise.cancel(), this.timeoutPromise = null), this.computePromise && (this.computePromise.cancel(), this.computePromise = null)
        }, e.prototype.destroy = function () {
            this.listenersToRemove.forEach(function (e) {
                e()
            }), this.listenersToRemove = [], this.stop()
        }, e.RECOMPUTE_TIME = 1e3, e.TRIGGER_KEY_VALUE = p.browser.isMacintosh ? "Meta" : "Ctrl", e.TRIGGER_MODIFIER = p.browser.isMacintosh ? "metaKey" : "ctrlKey", e.HOVER_MESSAGE = p.browser.isMacintosh ? d.localize("vs_editor_contrib_links_links", 0) : d.localize("vs_editor_contrib_links_links", 1), e.CLASS_NAME = "detected-link", e.CLASS_NAME_ACTIVE = "detected-link-active", e
    }(), b = function () {
        function e(e) {
            this.linkDetector = new y(e)
        }

        return e.prototype.getId = function () {
            return e.ID
        }, e.prototype.dispose = function () {
            this.linkDetector.destroy()
        }, e.ID = "editor.contrib.LinkDetector", e
    }(), C = h.Registry.as(m.Extensions.EditorContributions);
    C.registerEditorContribution(new h.BaseDescriptor(b))
}), define("vs/base/diagnostics", ["require", "exports"], function (e, t) {
    "use strict";
    function n(e, t) {
        for (; e.length > t;)e.shift()
    }

    function i(e, t) {
        var i = r[e] || !1;
        r[e] = i;
        var o = s[e] || [];
        o.push(t), s[e] = o;
        var u = function () {
            for (var i = [], o = 0; o < arguments.length - 0; o++)i[o] = arguments[o + 0];
            var s;
            if (r[e] === !0) {
                var u = [arguments];
                s = a.indexOf(t), -1 !== s && (u.unshift.apply(u, a[s + 1] || []), a[s + 1] = []), u.length > 1;
                var l = function () {
                    var e = u.shift();
                    t.apply(t, e), u.length > 0 && window.setTimeout(l, 500)
                };
                l()
            } else {
                s = a.indexOf(t), s = -1 !== s ? s : a.length;
                var d = s + 1, c = a[d] || [];
                c.push(arguments), n(c, 50), a[s] = t, a[d] = c
            }
        };
        return u
    }

    var o = self;
    o.Monaco || (o.Monaco = {}), o.Monaco.Diagnostics = {};
    var r = o.Monaco.Diagnostics, s = {}, a = [];
    t.register = i
}), define("vs/platform/handlerService", ["require", "exports", "vs/base/diagnostics", "vs/base/env", "vs/base/dom/dom", "vs/base/dom/keyboardEvent"], function (e, t, n, i, o, r) {
    "use strict";
    function s(e) {
        var t = [];
        return(e.ctrlCmd && !u.browser.isMacintosh || e.winCtrl && u.browser.isMacintosh) && t.push("Ctrl"), e.shift && t.push("Shift"), e.alt && t.push("Alt"), (e.ctrlCmd && u.browser.isMacintosh || e.winCtrl && !u.browser.isMacintosh) && t.push("Meta"), t.push(e.key), t.join("-")
    }

    var a = n, u = i, l = o, d = r;
    t.asString = s;
    var c = a.register("HandlerServiceActivationVerbose", function (e, t, n) {
        console.log(e + " > " + t.id + " > " + n)
    }), h = a.register("HandlerServiceFocusVisual", function (e, t) {
        e.style.outlineWidth = "5px", e.style.outlineStyle = "solid", e.style.outlineColor = t === !0 ? "yellowgreen" : t === !1 ? "red" : "gray"
    }), p = a.register("HandlerServiceFocusTextual", function (e) {
        console.log("got FOCUS @" + (new Date).getTime(), e)
    }), f = function () {
        function e(e, t) {
            this.keyBinding = e, this.onEmpty = t, this.data = []
        }

        return e.prototype.push = function (e, t) {
            "undefined" == typeof t && (t = {});
            var n, i, o = this, r = this;
            return n = function () {
                for (var n = [], o = 0; o < arguments.length - 0; o++)n[o] = arguments[o + 0];
                if (!this.active)return!1;
                var s = !1;
                try {
                    s = e.apply(e, n), s === !0 && t.once && i.dispose()
                } catch (a) {
                    throw i.dispose(), a
                }
                return c(r.keyBinding, t, "handled?" + s), s
            }, n.$debugId = t.id, n.active = !0, this.data.unshift(n), i = {activate: function () {
                c(o.keyBinding, t, "activated"), n.active = !0
            }, deactivate: function () {
                c(o.keyBinding, t, "deactivated"), n.active = !1
            }, dispose: function () {
                c(o.keyBinding, t, "disposed");
                var e = o.data.indexOf(n);
                -1 !== e && (o.data.splice(e, 1), 0 === o.data.length && o.onEmpty())
            }}
        }, e.prototype.trigger = function () {
            for (var e = [], t = 0; t < arguments.length - 0; t++)e[t] = arguments[t + 0];
            for (var n = 0; n < this.data.length; n++) {
                var i = this.data[n].apply(this.data[n], e);
                if (i === !0)return!0
            }
            return!1
        }, e
    }();
    t.HandlerList = f;
    var g = function () {
        function e(e) {
            this.bindings = e
        }

        return e.prototype.activate = function () {
            this.bindings.forEach(function (e) {
                e.activate()
            })
        }, e.prototype.deactivate = function () {
            this.bindings.forEach(function (e) {
                e.deactivate()
            })
        }, e.prototype.dispose = function () {
            this.bindings.forEach(function (e) {
                e.dispose()
            })
        }, e
    }();
    t.CompositeBinding = g;
    var m = function () {
        function e(e) {
            var t = this;
            this.map = {}, this.unbind = l.addListener(e, l.EventType.KEY_DOWN, function (e) {
                var n = new d.KeyboardEvent(e);
                t.dispatch(n)
            })
        }

        return e.prototype.dispatch = function (e) {
            var t = e.asString(), n = this.map[t], i = !1;
            return n instanceof f && (i = n.trigger(e)), i && (e.preventDefault(), e.stopPropagation()), i
        }, e.prototype.ensureHandlerList = function (e) {
            var n = this, i = t.asString(e), o = this.map[i];
            return o || (o = new f(i, function () {
                delete n.map[i]
            }), this.map[i] = o), o
        }, e.prototype.bind = function (e, t, n) {
            return"undefined" == typeof n && (n = {once: !1, id: "unkown"}), this.ensureHandlerList(e).push(t, n)
        }, e.prototype.bindGroup = function (e, n) {
            "undefined" == typeof n && (n = {once: !1, id: "unkownGroup"});
            var i, o = this, r = [], s = function (e, s) {
                var a = s;
                n.once && (a = function () {
                    var o = !1;
                    try {
                        o = s.apply(s, arguments), o === !0 && (c(t.asString(e), n, "handled?true > GROUP disposal"), i.dispose())
                    } catch (r) {
                        throw i.dispose(), r
                    }
                    return o
                }), r.push(o.bind(e, a))
            };
            return e(s), i = new g(r)
        }, e.prototype.dispose = function () {
            this.unbind(), this.map = null
        }, e
    }();
    t.HandlerService = m;
    var v = function () {
        function e(e) {
            this.delegate = e, this.bindings = []
        }

        return e.prototype.bind = function (e, t, n) {
            var i = this.delegate.bind(e, t, n);
            return this.bindings.push(i), i
        }, e.prototype.bindGroup = function (e, t) {
            var n = this.delegate.bindGroup(e, t);
            return this.bindings.push(n), n
        }, e.prototype.capture = function () {
            return new g(this.bindings)
        }, e
    }();
    t.HandlerServiceWrapper = v;
    var y = function () {
        function e(e, t) {
            var n = this;
            this.domNode = e, this.scopeNode = t, this.handlerActive = !1, h(this.scopeNode), this.unbind = l.addListener(this.domNode, l.EventType.FOCUS, function (e) {
                p(e.target), n.update(l.isAncestor(e.target, n.scopeNode))
            }, !0)
        }

        return e.prototype.injectHandlerService = function (e) {
            this.delegate = e
        }, e.prototype.update = function (e) {
            this.handlerActive !== e && (this.handlerActive = e), h(this.scopeNode, e)
        }, e.prototype.bind = function (e, t, n) {
            return this.delegate.bind(e, this.wrapHandler(t), n)
        }, e.prototype.bindGroup = function (e, t) {
            var n = this;
            return this.delegate.bindGroup(function (t) {
                var i = function (e, i) {
                    t(e, n.wrapHandler(i))
                };
                e(i)
            }, t)
        }, e.prototype.wrapHandler = function (e) {
            var t = this, n = function () {
                return t.handlerActive !== !0 ? !1 : e.apply(e, arguments)
            };
            return n
        }, e.prototype.dispose = function () {
            this.unbind()
        }, e
    }();
    t.FocusTrackingHandlerService = y
}), define("vs/css!vs/base/ui/widgets/actionbar", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/base/ui/events", ["require", "exports"], function (e, t) {
    "use strict";
    var n = function () {
        function e(e) {
            this.time = (new Date).getTime(), this.originalEvent = e, this.source = null
        }

        return e
    }();
    t.Event = n;
    var i = function (e) {
        function t(t, n) {
            e.call(this, n), this.message = t
        }

        return __extends(t, e), t
    }(n);
    t.MessageEvent = i;
    var o = function (e) {
        function t(t, n, i, o) {
            e.call(this, o), this.key = t, this.oldValue = n, this.newValue = i
        }

        return __extends(t, e), t
    }(n);
    t.PropertyChangeEvent = o;
    var r = function (e) {
        function t(t, n) {
            e.call(this, n), this.element = t
        }

        return __extends(t, e), t
    }(n);
    t.ViewerEvent = r, t.EventType = {PROPERTY_CHANGED: "propertyChanged", SELECTION: "selection", FOCUS: "focus", HIGHLIGHT: "highlight", EXPAND: "expand", COLLAPSE: "collapse", TOGGLE: "toggle", CONTENTS_CHANGED: "contentsChanged", BEFORE_RUN: "beforeRun", RUN: "run", EDIT: "edit", SAVE: "save", CANCEL: "cancel", INFO: "info", WARNING: "warning", ERROR: "error", CHANGE: "change", DISPOSE: "dispose"}
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/base/ui/widgets/actionbar", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/lib/winjs.base", "vs/base/dom/builder", "vs/base/ui/actions", "vs/base/lifecycle", "vs/base/dom/dom", "vs/base/ui/events", "vs/base/types", "vs/base/eventEmitter", "vs/base/dom/keyboardEvent", "vs/css!./actionbar"], function (e, t, n, i, o, r, s, a, u, l, d, c) {
    "use strict";
    function h(e, t) {
        0 === e.button && (e.type === y.EventType.MOUSE_DOWN ? t.addClass("active") : t.removeClass("active"))
    }

    var p = n, f = i, g = o, m = r, v = s, y = a, b = u, C = l, E = d, w = c, _ = g.$, S = function (e) {
        function t(t, n) {
            var i = this;
            if (e.call(this), this._callOnDispose = [], this._context = t || this, this.action = n, n instanceof m.Action) {
                var o = n.addBulkListener(function (e) {
                    e.forEach(function (e) {
                        switch (e.getType()) {
                            case m.Action.ENABLED:
                                i._updateEnabled();
                                break;
                            case m.Action.LABEL:
                                i._updateLabel();
                                break;
                            case m.Action.CLASS:
                                i._updateClass();
                                break;
                            case m.Action.CHECKED:
                                i._updateChecked();
                                break;
                            default:
                                i._updateUnknown(e)
                        }
                    })
                });
                this._callOnDispose.push(o)
            }
        }

        return __extends(t, e), t.prototype.getAction = function () {
            return this.action
        }, t.prototype.setActionContext = function (e) {
            this._context = e
        }, t.prototype.render = function (e) {
            var t = this;
            this.builder = g.Build.withElement(e), this.builder.on(y.EventType.CLICK, function (e) {
                t.onClick(e)
            }), this.builder.on("mousedown", function (e) {
                0 === e.button && t.action.enabled && t.builder.addClass("active")
            }), this.builder.on(["mouseup", "mouseout"], function (e) {
                0 === e.button && t.action.enabled && t.builder.removeClass("active")
            })
        }, t.prototype.onClick = function (e) {
            y.EventHelper.stop(e, !0), this.runAction(e)
        }, t.prototype.runAction = function (e) {
            var t = this;
            this.action.enabled && (this.emit(b.EventType.BEFORE_RUN, {action: this.action}), f.Promise.as(this.action.run(this._context || e)).then(function (e) {
                t.emit(b.EventType.RUN, {action: t.action, result: e})
            },function (e) {
                t.emit(b.EventType.RUN, {action: t.action, error: e})
            }).done())
        }, t.prototype.focus = function () {
            this.builder.domFocus()
        }, t.prototype._updateEnabled = function () {
        }, t.prototype._updateLabel = function () {
        }, t.prototype._updateClass = function () {
        }, t.prototype._updateChecked = function () {
        }, t.prototype._updateUnknown = function () {
        }, t.prototype.dispose = function () {
            e.prototype.dispose.call(this), v.cAll(this._callOnDispose)
        }, t
    }(E.EventEmitter);
    t.BaseActionItem = S, t.Separator = {id: "actions.monaco.separator", "class": "separator", label: "", checked: !1, enabled: !1, run: function () {
        return null
    }};
    var T = function (e) {
        function t(t, n, i) {
            "undefined" == typeof i && (i = {}), e.call(this, t, n), this.options = i, this.options.icon = void 0 !== i.icon ? i.icon : !1, this.options.label = void 0 !== i.label ? i.label : !0, this.cssClass = ""
        }

        return __extends(t, e), t.prototype.render = function (t) {
            e.prototype.render.call(this, t), this.$e = _("a.action-label").attr("tabIndex", "-1").appendTo(this.builder), this.$e.attr({role: "menuitem"}), !this.options.label && this.getAction().label && this.options.icon && this.$e.attr({title: this.getAction().label}), this._updateClass(), this._updateLabel(), this._updateEnabled(), this._updateChecked()
        }, t.prototype.focus = function () {
            this.$e.domFocus()
        }, t.prototype._updateLabel = function () {
            this.options.label && this.$e.text(this.getAction().label)
        }, t.prototype._updateClass = function () {
            this.cssClass && this.$e.removeClass(this.cssClass), this.options.icon ? (this.cssClass = this.getAction().class, this.$e.addClass("icon"), this.$e.addClass(this.cssClass), this._updateEnabled()) : this.$e.removeClass("icon")
        }, t.prototype._updateEnabled = function () {
            this.getAction().enabled ? (this.builder.removeClass("disabled"), this.$e.removeClass("disabled")) : (this.builder.addClass("disabled"), this.$e.addClass("disabled"))
        }, t.prototype._updateChecked = function () {
            this.getAction().checked ? this.$e.addClass("checked") : this.$e.removeClass("checked")
        }, t
    }(S);
    t.ActionItem = T;
    var L = function (e) {
        function t(t) {
            e.call(this, null, t), this.callOnDispose = []
        }

        return __extends(t, e), t.prototype.render = function (t) {
            var n = document.createElement("div");
            g.Build.withElement(n).addClass("progress-item");
            var i = document.createElement("div");
            g.Build.withElement(i).addClass("label"), i.textContent = this.getAction().label, i.title = this.getAction().label, e.prototype.render.call(this, i);
            var o = document.createElement("div");
            o.textContent = "â¦", g.Build.withElement(o).addClass("tag", "progress");
            var r = document.createElement("div");
            r.textContent = "â", g.Build.withElement(r).addClass("tag", "done");
            var s = document.createElement("div");
            s.textContent = "!", g.Build.withElement(s).addClass("tag", "error"), this.callOnDispose.push(this.addListener(b.EventType.BEFORE_RUN, function () {
                g.Build.withElement(o).addClass("active"), g.Build.withElement(r).removeClass("active"), g.Build.withElement(s).removeClass("active")
            })), this.callOnDispose.push(this.addListener(b.EventType.RUN, function (e) {
                g.Build.withElement(o).removeClass("active"), e.error ? (g.Build.withElement(r).removeClass("active"), g.Build.withElement(s).addClass("active")) : (g.Build.withElement(s).removeClass("active"), g.Build.withElement(r).addClass("active"))
            })), n.appendChild(i), n.appendChild(o), n.appendChild(r), n.appendChild(s), t.appendChild(n)
        }, t.prototype.dispose = function () {
            v.cAll(this.callOnDispose), e.prototype.dispose.call(this)
        }, t
    }(S);
    t.ProgressItem = L, function (e) {
        e[e.HORIZONTAL = 1] = "HORIZONTAL", e[e.VERTICAL = 2] = "VERTICAL"
    }(t.ActionsOrientation || (t.ActionsOrientation = {}));
    var N = t.ActionsOrientation, x = {orientation: N.HORIZONTAL, context: null}, M = function (e) {
        function t(t, n) {
            "undefined" == typeof n && (n = x);
            var i = this;
            e.call(this), this.builder = t, this.options = n, this.items = [], this.focusedItem = void 0, this.domNode = document.createElement("div"), this.domNode.className = "monaco-action-bar", this.options.orientation === N.VERTICAL && (this.domNode.className += " vertical"), g.Build.withElement(this.domNode).on(y.EventType.KEY_DOWN, function (e) {
                var t = new w.KeyboardEvent(e), n = !0;
                switch (t.asString()) {
                    case"UpArrow":
                    case"LeftArrow":
                        i.doFocus(!1);
                        break;
                    case"DownArrow":
                    case"RightArrow":
                        i.doFocus(!0);
                        break;
                    default:
                        n = !1
                }
                n && (t.preventDefault(), t.stopPropagation())
            }), g.Build.withElement(this.domNode).on(y.EventType.KEY_UP, function (e) {
                var t = new w.KeyboardEvent(e);
                switch (t.asString()) {
                    case"Enter":
                        i.doTrigger(e), t.preventDefault(), t.stopPropagation()
                }
            }), this.actionsList = document.createElement("ul"), this.actionsList.className = "actions-container", this.actionsList.setAttribute("role", "menu"), this.actionsList.setAttribute("aria-label", p.localize("vs_base_ui_widgets_actionbar", 0)), this.domNode.appendChild(this.actionsList), t && t.getHTMLElement().appendChild(this.domNode)
        }

        return __extends(t, e), t.prototype.getContainer = function () {
            return g.Build.withElement(this.domNode)
        }, t.prototype.push = function (e, t) {
            "undefined" == typeof t && (t = {});
            var n = this;
            C.isArray(e) || (e = [e]);
            var i = C.isNumber(t.index) ? t.index : null;
            e.forEach(function (e) {
                var o = document.createElement("li");
                o.className = "action-item", o.setAttribute("role", "presentation");
                var r = null;
                n.options.actionItemProvider && (r = n.options.actionItemProvider(e)), r || (r = new T(n.options.context, e, t)), r.setActionContext(n.options.context), n.addEmitter(r), r.render(o), null === i || 0 > i || i >= n.actionsList.children.length ? n.actionsList.appendChild(o) : n.actionsList.insertBefore(o, n.actionsList.children[i++]), n.items.push(r)
            })
        }, t.prototype.clear = function () {
            for (var e; e = this.items.pop();)e.dispose();
            _(this.actionsList).empty()
        }, t.prototype.isEmpty = function () {
            return 0 === this.items.length
        }, t.prototype.onContentsChange = function () {
            this.emit(b.EventType.CONTENTS_CHANGED)
        }, t.prototype.focus = function () {
            this.doFocus()
        }, t.prototype.doFocus = function (e) {
            var t = this.items.length;
            if (0 !== t) {
                "undefined" == typeof e ? "undefined" == typeof this.focusedItem && (this.focusedItem = 0) : "undefined" == typeof this.focusedItem ? this.focusedItem = 0 : e ? (this.focusedItem += 1, this.focusedItem >= t && (this.focusedItem = 0)) : (this.focusedItem -= 1, this.focusedItem < 0 && (this.focusedItem = t - 1));
                for (var n = 0; n < this.items.length; n++) {
                    var i = this.items[n];
                    if (i instanceof S) {
                        var o = i;
                        n === this.focusedItem ? (o.focus(), o.builder.addClass("focused")) : o.builder.removeClass("focused")
                    }
                }
            }
        }, t.prototype.doTrigger = function (e) {
            "undefined" != typeof this.focusedItem && this.items[this.focusedItem].runAction(e)
        }, t.prototype.dispose = function () {
            null !== this.items && this.clear(), this.items = null, this.getContainer().destroy(), e.prototype.dispose.call(this)
        }, t.DEFAULT_OPTIONS = {orientation: N.HORIZONTAL}, t
    }(E.EventEmitter);
    t.ActionBar = M;
    var I = function (e) {
        function t(t, n) {
            "undefined" == typeof n && (n = {});
            var i = this;
            e.call(this), this.builder = t, this.options = n, this.listeners = [], this.domNodeBuilder = t.div({"class": "monaco-actions-widget"}, function (e) {
                i.primaryActionBar = new M(e), i.secondaryActionBar = new M(e, {orientation: N.VERTICAL}), i.primaryActionBar.getContainer().addClass("primary"), i.secondaryActionBar.getContainer().addClass("secondary"), e.div({"class": "more", text: p.localize("vs_base_ui_widgets_actionbar", 1)}).on([y.EventType.CLICK],function (e) {
                    y.EventHelper.stop(e, !0), i.toggleMore()
                }).on([y.EventType.MOUSE_DOWN, y.EventType.MOUSE_UP, y.EventType.MOUSE_OUT], h)
            }), this.listeners.push(this.primaryActionBar.addListener(b.EventType.BEFORE_RUN, function (e) {
                e.actionType = "primary", i.emit(b.EventType.BEFORE_RUN, e)
            })), this.listeners.push(this.primaryActionBar.addListener(b.EventType.RUN, function (e) {
                e.actionType = "primary", i.emit(b.EventType.RUN, e)
            })), this.listeners.push(this.secondaryActionBar.addListener(b.EventType.BEFORE_RUN, function (e) {
                e.actionType = "secondary", i.emit(b.EventType.BEFORE_RUN, e)
            })), this.listeners.push(this.secondaryActionBar.addListener(b.EventType.RUN, function (e) {
                e.actionType = "secondary", i.emit(b.EventType.RUN, e)
            })), this.updateView()
        }

        return __extends(t, e), t.prototype.updateView = function () {
            0 === this.primaryActionBar.items.length ? this.domNodeBuilder.removeClass("hasPrimary") : this.domNodeBuilder.addClass("hasPrimary"), 0 === this.secondaryActionBar.items.length ? this.domNodeBuilder.removeClass("hasSecondary") : this.domNodeBuilder.addClass("hasSecondary")
        }, t.prototype.getContainer = function () {
            return g.Build.withBuilder(this.domNodeBuilder)
        }, t.prototype.toggleMore = function (e, t) {
            var n = "more";
            "undefined" == typeof e && (e = !this.domNodeBuilder.hasClass(n)), e ? this.domNodeBuilder.addClass("more") : this.domNodeBuilder.removeClass("more"), t !== !0 && this.emit(b.EventType.TOGGLE, {expanded: e})
        }, t.prototype.push = function (e, t) {
            "undefined" == typeof t && (t = {});
            var n = this, i = [];
            return C.isArray(e) || (e = [e]), e.forEach(function (e) {
                t.secondary ? n.secondaryActionBar.push(e, t) : n.primaryActionBar.push(e, t)
            }), this.updateView(), 1 === i.length ? i[0] : i
        }, t.prototype.clear = function () {
            this.primaryActionBar.clear(), this.secondaryActionBar.clear(), this.toggleMore(!1)
        }, t.prototype.update = function () {
            this.updateView()
        }, t.prototype.dispose = function () {
            for (var t; t = this.listeners.pop();)t();
            this.primaryActionBar.dispose(), this.secondaryActionBar.dispose(), this.domNodeBuilder.empty(), e.prototype.dispose.call(this)
        }, t
    }(E.EventEmitter);
    t.ActionsWidget = I
}), define("vs/css!vs/editor/contrib/inEditorActions/inEditorActions", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/inEditorActions/inEditorActions", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/lib/winjs.base", "vs/platform/platform", "vs/platform/actionRegistry", "vs/platform/handlerService", "vs/base/dom/dom", "vs/base/eventEmitter", "vs/base/types", "vs/editor/editorExtensions", "vs/editor/core/editorState", "vs/editor/core/constants", "vs/base/ui/actions", "vs/base/ui/widgets/actionbar", "vs/base/dom/builder", "vs/base/ui/events", "vs/base/dom/mouseEvent", "vs/editor/editor", "vs/css!./inEditorActions"], function (e, t, n, i, o, r, s, a, u, l, d, c, h, p, f, g, m, v, y) {
    "use strict";
    var b = n, C = i, E = o, w = r, _ = s, S = a, T = u, L = l, N = d, x = c, M = h, I = p, R = f, D = g, P = m, O = v, k = y, A = function (e) {
        function t(t) {
            e.call(this), this.editor = t, this.request = C.TPromise.as(null), this.delayedRequest = C.TPromise.as(null), this.state = null, this.actions = []
        }

        return __extends(t, e), t.prototype.hasActions = function () {
            return this.actions.length > 0
        }, t.prototype.getActions = function () {
            return this.actions
        }, t.prototype.deferredUpdate = function () {
            var e = this;
            this.delayedRequest.cancel(), this.delayedRequest = C.TPromise.timeout(500), this.delayedRequest.then(function () {
                return e.update()
            })
        }, t.prototype.update = function () {
            var e = this;
            if (null !== this.state && this.state.validate())return this.emit(t.Events.Updated, this), C.TPromise.as(null);
            var n = this.editor.getModel();
            if (!n || !n.getMode().inEditorActionsSupport)return this.actions = [], this.emit(t.Events.Updated, this), C.TPromise.as(null);
            this.request.cancel(), this.state = x.capture(this.editor, x.Flag.Position);
            var i = n.getMode().inEditorActionsSupport;
            return this.request = i.getActionsAtPosition(this.editor.getModel().getAssociatedResource(), this.editor.getPosition()), this.request.then(function (n) {
                e.actions = e.state.validate() ? n : [], e.emit(t.Events.Updated, e)
            })
        }, t.Events = {Updated: "inEditorAction.model.update"}, t
    }(T.EventEmitter), H = function () {
        function e(e, t, n) {
            this.editor = e, this.handlerService = t, this.model = n, this.toUnhook = [], this.domNode = document.createElement("div"), this.trigger = null, this.details = null, this.actionBar = null, this.expanded = !1, this.isVisible = !1, this.create(), this.add(), this.hide()
        }

        return e.prototype.create = function () {
            var e = this, t = D.Build.withElement(this.domNode).addClass("in-editor-actions");
            t.div({"class": "arrow"}, function (t) {
                t.attr({role: "button", "aria-haspopup": "true", "aria-label": b.localize("vs_editor_contrib_inEditorActions_inEditorActions", 0)}), e.trigger = t, e.trigger.on(S.EventType.CLICK, function (t) {
                    e.setExpanded(!e.expanded), new O.StandardMouseEvent(t).preventDefault()
                }, e.toUnhook)
            }), t.div({"class": "menu"}, function (t) {
                e.details = t, e.actionBar = new R.ActionBar(e.details, {orientation: R.ActionsOrientation.VERTICAL, context: e.editor}), e.toUnhook.push(e.actionBar.addListener(P.EventType.BEFORE_RUN, function () {
                    e.hide()
                })), e.toUnhook.push(e.actionBar.addListener(P.EventType.RUN, function (t) {
                    t.result && L.isFunction(t.result.focus) ? t.result.focus() : e.editor.focus()
                })), e.details.hide()
            })
        }, e.prototype.show = function () {
            this.isVisible || (this.isVisible = !0, this.domNode.style.display = "block", this.editor.layoutContentWidget(this))
        }, e.prototype.hide = function () {
            this.isVisible && (this.setExpanded(!1), this.isVisible = !1, this.domNode.style.display = "none", this.editor.layoutContentWidget(this))
        }, e.prototype.getPosition = function () {
            return this.isVisible ? {position: this.editor.getPosition(), preference: [k.ContentWidgetPositionPreference.BELOW]} : null
        }, e.prototype.fillActionBar = function () {
            var e = this;
            this.actionBar.clear();
            for (var t = E.Registry.as(N.Extensions.EditorContributions), n = t.getEditorContributions(), i = {}, o = 0; o < n.length; o++) {
                var r = n[o];
                if (r instanceof w.ActionDescriptor) {
                    var s = r;
                    s.keybindings && s.keybindings.length > 0 && (i[s.id] = _.asString(s.keybindings[0]))
                }
            }
            var a = this.model.getActions();
            a.forEach(function (t) {
                var n = e.editor.getAction(t);
                if (n) {
                    if (n.enabled) {
                        var o;
                        o = i[n.id] ? b.localize("vs_editor_contrib_inEditorActions_inEditorActions", 1, n.label, i[n.id]) : n.label, e.actionBar.push(new I.Action(n.id, o, n.class, !0, function (e) {
                            return n.run(e)
                        }))
                    }
                } else console.warn("NO action found for " + t)
            }), a.length > 0 ? this.show() : this.hide()
        }, e.prototype.setExpanded = function (e) {
            this.isVisible && (this.expanded = e, this.expanded ? (this.details.show(), this.trigger.addClass("active"), this.actionBar.focus()) : (this.details.hide(), this.trigger.removeClass("active")))
        }, e.prototype.getDomNode = function () {
            return this.domNode
        }, e.prototype.getId = function () {
            return e.ID
        }, e.prototype.add = function () {
            var e = this;
            this.editor.addContentWidget(this), this.toUnhook.push(this.model.addListener(A.Events.Updated, function () {
                return e.fillActionBar()
            })), this.toUnhook.push(this.editor.addListener(M.EventType.CursorPositionChanged, function () {
                return e.hide()
            })), this.toUnhook.push(this.editor.addListener(M.EventType.ModelChanged, function () {
                return e.hide()
            })), this.toUnhook.push(this.handlerService.bind({key: "Escape"},function () {
                return e.isVisible ? (e.hide(), e.editor.focus(), !0) : !1
            }).dispose), this.toUnhook.push(this.handlerService.bind({key: "Tab"},function () {
                return e.isVisible && e.hide(), !1
            }).dispose)
        }, e.prototype.dispose = function () {
            for (; this.toUnhook.length > 0;)this.toUnhook.pop()();
            this.domNode && this.domNode.parentElement.removeChild(this.domNode), this.actionBar.dispose(), this.domNode = null
        }, e.ID = "editor.contrib.triggerWidget", e
    }(), W = function (e) {
        function t(t, n) {
            var i = this;
            e.call(this, t, n, N.Precondition.WidgetFocus), this.model = new A(t), this.widget = null, this.toUnhook.push(t.addListener(M.EventType.CursorPositionChanged, function (e) {
                if (i.enabled && "explicit" === e.reason && "mouse" === e.source) {
                    var t = i.editor.getSelection();
                    if (t.startLineNumber === t.endLineNumber) {
                        var n = i.editor.getModel().getWordAtPosition({lineNumber: t.startLineNumber, column: t.startColumn}, !0, !0);
                        !n || n.startColumn > t.startColumn || n.endColumn < t.endColumn || i.model.deferredUpdate()
                    }
                }
            }))
        }

        return __extends(t, e), t.prototype.injectHandlerService = function (t) {
            e.prototype.injectHandlerService.call(this, t), this.widget || (this.widget = new H(this.editor, this.handlerService, this.model))
        }, t.prototype.run = function () {
            var e = this;
            return this.model.update().then(function () {
                e.widget.setExpanded(!0)
            })
        }, t.prototype.dispose = function () {
            e.prototype.dispose.call(this), this.model && (this.model.dispose(), this.model = null), this.widget && (this.widget.dispose(), this.widget = null)
        }, t.ID = "editor.action.inEditorActions.now", t
    }(N.EditorAction), V = new w.ActionDescriptor(W, W.ID, b.localize("vs_editor_contrib_inEditorActions_inEditorActions", 2), {ctrlCmd: !0, key: "."}), F = E.Registry.as(N.Extensions.EditorContributions);
    F.registerEditorContribution(V)
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/lib/winjs.base", "vs/platform/platform", "vs/platform/actionRegistry", "vs/editor/editorExtensions"], function (e, t, n, i, o, r, s) {
    "use strict";
    var a = n, u = i, l = o, d = r, c = s, h = function (e) {
        function t(t, n) {
            e.call(this, t, n)
        }

        return __extends(t, e), t.prototype.run = function () {
            return this.editor.getConfiguration().tabFocusMode ? this.editor.updateOptions({tabFocusMode: !1}) : this.editor.updateOptions({tabFocusMode: !0}), u.TPromise.as(!0)
        }, t.ID = "editor.actions.toggleTabFocusMode", t
    }(c.EditorAction), p = new d.ActionDescriptor(h, h.ID, a.localize("vs_editor_contrib_toggleTabFocusMode_toggleTabFocusMode", 0), {ctrlCmd: !0, key: "M"}), f = l.Registry.as(c.Extensions.EditorContributions);
    f.registerEditorContribution(p)
}), define("vs/editor/contrib/wordHighlighter/wordHighlighter", ["require", "exports", "vs/platform/platform", "vs/editor/core/constants", "vs/editor/core/range", "vs/editor/editorExtensions"], function (e, t, n, i, o, r) {
    "use strict";
    var s = n, a = i, u = o, l = r, d = function () {
        function e(e) {
            var t = this;
            this.workerRequestTokenId = 0, this.workerRequest = null, this.workerRequestCompleted = !1, this.workerRequestValue = null, this.lastCursorPositionChangeTime = 0, this.renderDecorationsTimer = -1, this.editor = e, this.model = this.editor.getModel(), this.toUnhook = [], this.toUnhook.push(e.addListener(a.EventType.CursorPositionChanged, function (e) {
                t._onPositionChanged(e)
            })), this.toUnhook.push(e.addListener(a.EventType.ModelChanged, function () {
                t._stopAll(), t.model = t.editor.getModel()
            })), this.toUnhook.push(e.addListener("change", function () {
                t._stopAll()
            })), this._lastWordRange = null, this._decorationIds = [], this.workerRequestTokenId = 0, this.workerRequest = null, this.workerRequestCompleted = !1, this.workerRequestValue = null, this.lastCursorPositionChangeTime = 0, this.renderDecorationsTimer = -1
        }

        return e.prototype._removeDecorations = function () {
            var e = this;
            this._decorationIds.length > 0 && (this.editor.changeDecorations(function (t) {
                for (var n = 0, i = e._decorationIds.length; i > n; n++)t.removeDecoration(e._decorationIds[n])
            }), this._decorationIds = [])
        }, e.prototype._stopAll = function () {
            this._lastWordRange = null, this._removeDecorations(), -1 !== this.renderDecorationsTimer && (window.clearTimeout(this.renderDecorationsTimer), this.renderDecorationsTimer = -1), null !== this.workerRequest && (this.workerRequest.cancel(), this.workerRequest = null), this.workerRequestCompleted || (this.workerRequestTokenId++, this.workerRequestCompleted = !0)
        }, e.prototype._onPositionChanged = function (e) {
            var t = this;
            if ("explicit" !== e.reason)return this._stopAll(), void 0;
            if (this.editor.getConfiguration().readOnly)return this._stopAll(), void 0;
            if (!this.model.getMode().occurrencesSupport)return this._stopAll(), void 0;
            var n = this.editor.getSelection();
            if (n.startLineNumber !== n.endLineNumber)return this._stopAll(), void 0;
            var i = n.startLineNumber, o = n.startColumn, r = n.endColumn, s = this.model.getWordAtPosition({lineNumber: i, column: o}, !0, !0);
            if (!s || s.startColumn > o || s.endColumn < r)return this._stopAll(), void 0;
            for (var a = new u.Range(i, s.startColumn, i, s.endColumn), l = this._lastWordRange && this._lastWordRange.equalsRange(a), d = 0, c = this._decorationIds.length; !l && c > d; d++) {
                var h = this.model.getDecorationRange(this._decorationIds[d]);
                h && h.startLineNumber === i && h.startColumn <= o && h.endColumn >= r && (l = !0)
            }
            if (this.lastCursorPositionChangeTime = (new Date).getTime(), l)this.workerRequestCompleted && -1 !== this.renderDecorationsTimer && (window.clearTimeout(this.renderDecorationsTimer), this.renderDecorationsTimer = -1, this._beginRenderDecorations()); else {
                this._stopAll();
                var p = ++this.workerRequestTokenId;
                this.workerRequestCompleted = !1, this.workerRequest = this.model.getMode().occurrencesSupport.findOccurrences(this.model.getAssociatedResource(), this.editor.getPosition()), this.workerRequest.then(function (e) {
                    p === t.workerRequestTokenId && (t.workerRequestCompleted = !0, t.workerRequestValue = e, t._beginRenderDecorations())
                }).done()
            }
            this._lastWordRange = a
        }, e.prototype._beginRenderDecorations = function () {
            var e = this, t = (new Date).getTime(), n = this.lastCursorPositionChangeTime + 250;
            t >= n ? (this.renderDecorationsTimer = -1, this.renderDecorations()) : this.renderDecorationsTimer = window.setTimeout(function () {
                e.renderDecorations()
            }, n - t)
        }, e.prototype.renderDecorations = function () {
            this.renderDecorationsTimer = -1;
            for (var e = [], t = 0, n = this.workerRequestValue.length; n > t; t++) {
                var i = this.workerRequestValue[t], o = "wordHighlight", r = "rgba(246, 185, 77, 0.7)";
                i.kind && "write" === i.kind && (o += "Strong", r = "rgba(249, 206, 130, 0.7)"), e.push({range: i.range, options: {isOverlay: !1, className: o, showInOverviewRuler: r}})
            }
            this._decorationIds = this.editor.deltaDecorations(this._decorationIds, e)
        }, e.prototype.destroy = function () {
            for (this._stopAll(); this.toUnhook.length > 0;)this.toUnhook.pop()()
        }, e
    }(), c = function () {
        function e(e) {
            this.wordHighligher = new d(e)
        }

        return e.prototype.getId = function () {
            return e.ID
        }, e.prototype.dispose = function () {
            this.wordHighligher.destroy()
        }, e.ID = "editor.contrib.wordHighlighter", e
    }(), h = s.Registry.as(l.Extensions.EditorContributions);
    h.registerEditorContribution(new s.BaseDescriptor(c))
}), define("vs/editor/editor.all", ["./core/codeEditorWidget", "./diff/diffEditorWidget", "./contrib/find/find", "./contrib/format/format", "./contrib/hover/hover", "./contrib/rename/rename", "./contrib/snippet/snippet", "./contrib/comment/comment", "./contrib/linesOperations/linesOperations", "./contrib/goToDeclaration/goToDeclaration", "./contrib/gotoError/gotoError", "./contrib/inPlaceReplace/inPlaceReplace", "./contrib/suggest/suggest", "./contrib/parameterHints/parameterHints", "./contrib/diffNavigator/diffNavigator", "./contrib/smartSelect/smartSelect", "./contrib/smartSelect/jumpToBracket", "./contrib/color/colorPicker", "./contrib/referenceSearch/referenceSearch", "./contrib/links/links", "./contrib/inEditorActions/inEditorActions", "./contrib/toggleTabFocusMode/toggleTabFocusMode", "./contrib/wordHighlighter/wordHighlighter"], function () {
    "use strict"
}), define("vs/css!vs/editor/terminal/terminal", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/terminal/terminal", ["require", "exports", "vs/editor/core/codeEditorWidget", "vs/editor/core/constants", "vs/base/dom/dom", "vs/editor/core/command/replaceCommand", "vs/css!./terminal"], function (e, t, n, i, o, r) {
    "use strict";
    var s = n, a = i, u = o, l = r, d = function (e) {
        function t(t, n, i) {
            var o = this;
            e.call(this, t, n, i), this.terminalListenersToRemove = [], this.terminalListenersToRemove.push(u.addListener(t, "mouseup", function () {
                return o.onMouseUp()
            })), this.isReadOnly = !1, this.resume(!0, !0)
        }

        return __extends(t, e), t.prototype._attachModel = function (t) {
            var n = this;
            e.prototype._attachModel.call(this, t), this.cursor && this.listenersToRemove.push(this.cursor.addListener(a.EventType.CursorSelectionChanged, function (e) {
                return n._onCursorSelectionChanged(e)
            }))
        }, t.prototype._onCursorSelectionChanged = function (e) {
            if ("modelChange" === e.source && e.selection.isEmpty()) {
                var t = this.getPosition(), n = this.cursor.getEditableRange();
                t.equals(n.getEndPosition()) && this.revealPosition(t, !1, !1)
            }
        }, t.prototype.onMouseUp = function () {
            if (this.getModel() && this.getSelection().isEmpty()) {
                var e = this.getPosition(), t = this.cursor.getEditableRange();
                if (!t.containsPosition(e)) {
                    var n = this.model.getLineCount(), i = this.model.getLineMaxColumn(n);
                    this.setPosition({lineNumber: n, column: i}, !1, !1, !1)
                }
            }
        }, t.prototype.destroy = function () {
            this.terminalListenersToRemove.forEach(function (e) {
                e()
            }), this.terminalListenersToRemove = [], e.prototype.destroy.call(this)
        }, t.prototype.getEditorType = function () {
            return a.EditorType.ITerminal
        }, t.prototype.peekCurrentInput = function () {
            var e = this.cursor.getEditableRange();
            return this.getModel().getValueInRange(e)
        }, t.prototype.acceptInput = function () {
            var e = this.peekCurrentInput();
            return this.resume(!0, !0), e
        }, t.prototype.replaceInput = function (e) {
            var t = this.peekCurrentInput(), n = this.cursor.getEditableRange(), i = new l.ReplaceCommand(n, e);
            return this.trigger("terminal", a.Handler.ExecuteCommand, i), t
        }, t.prototype.setReadOnly = function (e) {
            this.isReadOnly !== e && (this.isReadOnly = e, this.updateOptions({readOnly: e}))
        }, t.prototype.pause = function () {
            this.setReadOnly(!0)
        }, t.prototype.resume = function (e, t) {
            if (this.getModel()) {
                this.setReadOnly(!1);
                var n = this.model.getLineCount(), i = this.model.getLineMaxColumn(n);
                e && this.cursor.setEditableRange({startLineNumber: n, startColumn: i, endLineNumber: n, endColumn: i}), t && this.setPosition({lineNumber: n, column: i}, !1, !1, !1)
            }
        }, t
    }(s.CodeEditorWidget);
    t.Terminal = d
}), define("vs/editor/standalone/simpleServices", ["require", "exports", "vs/base/lib/winjs.base", "vs/platform/services", "vs/base/errors", "vs/base/types"], function (e, t, n, i, o, r) {
    "use strict";
    var s = n, a = i, u = o, l = r, d = function () {
        function e(e) {
            this.editor = e
        }

        return e.prototype.getId = function () {
            return"editor"
        }, e.prototype.getControl = function () {
            return this.editor
        }, e.prototype.getSelection = function () {
            return this.editor.getSelection()
        }, e.prototype.focus = function () {
            this.editor.focus()
        }, e
    }();
    t.SimpleEditor = d;
    var c = function () {
        function e(e) {
            this.model = e
        }

        return Object.defineProperty(e.prototype, "textEditorModel", {get: function () {
            return this.model
        }, enumerable: !0, configurable: !0}), e
    }();
    t.SimpleModel = c;
    var h = function () {
        function e(e) {
            this.editor = e
        }

        return e.prototype.getActiveEditor = function () {
            return new d(this.editor)
        }, e.prototype.getActiveEditorInput = function () {
            return null
        }, e.prototype.openEditor = function (e) {
            var t = this.editor.getModel();
            if (t.id !== e.path && t.getAssociatedResource().toExternal() !== e.path)return s.Promise.as(!1);
            var n = e.options.selection;
            return n && (l.isUndefinedOrNull(n.endLineNumber) || l.isUndefinedOrNull(n.endColumn) ? this.editor.setPosition({lineNumber: n.startLineNumber, column: n.startColumn}, !0, !0, !0) : this.editor.setSelection(n, !0, !0, !0)), s.Promise.as(!0)
        }, e.prototype.resolveEditorModel = function (e) {
            var t = this.editor.getModel();
            return t.id !== e.path && t.getAssociatedResource().toExternal() !== e.path ? s.Promise.as(null) : s.Promise.as(new c(t))
        }, e
    }();
    t.SimpleEditorService = h;
    var p = function () {
    }, f = function () {
        function e() {
        }

        return e.prototype.show = function (e, t) {
            switch (e) {
                case a.Severity.Error:
                    console.error(u.toErrorMessage(t, !0));
                    break;
                case a.Severity.Warning:
                    console.warn(t);
                    break;
                default:
                    console.log(t)
            }
            return p
        }, e
    }();
    t.SimpleMessageService = f
}), define("vs/platform/telemetry/telemetryService", ["require", "exports", "vs/base/strings", "vs/base/lib/winjs.base", "vs/base/performance/timer", "vs/base/errors", "vs/nls!vs/editor/editor.main"], function (e, t, n, i, o, r, s) {
    "use strict";
    var a = n, u = i, l = o, d = r, c = s, h = function () {
        function e(t) {
            "undefined" == typeof t && (t = !1), this.eventQueue = [], this.publicOnly = t, this.sessionID = a.generateUuid(8) + Date.now(), this.eventMaxQueueSize = e.EVENT_QUEUE_LIMIT, this.eventBatchSize = e.EVENT_BATCH_SIZE, this.failureCount = 0, this.sendingEvents = !1, this.waitIntervalId = null, this.timeKeeper = new l.TimeKeeper, this.toUnbind = [], this.toUnbind.push(this.timeKeeper.addListener("eventStop", this.onTelemetryTimerEventStop.bind(this))), this.toUnbind.push(d.errorHandler.addListener(this.onErrorEvent.bind(this)))
        }

        return e.prototype.dispose = function () {
            for (; this.toUnbind.length;)this.toUnbind.pop()();
            this.timeKeeper.dispose()
        }, e.prototype.onTelemetryTimerEventStop = function (e) {
            var t = e.data || {};
            t.duration = e.timeTaken(), "public" === e.topic ? this.publicLog(e.name, t) : this.log(e.name, t)
        }, e.prototype.onErrorEvent = function (e, t, n) {
            "undefined" == typeof t && (t = null), "undefined" == typeof n && (n = null), this.log("UnhandledError", {friendlyMessage: t, verboseMessage: n})
        }, e.prototype.injectRequestService = function (e) {
            this.requestService = e
        }, e.prototype.start = function (e, t, n) {
            var i = n ? "public" : "private", o = this.timeKeeper.start(i, e);
            return t && (o.data = t), o
        }, e.prototype.log = function (e, t) {
            this.publicOnly || this.handleEvent("restricted", e, t)
        }, e.prototype.publicLog = function (e, t) {
            this.handleEvent("public", e, t)
        }, e.prototype.handleEvent = function (e, t, n) {
            this.eventQueue.length >= this.eventMaxQueueSize || (n = n || {}, n.source = "client", this.eventQueue.push({name: t, kind: e, timestamp: new Date, data: JSON.stringify(n), sessionID: this.sessionID}), this.sendingEvents || this.failureCount > 0 || (this.eventQueue.length > this.eventBatchSize ? (clearTimeout(this.waitIntervalId), this.waitIntervalId = null, this.sendEvents()) : this.sendSoon()))
        }, e.prototype.sendSoon = function () {
            var t = this;
            null === this.waitIntervalId && (this.waitIntervalId = setTimeout(function () {
                t.waitIntervalId = null, t.sendEvents()
            }, e.EVENT_INTERVAL * Math.pow(2, this.failureCount)))
        }, e.prototype.sendEvents = function () {
            var e = this;
            this.sendingEvents = !0;
            var t = this.eventQueue.splice(0, this.eventBatchSize);
            0 !== t.length && this.submitToServer(t).then(function () {
                e.failureCount = 0
            },function () {
                e.eventQueue.unshift.apply(e.eventQueue, t), e.failureCount++
            }).done(function () {
                e.sendingEvents = !1, e.eventQueue.length > 0 && e.sendSoon()
            })
        }, e.prototype.submitToServer = function (e) {
            var t = JSON.stringify(e), n = this.requestService.getRequestUrl("telemetry"), i = {type: "POST", url: n, data: t, headers: {"Content-Type": "application/json"}};
            return this.requestService.makeRequest(i).then(function (e) {
                return e.status >= 200 && e.status < 300 ? u.Promise.wrapError(c.localize("vs_platform_telemetry_telemetryService", 0, e.status)) : void 0
            })
        }, e.EVENT_QUEUE_LIMIT = 1e4, e.EVENT_INTERVAL = 3e4, e.EVENT_BATCH_SIZE = 100, e
    }();
    t.TelemetryService = h;
    var p = function () {
        function e() {
        }

        return e.prototype.log = function () {
        }, e.prototype.publicLog = function () {
        }, e.prototype.start = function () {
            return l.nullEvent
        }, e
    }();
    t.NullTelemetryService = p, t.nullService = new p
}), define("vs/editor/core/model/trackedRanges", ["require", "exports", "vs/editor/core/range"], function (e, t, n) {
    "use strict";
    var i = n, o = function () {
        function e(e) {
            this.model = e, this.lastRangeId = 0, this.ranges = {}, this.markerIdToRangeId = {}, this.multiLineTrackedRanges = {}
        }

        return e.prototype.clear = function () {
            this.ranges = {}, this.markerIdToRangeId = {}, this.multiLineTrackedRanges = {}
        }, e.prototype._setRangeIsMultiLine = function (e, t) {
            var n = this.multiLineTrackedRanges.hasOwnProperty(e);
            !n && t ? this.multiLineTrackedRanges[e] = !0 : n && !t && delete this.multiLineTrackedRanges[e]
        }, e.prototype.add = function (e) {
            e = this.model.validateRange(e);
            var t = this.model._addMarker(e.startLineNumber - 1, e.startColumn, "start"), n = this.model._addMarker(e.endLineNumber - 1, e.endColumn, "end"), i = {id: (++this.lastRangeId).toString(), startMarkerId: t, endMarkerId: n};
            return this.ranges[i.id] = i, this.markerIdToRangeId[t] = i.id, this.markerIdToRangeId[n] = i.id, this._setRangeIsMultiLine(i.id, e.startLineNumber !== e.endLineNumber), i.id
        }, e.prototype.change = function (e, t) {
            if (this.ranges.hasOwnProperty(e)) {
                t = this.model.validateRange(t);
                var n = this.ranges[e];
                this.model._changeMarker(n.startMarkerId, t.startLineNumber - 1, t.startColumn), this.model._changeMarker(n.endMarkerId, t.endLineNumber - 1, t.endColumn), this._setRangeIsMultiLine(n.id, t.startLineNumber !== t.endLineNumber)
            }
        }, e.prototype.remove = function (e) {
            if (this.ranges.hasOwnProperty(e)) {
                var t = this.ranges[e];
                this.model._removeMarker(t.startMarkerId), this.model._removeMarker(t.endMarkerId), this._setRangeIsMultiLine(t.id, !1), delete this.ranges[t.id], delete this.markerIdToRangeId[t.startMarkerId], delete this.markerIdToRangeId[t.endMarkerId]
            }
        }, e.prototype.onChangedMarkers = function (e) {
            var t, n, i, o, r = {};
            for (var s in e)e.hasOwnProperty(s.toString()) && this.markerIdToRangeId.hasOwnProperty(s.toString()) && (o = e[s], i = this.markerIdToRangeId[s], n = this.ranges[i], r.hasOwnProperty(n.id) ? t = r[n.id] : (t = {startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0}, r[n.id] = t), o.id === n.startMarkerId ? (t.startLineNumber = o.oldLineIndex + 1, t.startColumn = o.oldColumn) : (t.endLineNumber = o.oldLineIndex + 1, t.endColumn = o.oldColumn), this._setRangeIsMultiLine(n.id, this.model._getMarkerLineNumber(n.startMarkerId) !== this.model._getMarkerLineNumber(n.endMarkerId)));
            return r
        }, e.prototype._getMultiLineTrackedRanges = function (e, t) {
            var n, i, o, r, s, a, u = {};
            for (n in this.multiLineTrackedRanges)if (this.multiLineTrackedRanges.hasOwnProperty(n)) {
                if (i = this.ranges[n], o = this.model._getMarkerLineNumber(i.startMarkerId), o > t)continue;
                if (s = this.model._getMarkerLineNumber(i.endMarkerId), e > s)continue;
                r = this.model._getMarkerColumn(o, i.startMarkerId), a = this.model._getMarkerColumn(s, i.endMarkerId), u[i.id] = {startLineNumber: o, startColumn: r, endLineNumber: s, endColumn: a}
            }
            return u
        }, e.prototype.getLinesTrackedRanges = function (e, t) {
            var n, i, o, r, s, a, u = this._getMultiLineTrackedRanges(e, t);
            for (a = e; t >= a; a++)for (n = this.model._getLineMarkers(a), r = 0, s = n.length; s > r; r++)i = n[r], this.markerIdToRangeId.hasOwnProperty(i.id) && (o = this.markerIdToRangeId[i.id], this.ranges[o].startMarkerId === i.id ? u.hasOwnProperty(o) ? u[o].startColumn = i.column : u[o] = {startLineNumber: a, startColumn: i.column, endLineNumber: a, endColumn: -1} : u.hasOwnProperty(o) ? u[o].endColumn = i.column : u[o] = {startLineNumber: a, startColumn: -1, endLineNumber: a, endColumn: i.column});
            return u
        }, e.prototype.getStartLineNumber = function (e) {
            return this.model._getMarkerLineNumber(this.ranges[e].startMarkerId)
        }, e.prototype.getEndLineNumber = function (e) {
            return this.model._getMarkerLineNumber(this.ranges[e].endMarkerId)
        }, e.prototype.getRange = function (e) {
            var t = this.ranges[e], n = this.model._getMarker(t.startMarkerId), o = this.model._getMarker(t.endMarkerId);
            return new i.Range(n.lineNumber, n.column, o.lineNumber, o.column)
        }, e
    }();
    t.TrackedRanges = o
}), define("vs/editor/core/model/modelDecorations", ["require", "exports"], function (e, t) {
    "use strict";
    var n = function () {
        function e(e, t) {
            this.model = e, this.trackedRanges = t, this.lastDecorationId = 0, this.decorations = {}, this.rangeIdToDecorationId = {}
        }

        return e.prototype.clear = function () {
            this.decorations = {}, this.rangeIdToDecorationId = {}
        }, e.prototype.change = function (e, t, n) {
            var i = this, o = {addDecoration: function (n, o) {
                return i._add(e, t, n, o)
            }, changeDecoration: function (t, n) {
                i._change(e, t, n)
            }, changeDecorationOptions: function (t, n) {
                i._changeOptions(e, t, n)
            }, removeDecoration: function (t) {
                i._remove(e, t)
            }, deltaDecorations: function (n, o) {
                return i._delta(e, t, n, o)
            }}, r = n(o);
            return o.addDecoration = null, o.changeDecoration = null, o.removeDecoration = null, o.deltaDecorations = null, r
        }, e.prototype.getAll = function (e) {
            var t, n, i = [];
            for (t in this.decorations)if (this.decorations.hasOwnProperty(t)) {
                if (n = this.decorations[t], e && n.ownerId && n.ownerId !== e)continue;
                i.push({id: n.id, ownerId: n.ownerId, range: this.trackedRanges.getRange(n.rangeId), options: n.options})
            }
            return i
        }, e.prototype.getLineDecorations = function (e, t) {
            return this.getLinesDecorations(e, e, t)
        }, e.prototype.getLinesDecorations = function (e, t, n) {
            var i, o, r = [], s = this.trackedRanges.getLinesTrackedRanges(e, t);
            for (o in s)if (s.hasOwnProperty(o) && this.rangeIdToDecorationId.hasOwnProperty(o)) {
                if (i = this.decorations[this.rangeIdToDecorationId[o]], n && i.ownerId && i.ownerId !== n)continue;
                r.push({id: i.id, ownerId: i.ownerId, range: s[o], options: i.options})
            }
            return r
        }, e.prototype.getOptions = function (e) {
            return this.decorations.hasOwnProperty(e) ? this.decorations[e].options : null
        }, e.prototype.getRange = function (e) {
            if (this.decorations.hasOwnProperty(e)) {
                var t = this.decorations[e];
                return this.trackedRanges.getRange(t.rangeId)
            }
            return null
        }, e.prototype.removeAllDecorationsWithOwnerId = function (e) {
            var t, n, i = [];
            for (t in this.decorations)this.decorations.hasOwnProperty(t) && (n = this.decorations[t], n.ownerId === e && i.push(n.id));
            for (var o = 0; o < i.length; o++)this._remove(null, i[o])
        }, e.cleanClassName = function (e) {
            return e.replace(/[^a-z0-9\-]/gi, " ")
        }, e.prototype._normalizeOptions = function (t) {
            return{className: e.cleanClassName(t.className || ""), hoverMessage: t.hoverMessage || "", htmlMessage: t.htmlMessage || [], isWholeLine: t.isWholeLine || !1, showInOverviewRuler: t.showInOverviewRuler || "", glyphMarginClassName: e.cleanClassName(t.glyphMarginClassName || ""), linesDecorationsClassName: e.cleanClassName(t.linesDecorationsClassName || ""), inlineClassName: e.cleanClassName(t.inlineClassName || "")}
        }, e.prototype._add = function (e, t, n, i) {
            var o = this.trackedRanges.add(n);
            i = this._normalizeOptions(i);
            var r = {ownerId: t, id: (++this.lastDecorationId).toString(), rangeId: o, options: i};
            return this.decorations[r.id] = r, this.rangeIdToDecorationId[o] = r.id, e.addNewDecoration(r.id), r.id
        }, e.prototype._change = function (e, t, n) {
            if (this.decorations.hasOwnProperty(t)) {
                var i = this.decorations[t], o = this.trackedRanges.getRange(i.rangeId);
                this.trackedRanges.change(i.rangeId, n), e.addMovedDecoration(t, o)
            }
        }, e.prototype._changeOptions = function (e, t, n) {
            if (n = this._normalizeOptions(n), this.decorations.hasOwnProperty(t)) {
                var i = this.decorations[t], o = i.options;
                i.options = n, e.addUpdatedDecoration(t, o)
            }
        }, e.prototype._remove = function (e, t) {
            if (this.decorations.hasOwnProperty(t)) {
                var n = this.decorations[t], i = null;
                e && (i = this.trackedRanges.getRange(n.rangeId)), this.trackedRanges.remove(n.rangeId), delete this.rangeIdToDecorationId[n.rangeId], delete this.decorations[t], e && e.addRemovedDecoration(t, n.ownerId, i, n.options)
            }
        }, e.prototype._hashHTMLContent = function (e) {
            var t = this, n = [e.tagName, e.text, e.className];
            return e.children && e.children.forEach(function (e, i) {
                n.push("child" + i + "-" + t._hashHTMLContent(e))
            }), n.join("-")
        }, e.prototype._decorationHash = function (e, t) {
            var n = this, i = [e.startLineNumber.toString(), e.startColumn.toString(), e.endLineNumber.toString(), e.endColumn.toString(), t.className, t.hoverMessage, t.htmlMessage.reduce(function (e, t) {
                return e + n._hashHTMLContent(t)
            }, ""), t.isWholeLine + "", t.showInOverviewRuler, t.glyphMarginClassName, t.linesDecorationsClassName, t.inlineClassName];
            return i.join("-")
        }, e.prototype._delta = function (e, t, n, i) {
            var o, r, s = [], a = [];
            for (o = 0, r = i.length; r > o; o++)s[o] = this._normalizeOptions(i[o].options), a[o] = this.model.validateRange(i[o].range);
            return this._deltaImpl(e, t, n, r, a, s)
        }, e.prototype._deltaImpl = function (e, t, n, i, o, r) {
            var s, a, u, l, d = {};
            for (s = 0, a = n.length; a > s; s++)this.decorations.hasOwnProperty(n[s]) && (l = this.decorations[n[s]], u = this._decorationHash(this.trackedRanges.getRange(l.rangeId), l.options), d[u] = d[u] || [], d[u].push(n[s]));
            var c, h, p, f, g = [], m = {};
            for (s = 0; i > s; s++) {
                if (u = this._decorationHash(o[s], r[s]), f = !1, d.hasOwnProperty(u))for (p = d[u], c = 0, h = p.length; h > c; c++)if (!m.hasOwnProperty(p[c])) {
                    f = !0, m[p[c]] = !0, g.push(p[c]);
                    break
                }
                f || g.push(this._add(e, t, o[s], r[s]))
            }
            for (s = 0, a = n.length; a > s; s++)m.hasOwnProperty(n[s]) || this._remove(e, n[s]);
            return g
        }, e.prototype.onChangedRanges = function (e, t) {
            var n, i;
            for (n in t)t.hasOwnProperty(n) && this.rangeIdToDecorationId.hasOwnProperty(n) && (i = this.rangeIdToDecorationId[n], e.addMovedDecoration(i, t[n]))
        }, e.prototype.getDecorationData = function (e) {
            var t = this.decorations[e];
            return{id: t.id, ownerId: t.ownerId, range: this.trackedRanges.getRange(t.rangeId), isForValidation: !1, options: t.options}
        }, e
    }();
    t.ModelDecorations = n
}), define("vs/editor/core/model/tokenIterator", ["require", "exports"], function (e, t) {
    "use strict";
    var n = function () {
        function e(e, t) {
            this._model = e, this._currentLineNumber = t.lineNumber, this._currentTokenIndex = 0, this._currentLineTokens = this._model.getInternalTokens(this._currentLineNumber), this._next = null, this._prev = null;
            for (var n = t.column - 1, i = Number.MAX_VALUE, o = this._currentLineTokens.length - 1; o >= 0; o--) {
                if (this._currentLineTokens[o].startIndex <= n && i >= n) {
                    this._currentTokenIndex = o, this._next = this._current(), this._prev = this._current();
                    break
                }
                i = this._currentLineTokens[o].startIndex
            }
        }

        return e.prototype._advanceNext = function () {
            if (this._prev = this._next, this._next = null, this._currentTokenIndex + 1 < this._currentLineTokens.length)this._currentTokenIndex++, this._next = this._current(); else {
                for (; this._currentLineNumber + 1 <= this._model.getLineCount();)if (this._currentLineNumber++, this._currentLineTokens = this._model.getInternalTokens(this._currentLineNumber), this._currentLineTokens.length > 0) {
                    this._currentTokenIndex = 0, this._next = this._current();
                    break
                }
                null === this._next && (this._currentLineTokens = this._model.getInternalTokens(this._currentLineNumber), this._currentTokenIndex = this._currentLineTokens.length, this._advancePrev(), this._next = null)
            }
        }, e.prototype._advancePrev = function () {
            if (this._next = this._prev, this._prev = null, this._currentTokenIndex > 0)this._currentTokenIndex--, this._prev = this._current(); else for (; this._currentLineNumber > 1;)if (this._currentLineNumber--, this._currentLineTokens = this._model.getInternalTokens(this._currentLineNumber), this._currentLineTokens.length > 0) {
                this._currentTokenIndex = this._currentLineTokens.length - 1, this._prev = this._current();
                break
            }
        }, e.prototype._current = function () {
            return{token: this._currentLineTokens[this._currentTokenIndex], lineNumber: this._currentLineNumber, startColumn: this._currentLineTokens[this._currentTokenIndex].startIndex + 1, endColumn: this._currentTokenIndex + 1 < this._currentLineTokens.length ? this._currentLineTokens[this._currentTokenIndex + 1].startIndex + 1 : this._model.getLineContent(this._currentLineNumber).length + 1}
        }, e.prototype.hasNext = function () {
            return null !== this._next
        }, e.prototype.next = function () {
            var e = this._next;
            return this._advanceNext(), e
        }, e.prototype.hasPrev = function () {
            return null !== this._prev
        }, e.prototype.prev = function () {
            var e = this._prev;
            return this._advancePrev(), e
        }, e.prototype._invalidate = function () {
            var e = function () {
                throw new Error("iteration isn't valid anymore")
            };
            this.hasNext = e, this.next = e, this.hasPrev = e, this.prev = e
        }, e
    }();
    t.TokenIterator = n
}), define("vs/editor/core/model/modelEditOperation", ["require", "exports", "vs/editor/core/range"], function (e, t, n) {
    "use strict";
    var i = n, o = function () {
        function e() {
        }

        return e.execute = function (t, n) {
            var i = t.change(function (i) {
                return e._apply(t, i, n.operations)
            });
            return{operations: i}
        }, e._apply = function (t, n, i) {
            i.sort(e._compareOperations);
            for (var o = 1; o < i.length; o++)if (i[o - 1].range.getStartPosition().isBeforeOrEqual(i[o].range.getEndPosition()))throw new Error("Overlapping ranges are not allowed!");
            var r = t.getEditableRange(), s = r.getStartPosition(), a = r.getEndPosition();
            for (o = 0; o < i.length; o++) {
                var u = i[o].range;
                if (!s.isBeforeOrEqual(u.getStartPosition()) || !u.getEndPosition().isBeforeOrEqual(a))throw new Error("Editing outside of editable range not allowed!")
            }
            var l = e._applyWithMarkers(t, n, i), d = e._squashMarkers(t, l);
            for (d.sort(e._compareOperations), o = 1; o < d.length; o++)if (d[o - 1].range.getStartPosition().isBeforeOrEqual(d[o].range.getEndPosition()))throw new Error("Inverse edit operations: Overlapping ranges are not allowed!");
            return d
        }, e._squashMarkers = function (e, t) {
            var n, o, r, s, a, u, l, d, c = [];
            for (n = 0, o = t.length; o > n; n++)d = t[n].identifier, a = t[n].text, r = t[n].selectionStartMarkerId, s = t[n].positionMarkerId, u = e._getMarker(r), l = e._getMarker(s), c.push({identifier: d, range: new i.Range(u.lineNumber, u.column, l.lineNumber, l.column), text: a}), e._removeMarker(r), e._removeMarker(s);
            return c
        }, e._applyWithMarkers = function (e, t, n) {
            var i, o, r, s, a, u, l, d, c, h, p = [];
            for (i = 0, o = n.length; o > i; i++)h = n[i].identifier, s = n[i].range, r = n[i].text, s.isEmpty() && !r ? (c = {startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1}, d = "") : (s.isEmpty() ? (d = "", a = {lineNumber: s.startLineNumber, column: s.startColumn}) : (l = t.deleteText(s), d = l.deletedText, a = l.position), r ? (u = t.insertText(a, r), c = {startLineNumber: a.lineNumber, startColumn: a.column, endLineNumber: u.lineNumber, endColumn: u.column}) : c = {startLineNumber: a.lineNumber, startColumn: a.column, endLineNumber: a.lineNumber, endColumn: a.column}), p.push({identifier: h, text: d, selectionStartMarkerId: e._addMarker(c.startLineNumber - 1, c.startColumn, "start"), positionMarkerId: e._addMarker(c.endLineNumber - 1, c.endColumn, "end")});
            return p
        }, e._compareOperations = function (e, t) {
            return-i.RangeUtils.compareRangesUsingEnds(e.range, t.range)
        }, e
    }();
    t.ModelEditOperation = o
}), define("vs/editor/core/model/editStack", ["require", "exports", "vs/editor/core/model/modelEditOperation"], function (e, t, n) {
    "use strict";
    var i = n, o = function () {
        function e(e) {
            this.model = e, this.currentOpenStackElement = null, this.past = [], this.future = []
        }

        return e.prototype.pushStackElement = function () {
            null !== this.currentOpenStackElement && (this.past.push(this.currentOpenStackElement), this.currentOpenStackElement = null)
        }, e.prototype.clear = function () {
            this.currentOpenStackElement = null, this.past = [], this.future = []
        }, e.prototype.pushEditOperation = function (e, t, n) {
            this.future = [], this.currentOpenStackElement || (this.currentOpenStackElement = {beforeCursorState: e, editOperations: [], afterCursorState: null});
            var o = i.ModelEditOperation.execute(this.model, {operations: t});
            return this.currentOpenStackElement.editOperations.push(o), this.currentOpenStackElement.afterCursorState = n ? n(o.operations) : null, this.currentOpenStackElement.afterCursorState
        }, e.prototype.undo = function () {
            if (this.pushStackElement(), this.past.length > 0) {
                for (var e = this.past.pop(), t = e.editOperations.length - 1; t >= 0; t--)e.editOperations[t] = i.ModelEditOperation.execute(this.model, e.editOperations[t]);
                return this.future.push(e), e.beforeCursorState
            }
            return null
        }, e.prototype.redo = function () {
            if (this.future.length > 0) {
                if (this.currentOpenStackElement)throw new Error("How is this possible?");
                for (var e = this.future.pop(), t = 0; t < e.editOperations.length; t++)e.editOperations[t] = i.ModelEditOperation.execute(this.model, e.editOperations[t]);
                return this.past.push(e), e.afterCursorState
            }
            return null
        }, e
    }();
    t.EditStack = o
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/model/model", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/editor/core/config", "vs/editor/modes/modes", "vs/base/strings", "vs/base/objects", "vs/base/network", "vs/editor/core/constants", "vs/base/eventEmitter", "vs/editor/core/position", "vs/editor/core/range", "./trackedRanges", "./modelDecorations", "./tokenIterator", "vs/platform/markers/markers", "vs/editor/modes/nullMode", "vs/editor/core/model/editStack", "vs/editor/editor", "vs/base/errors", "vs/base/arrays"], function (e, t, n, i, o, r, s, a, u, l, d, c, h, p, f, g, m, v, y, b, C) {
    "use strict";
    var E = n, w = i, _ = o, S = r, T = s, L = a, N = u, x = l, M = d, I = c, R = h, D = p, P = f, O = g, k = m, A = v, H = y, W = b, V = C, F = 0, U = 1e3, B = 65279, z = "\r".charCodeAt(0), q = "\n".charCodeAt(0), j = function () {
        function e(e, t) {
            "undefined" == typeof t && (t = []), this.text = e, this.state = null, this.tokens = null, this.lineTokens = null, this.modeTransitions = null, this.isInvalid = !1, this.markers = t
        }

        return e.prototype.getTokens = function () {
            return this.tokens
        }, e.prototype.setTokens = function (e) {
            this.tokens = e, this.lineTokens = new G(this.tokens, this.text.length)
        }, e.prototype.getLineTokens = function () {
            return(!this.lineTokens || this.isInvalid) && (this.lineTokens = new G([
                {startIndex: 0, type: "", bracket: _.Bracket.None}
            ], this.text.length)), this.lineTokens
        }, e
    }(), G = function () {
        function e(e, t) {
            this.tokens = e, this.textLength = t
        }

        return e.prototype.getTokens = function () {
            return this.tokens
        }, e.prototype.getTextLength = function () {
            return this.textLength
        }, e.prototype.equals = function (e) {
            return this === e
        }, e.prototype.findIndexOfOffset = function (e) {
            return V.findIndexInSegmentsArray(this.tokens, e)
        }, e
    }(), K = function () {
        function e() {
            this.oldDecorationRange = {}, this.oldDecorationOptions = {}, this.newOrChangedDecorations = {}, this.removedDecorations = {}
        }

        return e.prototype.addNewDecoration = function (e) {
            this.newOrChangedDecorations[e] = !0
        }, e.prototype.addRemovedDecoration = function (e, t, n, i) {
            this.newOrChangedDecorations.hasOwnProperty(e) && delete this.newOrChangedDecorations[e], this.oldDecorationRange.hasOwnProperty(e) || (this.oldDecorationRange[e] = n), this.oldDecorationOptions.hasOwnProperty(e) || (this.oldDecorationOptions[e] = i), this.removedDecorations[e] = !0
        }, e.prototype.addMovedDecoration = function (e, t) {
            this.oldDecorationRange.hasOwnProperty(e) || (this.oldDecorationRange[e] = t), this.newOrChangedDecorations[e] = !0
        }, e.prototype.addUpdatedDecoration = function (e, t) {
            this.oldDecorationOptions.hasOwnProperty(e) || (this.oldDecorationOptions[e] = t), this.newOrChangedDecorations[e] = !0
        }, e
    }(), Z = function (e) {
        function t(n, i, o, r) {
            "undefined" == typeof o && (o = null), "undefined" == typeof r && (r = null), e.call(this), this.stopLineTokenizationAfter = w.Config.editor.stopLineTokenizationAfter, this.markerService = r, F++, this.id = "$model" + F, this._versionId = 1, ("undefined" == typeof o || null === o) && (o = new L.URL("inMemory://localhost/vs/editor/core/model/" + F)), this.associatedResource = o, this.markerDecorationIds = {}, this.commandManager = new A.EditStack(this), this.lines = this._constructLines(n), this.linesLength = this.lines.length, this.mode = i ? i : new k.NullMode, this.isUndoing = !1, this.isRedoing = !1;
            var s = null;
            if (this.mode.tokenizationSupport)try {
                s = this.mode.tokenizationSupport.getInitialState()
            } catch (a) {
                W.onUnexpectedError(a, t.MODE_TOKENIZATION_FAILED_MSG), this.mode = new k.NullMode
            }
            s || (s = new k.NullState(this.mode, null)), this.lines[0].state = s, this.lastState = null, this.revalidateTokensTimeout = -1, this.modeTokenizationFailedTimeout = -1, this.invalidLineStartIndex = 0, this.trackedRanges = new R.TrackedRanges(this), this.modelDecorations = new D.ModelDecorations(this, this.trackedRanges), this.lastMarkerId = 0, this.markerIdToLineIndex = {}, this._hasEditableRange = !1, this._editableRangeId = null, this.workerBind(), this._beginBackgroundTokenization(), this.extraProperties = {}, this.addWordRegExpProperty(), this._executeWithDeferredEventsCnt = 0, this._currentDeferredEventBuilder = null
        }

        return __extends(t, e), t.prototype.destroy = function () {
            this.emit(N.EventType.ModelDispose), this.workerUnbind(), -1 !== this.revalidateTokensTimeout && window.clearTimeout(this.revalidateTokensTimeout), -1 !== this.modeTokenizationFailedTimeout && window.clearTimeout(this.modeTokenizationFailedTimeout), this.lines = null, this.trackedRanges = null, this.modelDecorations = null, this.commandManager = null, e.prototype.dispose.call(this)
        }, t.prototype.setStopLineTokenizationAfter = function (e) {
            this.stopLineTokenizationAfter = e
        }, t.prototype.setEditableRange = function (e) {
            this.commandManager.clear(), this._hasEditableRange && (this.removeTrackedRange(this._editableRangeId), this._editableRangeId = null, this._hasEditableRange = !1), e && (this._hasEditableRange = !0, this._editableRangeId = this.addTrackedRange(e))
        }, t.prototype.hasEditableRange = function () {
            return this._hasEditableRange
        }, t.prototype.getFullModelRange = function () {
            var e = this.getLineCount();
            return new I.Range(1, 1, e, this.getLineMaxColumn(e))
        }, t.prototype.getEditableRange = function () {
            return this._hasEditableRange ? this.getTrackedRange(this._editableRangeId) : this.getFullModelRange()
        }, t.prototype.workerBind = function () {
            this.mode.bindModel(this)
        }, t.prototype.workerUnbind = function () {
            this.mode.unbindModel(this)
        }, t.prototype.getVersionId = function () {
            return this._versionId
        }, t.prototype.getAssociatedResource = function () {
            return this.associatedResource
        }, t.prototype.setModeOrValue = function (e, n, i, o) {
            if (n || o) {
                n && (this.lines = this._constructLines(e), this.linesLength = this.lines.length), o && (this.workerUnbind(), this.mode = i), n && (this.commandManager = new A.EditStack(this));
                var r = null;
                if (this.mode.tokenizationSupport)try {
                    r = this.mode.tokenizationSupport.getInitialState()
                } catch (s) {
                    W.onUnexpectedError(s, t.MODE_TOKENIZATION_FAILED_MSG), o || this.workerUnbind(), this.mode = new k.NullMode, o = !0
                }
                r || (r = new k.NullState(this.mode, null)), this.lines[0].state = r, this.lastState = null, -1 !== this.revalidateTokensTimeout && (window.clearTimeout(this.revalidateTokensTimeout), this.revalidateTokensTimeout = -1), -1 !== this.modeTokenizationFailedTimeout && (window.clearTimeout(this.modeTokenizationFailedTimeout), this.modeTokenizationFailedTimeout = -1), this.invalidLineStartIndex = 0, this.modelDecorations.clear(), this.trackedRanges.clear(), this.markerIdToLineIndex = {}, this._hasEditableRange = !1, this._editableRangeId = null, n && this._versionId++, this.emitModelContentChangedFlushEvent(o), o && this.workerBind(), this._beginBackgroundTokenization()
            }
        }, t.prototype.setMode = function (e) {
            this.setModeOrValue(null, !1, e, e && e !== this.mode)
        }, t.prototype.setValue = function (e, t) {
            "undefined" == typeof t && (t = null), this.setModeOrValue(e, !0, t, t && t !== this.mode)
        }, t.prototype.isDominatedByLongLines = function (e) {
            var t, n, i, o = 0, r = 0, s = this.lines;
            for (t = 0, n = this.linesLength; n > t; t++)i = s[t].text.length, i >= e ? r += i : o += i;
            return r > o
        }, t.prototype.addWordRegExpProperty = function () {
            var e = this.massageWordDefinitionOf(this.mode);
            this.setProperty("$WordDefinitionForMirrorModel", {source: e.source, flags: (e.global ? "g" : "") + (e.ignoreCase ? "i" : "") + (e.multiline ? "m" : "")})
        }, t.prototype.getEndOfLine = function (e) {
            switch (e) {
                case H.EndOfLinePreference.LF:
                    return"\n";
                case H.EndOfLinePreference.CRLF:
                    return"\r\n";
                case H.EndOfLinePreference.TextDefined:
                    return this.getEOL()
            }
            throw new Error("Unknown EOL preference")
        }, t.prototype.getValue = function (e, t) {
            "undefined" == typeof t && (t = !1);
            var n = {startLineNumber: 1, startColumn: 1, endLineNumber: this.linesLength, endColumn: this.getLineMaxColumn(this.linesLength)};
            return t ? this.BOM + this.getValueInRange(n, e) : this.getValueInRange(n, e)
        }, t.prototype.getValueInRange = function (e, t) {
            "undefined" == typeof t && (t = H.EndOfLinePreference.TextDefined);
            var n = this.validateRange(e);
            if (n.isEmpty())return"";
            if (n.startLineNumber === n.endLineNumber)return this.lines[n.startLineNumber - 1].text.substring(n.startColumn - 1, n.endColumn - 1);
            var i, o, r = this.getEndOfLine(t), s = n.startLineNumber - 1, a = n.endLineNumber - 1, u = this.lines[s], l = this.lines[a], d = [];
            i = u.text.substring(n.startColumn - 1, u.text.length);
            for (var c = s + 1; a > c; c++)o = this.lines[c], d.push(i), i = o.text;
            return d.push(i), d.push(l.text.substring(0, n.endColumn - 1)), d.join(r)
        }, t.prototype.setProperty = function (e, t) {
            this.extraProperties[e] = t, this.emitModelPropertiesChangedEvent()
        }, t.prototype.getProperty = function (e) {
            return this.extraProperties.hasOwnProperty(e) ? this.extraProperties[e] : null
        }, t.prototype.getProperties = function () {
            return T.clone(this.extraProperties)
        }, t.prototype.getMode = function () {
            return this.mode
        }, t.prototype.getLineCount = function () {
            return this.linesLength
        }, t.prototype.getLineContent = function (e) {
            return this.lines[e - 1].text
        }, t.prototype.getEOL = function () {
            return this.EOL
        }, t.prototype.getLineMaxColumn = function (e) {
            return this.lines[e - 1].text.length + 1
        }, t.prototype.getLineFirstNonWhitespaceColumn = function (e) {
            var t = S.firstNonWhitespaceIndex(this.lines[e - 1].text);
            return-1 === t ? 0 : t + 1
        }, t.prototype.getLineLastNonWhitespaceColumn = function (e) {
            var t = S.lastNonWhitespaceIndex(this.lines[e - 1].text);
            return-1 === t ? 0 : t + 2
        }, t.prototype.lineIsTokenized = function (e) {
            return this.invalidLineStartIndex > e - 1
        }, t.prototype.getLineTokens = function (e, t) {
            return"undefined" == typeof t && (t = !1), t || this._updateTokensUntilLine(e, !0), this.lines[e - 1].getLineTokens()
        }, t.prototype.getInternalTokens = function (e) {
            return this._updateTokensUntilLine(e, !0), this.lines[e - 1].getTokens().slice(0)
        }, t.prototype.getRawLineTokens = function (e) {
            return this._updateTokensUntilLine(e, !0), {tokens: this.lines[e - 1].getTokens().slice(0), modeTransitions: this.lines[e - 1].modeTransitions.slice(0), endState: e < this.linesLength ? this.lines[e - 1].state : this.lastState, actualStopOffset: 0}
        }, t.prototype.getLineModeTransitions = function (e) {
            return this._updateTokensUntilLine(e, !0), this.lines[e - 1].modeTransitions
        }, t.prototype.getStateBeforeLine = function (e) {
            return this._updateTokensUntilLine(e - 1, !0), this.lines[e - 1].state
        }, t.prototype.getStateAfterLine = function (e) {
            return this._updateTokensUntilLine(e, !0), e < this.linesLength ? this.lines[e - 1].state : this.lastState
        }, t.prototype.getModeAtPosition = function (e, t) {
            if (1 === t)return this.getStateBeforeLine(e).getMode();
            if (t === this.getLineMaxColumn(e))return this.getStateAfterLine(e).getMode();
            var n = this.getLineModeTransitions(e), i = V.findIndexInSegmentsArray(n, t - 1);
            return n[i].mode
        }, t.prototype.pushStackElement = function () {
            this.commandManager.pushStackElement()
        }, t.prototype.pushEditOperations = function (e, t, n) {
            return this.commandManager.pushEditOperation(e, t, n)
        }, t.prototype.undo = function () {
            this.isUndoing = !0;
            var e = this.commandManager.undo();
            return this.isUndoing = !1, e
        }, t.prototype.redo = function () {
            this.isRedoing = !0;
            var e = this.commandManager.redo();
            return this.isRedoing = !1, e
        }, t.prototype._emitEventsFromEventBuilder = function (e) {
            var t, n, i, o = [], r = [], s = [];
            for (t in e.newOrChangedDecorations)e.newOrChangedDecorations.hasOwnProperty(t) && (s.push(t), n = this.modelDecorations.getDecorationData(t), n.isForValidation = n.options.className === N.ClassName.EditorErrorDecoration || n.options.className === N.ClassName.EditorWarningDecoration, o.push(n), e.oldDecorationRange.hasOwnProperty(t) && (i = e.oldDecorationRange[t], i.startLineNumber = i.startLineNumber || n.range.startLineNumber, i.startColumn = i.startColumn || n.range.startColumn, i.endLineNumber = i.endLineNumber || n.range.endLineNumber, i.endColumn = i.endColumn || n.range.endColumn));
            for (t in e.removedDecorations)e.removedDecorations.hasOwnProperty(t) && (s.push(t), r.push(t));
            if (s.length > 0) {
                var a = {ids: s, addedOrChangedDecorations: o, removedDecorations: r, oldOptions: e.oldDecorationOptions, oldRanges: e.oldDecorationRange};
                this.emitModelDecorationsChangedEvent(a)
            }
        }, t.prototype._executeWithDeferredEvents = function (e) {
            var t = this;
            return this.deferredEmit(function () {
                0 === t._executeWithDeferredEventsCnt && (t._currentDeferredEventBuilder = new K), t._executeWithDeferredEventsCnt = t._executeWithDeferredEventsCnt + 1;
                var n = e(t._currentDeferredEventBuilder);
                return t._executeWithDeferredEventsCnt = t._executeWithDeferredEventsCnt - 1, 0 === t._executeWithDeferredEventsCnt && (t._emitEventsFromEventBuilder(t._currentDeferredEventBuilder), t._currentDeferredEventBuilder = null), n
            })
        }, t.prototype.change = function (e) {
            var t = this;
            return this._executeWithDeferredEvents(function (n) {
                var i = {}, o = {insertText: function (e, n, o) {
                    return"undefined" == typeof o && (o = !1), t._insertText(i, e, n, o)
                }, deleteText: function (e) {
                    return t._deleteText(i, e)
                }}, r = e(o);
                o.insertText = null, o.deleteText = null;
                var s = t.trackedRanges.onChangedMarkers(i);
                return t.modelDecorations.onChangedRanges(n, s), r
            })
        }, t.prototype.addTrackedRange = function (e) {
            return this.trackedRanges.add(e)
        }, t.prototype.changeTrackedRange = function (e, t) {
            this.trackedRanges.change(e, t)
        }, t.prototype.removeTrackedRange = function (e) {
            this.trackedRanges.remove(e)
        }, t.prototype.getTrackedRange = function (e) {
            return this.trackedRanges.getRange(e)
        }, t.prototype.changeDecorations = function (e, t) {
            "undefined" == typeof t && (t = 0);
            var n = this;
            return this._executeWithDeferredEvents(function (i) {
                return n.modelDecorations.change(i, t, e)
            })
        }, t.prototype.deltaDecorations = function (e, t, n) {
            "undefined" == typeof n && (n = 0);
            var i = this;
            return this._executeWithDeferredEvents(function (o) {
                return i.modelDecorations.change(o, n, function (n) {
                    return n.deltaDecorations(e, t)
                })
            })
        }, t.prototype.removeAllDecorationsWithOwnerId = function (e) {
            this.modelDecorations.removeAllDecorationsWithOwnerId(e)
        }, t.prototype.getDecorationOptions = function (e) {
            return this.modelDecorations.getOptions(e)
        }, t.prototype.getDecorationRange = function (e) {
            return this.modelDecorations.getRange(e)
        }, t.prototype.getLineDecorations = function (e, t, n) {
            return"undefined" == typeof t && (t = 0), "undefined" == typeof n && (n = !1), this.getLinesDecorations(e, e, t, n)
        }, t.prototype.getLinesDecorations = function (e, t, n, i) {
            "undefined" == typeof n && (n = 0), "undefined" == typeof i && (i = !1);
            var o = this.modelDecorations.getLinesDecorations(e, t, n);
            return i ? this._filterOutValidationDecorations(o) : o
        }, t.prototype.getDecorationsInRange = function (e, t, n) {
            this.validateRange(e);
            var i = this.modelDecorations.getLinesDecorations(e.startLineNumber, e.endLineNumber, t);
            return n ? this._filterOutValidationDecorations(i) : i
        }, t.prototype._filterOutValidationDecorations = function (e) {
            var t, n, i, o = [];
            for (t = 0, n = e.length; n > t; t++)i = e[t].options.className, i !== N.ClassName.EditorErrorDecoration && i !== N.ClassName.EditorWarningDecoration && o.push(e[t]);
            return o
        }, t.prototype.getAllDecorations = function (e, t) {
            "undefined" == typeof e && (e = 0), "undefined" == typeof t && (t = !1);
            var n = this.modelDecorations.getAll(e);
            return t ? this._filterOutValidationDecorations(n) : n
        }, t.prototype._constructLines = function (e) {
            var n = t.splitText(e);
            return this.BOM = n.BOM, this.EOL = n.EOL, n.lines
        }, t.splitText = function (e) {
            var t = 0, n = "";
            e.length > 0 && e.charCodeAt(0) === B && (n = e.charAt(0), t = 1);
            var i, o, r, s, a = -1, u = 0, l = 0, d = [];
            for (l = t, i = t, r = e.length; r > i; i++)o = e.charCodeAt(i), o === q && (a === z ? (u++, s = e.substring(l, i - 1)) : s = e.substring(l, i), l = i + 1, d.push(new j(s))), a = o;
            d.push(new j(e.substring(l)));
            var c = d.length - 1, h = "";
            return h = 0 === c || u > c / 2 ? "\r\n" : "\n", {BOM: n, EOL: h, lines: d}
        }, t.prototype.massageWordDefinitionOf = function (e) {
            var t = k.NullMode.DEFAULT_WORD_REGEXP;
            if (e.tokenTypeClassificationSupport) {
                try {
                    t = e.tokenTypeClassificationSupport.getWordDefinition()
                } catch (n) {
                    W.onUnexpectedError(n)
                }
                if (t instanceof RegExp) {
                    if (!t.global) {
                        var i = "g";
                        t.ignoreCase && (i += "i"), t.multiline && (i += "m"), t = new RegExp(t.source, i)
                    }
                } else t = k.NullMode.DEFAULT_WORD_REGEXP
            }
            return t.lastIndex = 0, t
        }, t.prototype.getSyntaxTokensHashMap = function () {
            var e = {}, t = [];
            try {
                t = this.mode.tokenTypeClassificationSupport.getNonWordTokenTypes()
            } catch (n) {
                W.onUnexpectedError(n)
            }
            for (var i = 0, o = t.length; o > i; i++)e[t[i]] = !0;
            return e
        }, t.prototype._iterateWords = function (e, t, n) {
            var i = this.getLineContent(e);
            this.getStateBeforeLine(e);
            var o, r, s, a, u, l = this.getInternalTokens(e), d = this.getLineModeTransitions(e), c = {};
            if (t && this.mode.tokenTypeClassificationSupport && (c = this.getSyntaxTokensHashMap()), 0 !== i.length) {
                var h = 0, p = h + 1 < d.length ? d[h + 1].startIndex : i.length, f = this.massageWordDefinitionOf(d[h].mode);
                for (o = 0, r = 0, s = l.length; s > o; o++) {
                    if (u = o === s - 1 ? i.length : l[o + 1].startIndex, r >= p && (h++, p = h + 1 < d.length ? d[h + 1].startIndex : i.length, f = this.massageWordDefinitionOf(d[h].mode)), !t || !c.hasOwnProperty(l[o].type)) {
                        var g, m = i.substring(r, u), v = m.match(f) || [], y = 0;
                        for (a = 0; a < v.length; a++) {
                            var b = v[a].trim();
                            if (b.length > 0) {
                                g = m.indexOf(b, y), y = g + b.length;
                                var C = n({start: r + g, end: r + y}, i);
                                if (C)return C
                            }
                        }
                    }
                    r = u
                }
            }
        }, t.prototype.getWordAtText = function (e, t, n, i) {
            var o, r, s, a, u, l, d = i.match(t) || [];
            for (o = 0; o < d.length; o++)if (l = d[o].trim(), l.length > 0 && (r = i.indexOf(l, s), s = r + l.length, a = n + r + 1, u = n + s + 1, a <= e.column && e.column <= u))return{word: l, startColumn: a, endColumn: u};
            return null
        }, t.prototype.getWordAtTokens = function (e, t) {
            var n, i, o, r, s, a = this.getInternalTokens(e.lineNumber), u = this.getLineContent(e.lineNumber);
            for (n = 0, i = t.length; i > n; n++) {
                o = t[n], s = a[o].startIndex, r = o < a.length - 1 ? u.substring(s, a[o + 1].startIndex) : u.substring(s);
                var l = this.getModeAtPosition(e.lineNumber, e.column), d = this.massageWordDefinitionOf(l), c = this.getWordAtText(e, d, s, r);
                if (c)return c
            }
            return null
        }, t.prototype.getWordAtPosition = function (e, t, n) {
            "undefined" == typeof n && (n = !1);
            var i = [];
            if (n && !this.lineIsTokenized(e.lineNumber))return this.getWordAtText(e, this.massageWordDefinitionOf(this.mode), 0, this.getLineContent(e.lineNumber));
            var o = this.getInternalTokens(e.lineNumber);
            if (o.length > 0) {
                var r = V.findIndexInSegmentsArray(o, e.column - 1), s = null;
                t ? (s = this.getSyntaxTokensHashMap(), s.hasOwnProperty(o[r].type) || i.push(r)) : i.push(r), r > 0 && o[r].startIndex === e.column - 1 && (t ? s.hasOwnProperty(o[r - 1].type) || i.push(r - 1) : i.push(r - 1))
            }
            return 0 === i.length ? null : this.getWordAtTokens(e, i)
        }, t.prototype.getWordsInText = function (e, t) {
            var n, i, o, r, s, a, u = e.match(t) || [], l = [];
            for (n = 0; n < u.length; n++)a = u[n].trim(), a.length > 0 && (i = e.indexOf(a, o), o = i + a.length, r = i, s = o, l.push({start: r, end: s}));
            return l
        }, t.prototype.getWords = function (e, t, n) {
            if ("undefined" == typeof n && (n = !1), n && !this.lineIsTokenized(e))return this.getWordsInText(this.lines[e - 1].text, this.massageWordDefinitionOf(this.mode));
            var i = [];
            return this._iterateWords(e, t, function (e) {
                i.push(e)
            }), i
        }, t.prototype.findMatches = function (e, t, n, i, o) {
            if ("" === e)return[];
            var r = null;
            try {
                r = S.createRegExp(e, n, i, o)
            } catch (s) {
                return[]
            }
            if (S.regExpLeadsToEndlessLoop(r))return[];
            var a;
            return a = t ? this.getEditableRange() : this.getFullModelRange(), this.doFindMatches(a, r)
        }, t.prototype.doFindMatches = function (e, t) {
            var n, i = [], o = 0;
            if (e.startLineNumber === e.endLineNumber)return n = this.lines[e.startLineNumber - 1].text.substring(e.startColumn - 1, e.endColumn - 1), o = this.findMatchesInLine(t, n, e.startLineNumber, e.startColumn - 1, o, i), i;
            n = this.lines[e.startLineNumber - 1].text.substring(e.startColumn - 1), o = this.findMatchesInLine(t, n, e.startLineNumber, e.startColumn - 1, o, i);
            for (var r = e.startLineNumber + 1; r < e.endLineNumber && U >= o; r++)o = this.findMatchesInLine(t, this.lines[r - 1].text, r, 0, o, i);
            return U >= o && (n = this.lines[e.endLineNumber - 1].text.substring(0, e.endColumn - 1), o = this.findMatchesInLine(t, n, e.endLineNumber, 0, o, i)), i
        }, t.prototype.findMatchesInLine = function (e, t, n, i, o, r) {
            var s;
            do if (s = e.exec(t), s && (r.push(new I.Range(n, s.index + 1 + i, n, s.index + 1 + s[0].length + i)), o++, o > U))return o; while (s);
            return o
        }, t.prototype._addMarker = function (e, t, n) {
            var i = this.validatePosition(new M.Position(e + 1, t)), o = {id: (++this.lastMarkerId).toString(), column: i.column, type: n};
            return this.lines[i.lineNumber - 1].markers.push(o), this.markerIdToLineIndex[o.id] = i.lineNumber - 1, o.id
        }, t.prototype.__findMarkerInMarkersArray = function (e, t) {
            for (var n = 0; n < e.length; n++)if (e[n].id === t)return n;
            return-1
        }, t.prototype._changeMarker = function (e, t, n) {
            if (this.markerIdToLineIndex.hasOwnProperty(e)) {
                var i = this.markerIdToLineIndex[e], o = this.lines[i].markers, r = this.__findMarkerInMarkersArray(o, e);
                if (r >= 0) {
                    var s = o[r], a = this.validatePosition(new M.Position(t + 1, n));
                    a.lineNumber - 1 !== i && (o.splice(r, 1), this.lines[a.lineNumber - 1].markers.push(s), this.markerIdToLineIndex[s.id] = a.lineNumber - 1), s.column = a.column
                }
            }
        }, t.prototype._getMarker = function (e) {
            if (this.markerIdToLineIndex.hasOwnProperty(e)) {
                var t = this.markerIdToLineIndex[e], n = this.lines[t].markers, i = this.__findMarkerInMarkersArray(n, e);
                if (i >= 0)return{lineNumber: t + 1, column: n[i].column}
            }
            return null
        }, t.prototype._getMarkerLineNumber = function (e) {
            return this.markerIdToLineIndex.hasOwnProperty(e) ? this.markerIdToLineIndex[e] + 1 : -1
        }, t.prototype._getMarkerColumn = function (e, t) {
            var n = this.lines[e - 1].markers, i = this.__findMarkerInMarkersArray(n, t);
            return n[i].column
        }, t.prototype._getLineMarkers = function (e) {
            return this.lines[e - 1].markers.slice(0)
        }, t.prototype._removeMarker = function (e) {
            if (this.markerIdToLineIndex.hasOwnProperty(e)) {
                var t = this.markerIdToLineIndex[e], n = this.lines[t].markers, i = this.__findMarkerInMarkersArray(n, e);
                i >= 0 && n.splice(i, 1), delete this.markerIdToLineIndex[e]
            }
        }, t.prototype.validatePosition = function (e) {
            var t = e.lineNumber ? e.lineNumber : 1, n = e.column ? e.column : 1;
            1 > t && (t = 1), t > this.linesLength && (t = this.linesLength), 1 > n && (n = 1);
            var i = this.getLineMaxColumn(t);
            return n > i && (n = i), new M.Position(t, n)
        }, t.prototype.validateRange = function (e) {
            var t = this.validatePosition(new M.Position(e.startLineNumber, e.startColumn)), n = this.validatePosition(new M.Position(e.endLineNumber, e.endColumn));
            return new I.Range(t.lineNumber, t.column, n.lineNumber, n.column)
        }, t.prototype._sign = function (e) {
            return 0 > e ? -1 : e > 0 ? 1 : 0
        }, t.prototype._findMatchingBracketUp = function (e, t, n, i) {
            var o, r, s, a, u = i;
            for (o = t; o >= 0; o--) {
                r = this.lines[o];
                var l = r.getTokens();
                for (a = (o === t ? n : l.length) - 1; a >= 0; a--)if (l[a].type === e && (u += this._sign(l[a].bracket), 0 === u))return s = a === l.length - 1 ? r.text.length : l[a + 1].startIndex, new I.Range(o + 1, l[a].startIndex + 1, o + 1, s + 1)
            }
            return null
        }, t.prototype._findMatchingBracketDown = function (e, t, n, i) {
            var o, r, s, a, u, l, d = 1;
            for (o = t, s = this.linesLength; s > o; o++) {
                if (i && !this.lineIsTokenized(o + 1))return{range: null, isAccurate: !1};
                this._updateTokensUntilLine(o + 1, !0), r = this.lines[o];
                var c = r.getTokens();
                for (u = o === t ? n + 1 : 0, l = c.length; l > u; u++)if (c[u].type === e && (d += this._sign(c[u].bracket), 0 === d))return a = u === c.length - 1 ? r.text.length : c[u + 1].startIndex, {range: new I.Range(o + 1, c[u].startIndex + 1, o + 1, a + 1), isAccurate: !0}
            }
            return{range: null, isAccurate: !0}
        }, t.prototype.tokenIterator = function (e, t) {
            var n = new P.TokenIterator(this, this.validatePosition(e)), i = t(n);
            return n._invalidate(), i
        }, t.prototype.findMatchingBracketUp = function (e, t) {
            this._updateTokensUntilLine(t.lineNumber, !0);
            var n, i, o, r, s = this.lines[t.lineNumber - 1], a = t.column - 1, u = -1, l = s.getTokens();
            for (n = 0, i = l.length; -1 === u && i > n; n++)o = l[n], r = n === i - 1 ? s.text.length : l[n + 1].startIndex, o.startIndex <= a && r >= a && (u = n);
            return this._findMatchingBracketUp(e, t.lineNumber - 1, u + 1, 0)
        }, t.prototype.matchBracket = function (e, t) {
            if ("undefined" == typeof t && (t = !1), t && !this.lineIsTokenized(e.lineNumber))return{brackets: null, isAccurate: !1};
            this._updateTokensUntilLine(e.lineNumber, !0);
            var n, i, o = this.lines[e.lineNumber - 1], r = {brackets: null, isAccurate: !0};
            if (o.text.length > 0) {
                var s, a, u = e.column - 1, l = o.getTokens();
                for (n = 0, i = l.length; null === r.brackets && i > n; n++)if (s = l[n], a = n === i - 1 ? o.text.length : l[n + 1].startIndex, s.startIndex <= u && a >= u) {
                    if (s.bracket < 0) {
                        var d = this._findMatchingBracketUp(s.type, e.lineNumber - 1, n, -1);
                        d && (r.brackets = [new I.Range(e.lineNumber, s.startIndex + 1, e.lineNumber, a + 1), d])
                    }
                    if (null === r.brackets && s.bracket > 0) {
                        var c = this._findMatchingBracketDown(s.type, e.lineNumber - 1, n, t);
                        r.isAccurate = c.isAccurate, c.range && (r.brackets = [new I.Range(e.lineNumber, s.startIndex + 1, e.lineNumber, a + 1), c.range])
                    }
                }
            }
            return r
        }, t.prototype._revalidateTokensNow = function () {
            this.revalidateTokensTimeout = -1;
            for (var e, t = 50, n = this.invalidLineStartIndex + 1, i = Math.min(this.linesLength, this.invalidLineStartIndex + 1e6), o = 0, r = 0, s = 0, a = this.stopLineTokenizationAfter, u = (new Date).getTime(), l = n; i >= l; l++) {
                if (e = (new Date).getTime() - u, e > t) {
                    i = l - 1;
                    break
                }
                if (r = this.lines[l - 1].text.length, -1 !== a && r > a && (r = a), o > 0 && (s = e / o * r, e + s > t)) {
                    i = l - 1;
                    break
                }
                this._updateTokensUntilLine(l, !1), o += r
            }
            i >= n && this.emitModelTokensChangedEvent(n, i), this.invalidLineStartIndex < this.linesLength && this._beginBackgroundTokenization()
        }, t.prototype._beginBackgroundTokenization = function () {
            var e = this;
            -1 === this.revalidateTokensTimeout && (this.revalidateTokensTimeout = window.setTimeout(function () {
                e._revalidateTokensNow()
            }, 50))
        }, t.prototype.updateLineTokens = function (e, t) {
            this.lines[e].setTokens(t.tokens)
        }, t.prototype.onModeTokenizationFailed = function () {
            var e = this;
            -1 === this.modeTokenizationFailedTimeout && (this.modeTokenizationFailedTimeout = window.setTimeout(function () {
                e.setMode(new k.NullMode)
            }, 200))
        }, t.prototype._updateTokensUntilLine = function (e, n) {
            var i = this.linesLength, o = e - 1, r = this.stopLineTokenizationAfter;
            -1 === r && (r = 1e9);
            for (var s = this.invalidLineStartIndex + 1, a = e, u = this.invalidLineStartIndex; o >= u; u++) {
                var l = u + 1, d = null, c = this.lines[u].text;
                if (this.mode.tokenizationSupport) {
                    try {
                        d = this.mode.tokenizationSupport.tokenize(this.lines[u].text, this.lines[u].state, 0, r)
                    } catch (h) {
                        W.onUnexpectedError(h, t.MODE_TOKENIZATION_FAILED_MSG), this.onModeTokenizationFailed()
                    }
                    d && d.actualStopOffset < c.length && (d.tokens.push({startIndex: d.actualStopOffset, type: "", bracket: 0}), d.endState = this.lines[u].state)
                }
                if (d || (d = k.nullTokenize(this.mode, c, this.lines[u].state)), this.updateLineTokens(u, d), this.lines[u].modeTransitions = d.modeTransitions, this.lines[u].isInvalid && (this.lines[u].isInvalid = !1), i > l)if (null !== this.lines[l].state && d.endState.equals(this.lines[l].state)) {
                    for (var p = u + 1; i > p && !this.lines[p].isInvalid;) {
                        if (i > p + 1) {
                            if (null === this.lines[p + 1].state)break
                        } else if (null === this.lastState)break;
                        p++
                    }
                    this.invalidLineStartIndex = Math.max(this.invalidLineStartIndex, p), u = p - 1
                } else this.lines[l].state = d.endState; else this.lastState = d.endState
            }
            n && a >= s && this.emitModelTokensChangedEvent(s, a), this.invalidLineStartIndex = Math.max(this.invalidLineStartIndex, o + 1)
        }, t.prototype._changeLine = function (e, t) {
            this.lines[e].text = t, this._invalidateLine(e), this._versionId++, this.emitModelContentChangedLineChangedEvent(e + 1)
        }, t.prototype._invalidateLine = function (e) {
            this.lines[e].isInvalid = !0, e < this.invalidLineStartIndex && (this.invalidLineStartIndex < this.linesLength && (this.lines[this.invalidLineStartIndex].isInvalid = !0), this.invalidLineStartIndex = e, this._beginBackgroundTokenization())
        }, t.prototype._beforeMarkerChange = function (e, t) {
            if (!t.hasOwnProperty(e.id)) {
                var n = {id: e.id, oldLineIndex: this.markerIdToLineIndex[e.id], oldColumn: e.column};
                t[e.id] = n
            }
        }, t.prototype._shouldMoveMarkerOnTextInsert = function (e, t, n, i) {
            return t > n ? !0 : t === n ? i || "end" === e : !1
        }, t.prototype._insertTextOneLine = function (e, t, n, i) {
            var o = t.lineNumber - 1, r = t.column, s = this.lines[o], a = s.text;
            this._changeLine(o, a.substring(0, r - 1) + n + a.substring(r - 1, a.length));
            for (var u, l = new M.Position(o + 1, r + n.length), d = 0, c = s.markers.length; c > d; d++)u = s.markers[d], this._shouldMoveMarkerOnTextInsert(u.type, u.column, r, i) && (this._beforeMarkerChange(u, e), u.column += n.length);
            return l
        }, t.prototype._insertTextMultiline = function (e, t, n, i) {
            var o, r, s = t.lineNumber - 1, a = t.column, u = this.lines[s].text, l = u.substring(a - 1, u.length);
            this._changeLine(s, u.substring(0, a - 1) + n[0]);
            var d = "";
            for (o = 1, r = n.length - 1; r > o; o++)d += n[o] + "\n", this.lines.splice(s + o, 0, new j(n[o]));
            var c = s + n.length - 1, h = n[n.length - 1], p = h + l, f = [];
            this.lines.splice(c, 0, new j(p, f)), this.linesLength = this.lines.length;
            var g, m = this.lines[s].markers;
            for (o = 0; o < m.length; o++)g = m[o], this._shouldMoveMarkerOnTextInsert(g.type, g.column, a, i) && (this._beforeMarkerChange(g, e), m.splice(o, 1), f.push(g), g.column += h.length - a + 1, this.markerIdToLineIndex[g.id] = c, o--);
            var v, y, b;
            for (o = c + 1; o < this.linesLength; o++)for (b = this.lines[o].markers, v = 0, y = b.length; y > v; v++)g = b[v], this._beforeMarkerChange(g, e), this.markerIdToLineIndex[g.id] = o;
            return n.length > 1 && (this._versionId++, this.emitModelContentChangedLinesInsertedEvent(s + 2, c + 1, d + p)), new M.Position(c + 1, 1 + h.length)
        }, t.prototype._insertText = function (e, t, n, i) {
            var o = this.validatePosition(t);
            if (0 === n.length)return o;
            for (var r = n.split("\n"), s = 0, a = r.length; a > s; s++)"\r" === r[s].charAt(r[s].length - 1) && (r[s] = r[s].substring(0, r[s].length - 1));
            return 1 === r.length ? this._insertTextOneLine(e, o, r[0], i) : this._insertTextMultiline(e, o, r, i)
        }, t.prototype._deleteTextOneLine = function (e, t) {
            var n = t.startLineNumber - 1, i = this.lines[n], o = this.lines[n].text, r = o.substring(t.startColumn - 1, t.endColumn - 1);
            this._changeLine(n, o.substring(0, t.startColumn - 1) + o.substring(t.endColumn - 1, o.length));
            for (var s, a = 0, u = i.markers.length; u > a; a++)s = i.markers[a], s.column >= t.endColumn ? (this._beforeMarkerChange(s, e), s.column -= t.endColumn - t.startColumn) : s.column >= t.startColumn && (this._beforeMarkerChange(s, e), s.column = t.startColumn);
            return{position: new M.Position(t.startLineNumber, t.startColumn), deletedText: r}
        }, t.prototype._deleteTextMultiline = function (e, t) {
            var n = t.startLineNumber - 1, i = t.endLineNumber - 1, o = this.lines[i], r = o.text, s = r.substring(t.endColumn - 1, r.length), a = this.lines[n], u = a.text;
            this._changeLine(n, u.substring(0, t.startColumn - 1) + s);
            var l, d, c = u.substring(t.startColumn - 1, u.length);
            for (l = n + 1; i > l; l++)c += "\n" + this.lines[l].text;
            c += "\n" + r.substring(0, t.endColumn - 1);
            var h = i - n, p = this.lines.splice(n + 1, h);
            this.linesLength = this.lines.length;
            var f;
            for (l = 0, d = a.markers.length; d > l; l++)f = a.markers[l], f.column > t.startColumn && (this._beforeMarkerChange(f, e), f.column = t.startColumn);
            for (l = 0; l < o.markers.length; l++)f = o.markers[l], f.column >= t.endColumn && (this._beforeMarkerChange(f, e), o.markers.splice(l, 1), a.markers.push(f), f.column -= t.endColumn - t.startColumn, this.markerIdToLineIndex[f.id] = n, l--);
            var g = [];
            for (l = 0, d = p.length; d > l; l++)g = g.concat(p[l].markers);
            for (l = 0, d = g.length; d > l; l++)f = g[l], this._beforeMarkerChange(f, e), f.column = t.startColumn, this.markerIdToLineIndex[f.id] = n;
            a.markers = a.markers.concat(g);
            var m, v, y;
            for (l = n + 1; l < this.linesLength; l++)for (y = this.lines[l].markers, m = 0, v = y.length; v > m; m++)f = y[m], this._beforeMarkerChange(f, e), this.markerIdToLineIndex[f.id] = l;
            return this._versionId++, this.emitModelContentChangedLinesDeletedEvent(n + 2, i + 1), {position: new M.Position(t.startLineNumber, t.startColumn), deletedText: c}
        }, t.prototype._deleteText = function (e, t) {
            var n = this.validateRange(t);
            return n.isEmpty() ? {position: new M.Position(n.startLineNumber, n.startColumn), deletedText: ""} : n.startLineNumber === n.endLineNumber ? this._deleteTextOneLine(e, n) : this._deleteTextMultiline(e, n)
        }, t.prototype._publishMarkerUpdate = function (e) {
            var t = O.createMarkerUpdateFromJson(e);
            null !== this.markerService && this.markerService.change(function (e) {
                e.processMarkerUpdate(t)
            });
            for (var n = t.getId(), i = this.markerDecorationIds[n] || [], o = [], r = t.getMarkers(), s = 0; s < r.length; s++) {
                var a = r[s];
                "object" == typeof a.range && o.push({range: a.range, options: this._createDecorationOption(a)})
            }
            this.markerDecorationIds[t.getId()] = this.deltaDecorations(i, o)
        }, t.prototype._createDecorationOption = function (e) {
            var t = e.severity === O.Severity.Error;
            return{isOverlay: !0, className: t ? N.ClassName.EditorErrorDecoration : N.ClassName.EditorWarningDecoration, hoverMessage: e.text, showInOverviewRuler: t ? "rgba(255,18,18,0.7)" : "rgba(18,136,18,0.7)", glyphMarginClassName: t ? "glyph-error" : "glyph-warning"}
        }, t.prototype.emitModelTokensChangedEvent = function (e, t) {
            var n = {fromLineNumber: e, toLineNumber: t};
            this.emit(N.EventType.ModelTokensChanged, n)
        }, t.prototype.emitModelContentChangedFlushEvent = function (e) {
            var t = {changeType: N.EventType.ModelContentChangedFlush, detail: this.getValue(H.EndOfLinePreference.LF), modeChanged: e, versionId: this._versionId, isUndoing: !1, isRedoing: !1};
            this.emit(N.EventType.ModelContentChanged, t)
        }, t.prototype.emitModelContentChangedLineChangedEvent = function (e) {
            var t = {changeType: N.EventType.ModelContentChangedLineChanged, lineNumber: e, detail: this.lines[e - 1].text, versionId: this._versionId, isUndoing: this.isUndoing, isRedoing: this.isRedoing};
            this.emit(N.EventType.ModelContentChanged, t)
        }, t.prototype.emitModelContentChangedLinesDeletedEvent = function (e, t) {
            var n = {changeType: N.EventType.ModelContentChangedLinesDeleted, fromLineNumber: e, toLineNumber: t, versionId: this._versionId, isUndoing: this.isUndoing, isRedoing: this.isRedoing};
            this.emit(N.EventType.ModelContentChanged, n)
        }, t.prototype.emitModelContentChangedLinesInsertedEvent = function (e, t, n) {
            var i = {changeType: N.EventType.ModelContentChangedLinesInserted, fromLineNumber: e, toLineNumber: t, detail: n, versionId: this._versionId, isUndoing: this.isUndoing, isRedoing: this.isRedoing};
            this.emit(N.EventType.ModelContentChanged, i)
        }, t.prototype.emitModelPropertiesChangedEvent = function () {
            var e = {properties: this.extraProperties};
            this.emit(N.EventType.ModelPropertiesChanged, e)
        }, t.prototype.emitModelDecorationsChangedEvent = function (e) {
            this.emit(N.EventType.ModelDecorationsChanged, e)
        }, t.MODE_TOKENIZATION_FAILED_MSG = E.localize("vs_editor_core_model_model", 0), t
    }(x.EventEmitter);
    t.Model = Z
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/core/model/terminalModel", ["require", "exports", "./model", "vs/editor/core/position", "vs/editor/core/range", "vs/editor/modes/modes"], function (e, t, n, i, o, r) {
    "use strict";
    var s = n, a = i, u = o, l = r, d = function (e) {
        function t(t, n, i, o) {
            "undefined" == typeof i && (i = null), "undefined" == typeof o && (o = null), e.call(this, "", n, i), this.promptText = "", this.modes = {}, this.forceAppendOutputColumn = 0, this.foceCurrentMode = 0, this.appendOutput(t)
        }

        return __extends(t, e), t.prototype.setValue = function (t, n) {
            "undefined" == typeof n && (n = null), e.prototype.setValue.call(this, "", n), this.modes = {}, this.forceAppendOutputColumn = 0, this.foceCurrentMode = 0, this.appendOutput(t)
        }, t.prototype.appendOutputPiece = function (e, t, n) {
            if (t.length > 0) {
                var i, o, r, s = this.getEditableRange().getEndPosition(), l = s.lineNumber, d = this.forceAppendOutputColumn > 0 ? this.forceAppendOutputColumn : s.column, c = this.foceCurrentMode, h = this.getLineContent(l);
                if (this.modes.hasOwnProperty(l.toString()))i = this.modes[l.toString()]; else for (i = [], o = 0, r = h.length; r > o; o++)i[o] = 0;
                for (var o = 0, r = t.length; r > o; o++)if ("\r" !== t.charAt(o)) {
                    if (27 === t.charCodeAt(o)) {
                        var p = o, f = ++p < r ? t.charAt(p) : null;
                        if (f && "[" === f) {
                            var g = null;
                            if (f = ++p < r ? t.charAt(p) : null, f && f >= "0" && "9" >= f && (g = f, f = ++p < r ? t.charAt(p) : null), f && f >= "0" && "9" >= f && (g += f, f = ++p < r ? t.charAt(p) : null), null === g && (g = "0"), "m" === f) {
                                c = parseInt(g, 10), o = p;
                                continue
                            }
                            if ("K" === f) {
                                h = h.substring(0, d - 1), i.splice(d - 1, i.length - d + 1), o = p;
                                continue
                            }
                            if ("G" === f) {
                                o = p;
                                continue
                            }
                        }
                    }
                    h = h.substring(0, d - 1) + t.charAt(o) + h.substr(d), i[d - 1] = c, d++
                } else d = 1;
                s = e.insertText(new a.Position(l, 1), h, !0), e.deleteText(new u.Range(l, s.column, l, this.getLineMaxColumn(l))), this.modes[l.toString()] = i, this.forceAppendOutputColumn = d, this.foceCurrentMode = c
            }
            if (n) {
                var m = this.getEditableRange().getEndPosition();
                e.insertText(new a.Position(m.lineNumber, m.column), "\n", !0), this.forceAppendOutputColumn = 0
            }
        }, t.prototype.appendOutput = function (e) {
            var t = this;
            this.change(function (n) {
                for (var i = 0, o = 0, r = e.length; r > o; o++)"\n" === e.charAt(o) && (t.appendOutputPiece(n, e.substring(i, o), !0), i = o + 1);
                r > i && t.appendOutputPiece(n, e.substr(i), !1)
            })
        }, t.prototype.appendPrompt = function () {
            var e = this.promptText, t = this.getLineContent(this.getLineCount());
            "" !== t && (e = "\n" + e), this.forceAppendOutputColumn = 0, this.foceCurrentMode = 0, this.appendOutput(e)
        }, t.prototype.replacePrompt = function (e) {
            var t = this, n = this.getEditableRange();
            this.promptText && this.promptText !== e && n.startColumn > this.promptText.length && this.change(function (i) {
                var o = i.deleteText(new u.Range(n.startLineNumber, n.startColumn - t.promptText.length, n.startLineNumber, n.startColumn));
                i.insertText(o.position, e, !0)
            }), this.promptText = e || "", this.forceAppendOutputColumn = 0
        }, t.prototype.updateLineTokens = function (e, t) {
            var n = t.tokens;
            if (1 === n.length) {
                var i = e + 1;
                if (this.modes.hasOwnProperty(i.toString())) {
                    var o = this.modes[i.toString()], r = Number.MIN_VALUE;
                    n = [];
                    for (var s = 0; s < o.length; s++)o[s] !== r && n.push({startIndex: s, type: 0 === o[s] ? "" : "meta.code" + o[s] + ".terminal", bracket: l.Bracket.None}), r = o[s]
                }
            }
            this.lines[e].setTokens(n)
        }, t
    }(s.Model);
    t.TerminalModel = d
}), define("vs/base/injector", ["require", "exports", "vs/base/assert", "vs/base/types", "vs/base/strings"], function (e, t, n, i, o) {
    "use strict";
    function r(e) {
        for (var t = {}, n = e.prototype || e; null !== n;) {
            for (var i = Object.keys(n), o = 0, r = i.length; r > o; o++)u.startsWith(i[o], l) && (t[i[o].substr(d, 1).toLocaleLowerCase() + i[o].substring(d + 1)] = !0);
            n = Object.getPrototypeOf(n)
        }
        return Object.keys(t)
    }

    var s = n, a = i, u = o, l = "inject", d = l.length, c = function () {
        function e() {
            this.map = {}, this.parent = null
        }

        return e.prototype.setParent = function (e) {
            this.parent = e
        }, e.prototype.registerService = function (e, t) {
            return s.ok(!a.isUndefinedOrNull(e)), s.ok(!a.isUndefinedOrNull(t)), this.map[e.toLowerCase()] = t, t
        }, e.prototype.injectTo = function (e) {
            var t = this;
            if (s.ok(!a.isUndefinedOrNull(e)), a.isArray(e))return e.forEach(function (e) {
                t.injectTo(e)
            }), void 0;
            for (var n in e)if (0 === n.indexOf(l)) {
                var i = e[n];
                if (a.isFunction(i)) {
                    n = n.substring(d).toLowerCase();
                    var o = this.findService(n, e);
                    a.isUndefinedOrNull(o) || i.apply(e, [o])
                }
            }
        }, e.prototype.createChild = function () {
            var t = new e;
            return t.setParent(this), t
        }, e.prototype.findService = function (e, t) {
            "undefined" == typeof t && (t = null);
            var n = this.map[e];
            return!a.isUndefinedOrNull(n) && t !== n || null === this.parent || (n = this.parent.findService(e, t)), n
        }, e.prototype.dispose = function () {
            this.map = null, this.parent = null
        }, e
    }();
    t.Container = c, t.computeInjectionDependencies = r
}), define("vs/platform/injectorService", ["require", "exports", "vs/base/lib/winjs.base", "vs/base/injector", "vs/base/assert", "vs/base/types", "vs/platform/platform"], function (e, t, n, i, o, r, s) {
    "use strict";
    function a(e) {
        var t = new h.Container, n = new m(t);
        return u(e, t), l(e, t), n
    }

    function u(e, t) {
        p.ok(!Object.keys(e).some(function (e) {
            return e === m._name
        }), "injectorService is NOT allowed to be added because it is implict"), Object.keys(e).forEach(function (n) {
            var i = e[n];
            t.registerService(n, i)
        })
    }

    function l(e, t) {
        Object.keys(e).forEach(function (n) {
            var i = e[n];
            t.injectTo(i), d(i)
        })
    }

    function d(e) {
        f.isFunction(e[m._fnInjectionDone]) && e[m._fnInjectionDone].apply(e)
    }

    var c = n, h = i, p = o, f = r, g = s, m = function () {
        function t(e) {
            this.diContainer = e, this.diContainer.registerService(t._name, this), this.children = []
        }

        return t.prototype.injectTo = function (e) {
            this.diContainer.injectTo(e), d(e)
        }, t.prototype.createChild = function (e) {
            var n = this.diContainer.createChild();
            n.registerService(t._name, n), u(e, n), l(e, n);
            var i = new t(n);
            return this.children.push(i), i
        }, t.prototype.newInstance = function (t) {
            var n = this;
            return new c.Promise(function (i, o) {
                e([t.getModuleId()], function (e) {
                    for (var r = e[t.getCtorName()], s = h.computeInjectionDependencies(r), a = {}, u = 0, l = s.length; l > u; u++) {
                        var d = s[u], p = n.diContainer.findService(d);
                        if (f.isUndefinedOrNull(p))return o(new Error("missing dependency: " + d));
                        p instanceof g.DeferredDescriptor && (a[d] = n.newInstance(p))
                    }
                    c.Promise.join(a).then(function (e) {
                        n.diContainer = n.diContainer.createChild();
                        for (var t = Object.keys(e), s = 0, a = t.length; a > s; s++)n.diContainer.registerService(t[s], e[t[s]]);
                        try {
                            var u = f.create(r);
                            n.injectTo(u), i(u)
                        } catch (l) {
                            o(l)
                        }
                    }, o)
                })
            })
        }, t._name = "injectorService", t._fnInjectionDone = "injectionDone", t
    }();
    t.create = a
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/platform/markers/markerService", ["require", "exports", "vs/platform/services", "vs/base/eventEmitter", "./markers"], function (e, t, n, i, o) {
    "use strict";
    var r = n, s = i, a = o, u = function (e) {
        function t() {
            e.call(this), this._markerSets = {}
        }

        return __extends(t, e), t.prototype.getMarkerSet = function (e) {
            var t = this._markerSets[e.toExternal()];
            return"undefined" == typeof t ? null : t
        }, t.prototype.change = function (e) {
            var t = [], n = this, i = {replaceMarkerSet: function (e) {
                t.push(n.__replaceMarkerSet(e))
            }, deleteMarkerSet: function (e) {
                var i = n.__deleteMarkerSet(e);
                null !== i && t.push(i)
            }, processMarkerUpdate: function (e) {
                var i = n.__processMarkerUpdate(e);
                null !== i && t.push(i)
            }};
            e(i), this.emit(r.MarkerServiceConstants.SERVICE_CHANGED, {kind: r.MarkerServiceConstants.SERVICE_CHANGED, source: this, markerSetEvents: t})
        }, t.prototype.__deleteMarkerSet = function (e) {
            var t = e.toExternal(), n = this._markerSets[t];
            return"undefined" == typeof n ? null : (delete this._markerSets[t], {kind: r.MarkerServiceConstants.SET_REMOVED, resource: e, oldValue: n, newValue: null})
        }, t.prototype.__replaceMarkerSet = function (e) {
            var t = e.getAssociatedResource().toExternal(), n = this._markerSets[t];
            return this._markerSets[t] = e, n ? {kind: r.MarkerServiceConstants.SET_CHANGED, resource: e.getAssociatedResource(), oldValue: n, newValue: e} : {kind: r.MarkerServiceConstants.SET_ADDED, resource: e.getAssociatedResource(), oldValue: null, newValue: e}
        }, t.prototype.__processMarkerUpdate = function (e) {
            var t = e.getAssociatedResource().toExternal(), n = this._markerSets[t], i = null;
            return n ? (i = a.processMarkerUpdate(e, n), n === i ? {kind: r.MarkerServiceConstants.SET_CHANGED, resource: n.getAssociatedResource(), oldValue: n, newValue: i, groupDetails: {groupId: e.getId()}} : (this._markerSets[t] = i, {kind: r.MarkerServiceConstants.SET_CHANGED, resource: n.getAssociatedResource(), oldValue: n, newValue: i})) : (i = a.processMarkerUpdate(e, null), this._markerSets[t] = i, {kind: r.MarkerServiceConstants.SET_ADDED, resource: i.getAssociatedResource(), oldValue: null, newValue: i})
        }, t
    }(s.EventEmitter);
    t.MarkerService = u
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/standalone/standaloneEditor", ["require", "exports", "vs/editor/core/codeEditorWidget", "vs/editor/diff/diffEditorWidget", "vs/editor/terminal/terminal", "vs/editor/standalone/simpleServices", "vs/platform/handlerService", "vs/platform/services", "vs/platform/telemetry/telemetryService", "vs/editor/core/model/model", "vs/editor/core/model/terminalModel", "vs/platform/injectorService", "vs/platform/markers/markerService", "vs/editor/modes/modesExtensions", "vs/platform/platform"], function (e, t, n, i, o, r, s, a, u, l, d, c, h, p, f) {
    "use strict";
    function g(e, t) {
        return new H(e, t)
    }

    function m(e, t, n) {
        var i = P.Registry.as(D.Extensions.EditorModes), o = i.getMode(t);
        return new x.Model(e, o, n, k.markerService)
    }

    function v(e, t, n) {
        var i = P.Registry.as(D.Extensions.EditorModes), o = i.getMode(t);
        return new M.TerminalModel(e, o, n)
    }

    function y(e, t) {
        var n = k.create({handlerService: new T.HandlerService(e)});
        return new w.DiffEditorWidget(e, t, n)
    }

    function b(e, t) {
        var n = k.create({handlerService: new T.HandlerService(e)});
        return new _.Terminal(e, t, n)
    }

    function C(e) {
        var t = P.Registry.as(D.Extensions.EditorModes);
        return t.getOrCreateMode(e)
    }

    var E = n, w = i, _ = o, S = r, T = s, L = a, N = u, x = l, M = d, I = c, R = h, D = p, P = f, O = function (e) {
        function t() {
            e.apply(this, arguments)
        }

        return __extends(t, e), t.prototype.getPath = function (e, t) {
            return t.toExternal()
        }, t
    }(L.BaseRequestService), k = function () {
        function e() {
        }

        return e.create = function (t) {
            var n = {markerService: e.markerService, messageService: e.messageService, contextService: e.contextService, requestService: e.requestService};
            if (t) {
                var i;
                for (i in t)t.hasOwnProperty(i) && (n[i] = t[i])
            }
            return I.create(n)
        }, e.markerService = new R.MarkerService, e.messageService = new S.SimpleMessageService, e.contextService = new L.BaseContextService({uri: null, name: null, telemetry: "/api/telemetry"}, {paths: {PUBLIC_WORKSPACE_URL: "inMemory://"}}), e.requestService = new O, e
    }(), A = P.Registry.as(D.Extensions.EditorModes);
    k.create().injectTo(A);
    var H = function (e) {
        function n(n, i) {
            this._editorService = new S.SimpleEditorService(this), this._handlerService = new T.HandlerService(n), this._telemetryService = N.nullService, i = i || {}, i.enableTelemetry && (this._telemetryService = new N.TelemetryService(!0));
            var o = {editorService: this._editorService, handlerService: this._handlerService, telemetryService: this._telemetryService}, r = k.create(o);
            i.model ? this._ownsModel = !1 : (i.model = t.createModel(i.value || "", i.mode || "text/plain"), this._ownsModel = !0), e.call(this, n, i, r)
        }

        return __extends(n, e), n.prototype.destroy = function () {
            e.prototype.destroy.call(this), this._handlerService.dispose()
        }, n.prototype.getMarkerService = function () {
            return k.markerService
        }, n.prototype.getHandlerService = function () {
            return this._handlerService
        }, n.prototype.getTelemetryService = function () {
            return this._telemetryService
        }, n.prototype._detachModel = function () {
            var t = this.getModel();
            e.prototype._detachModel.call(this), t && this._ownsModel && (t.destroy(), this._ownsModel = !1)
        }, n
    }(E.CodeEditorWidget);
    t.create = g, t.createModel = m, t.createTerminalModel = v, t.createDiffEditor = y, t.createTerminal = b, t.getOrCreateMode = C;
    var W = self;
    W.Monaco || (W.Monaco = {});
    var V = W.Monaco;
    V.Editor || (V.Editor = {}), V.Editor.create = t.create, V.Editor.createModel = t.createModel, V.Editor.createTerminalModel = t.createTerminalModel, V.Editor.CodeEditor = H, V.Editor.createDiffEditor = t.createDiffEditor, V.Editor.createTerminal = t.createTerminal, V.Editor.getOrCreateMode = t.getOrCreateMode
}), define("vs/css!vs/editor/contrib/quickOutline/quickOutline", ["vs/css!vs/editor/editor.main"], {}), define("vs/editor/contrib/quickOutline/quickOutlineWidget", ["require", "exports", "vs/base/lib/winjs.base", "vs/base/errors", "vs/base/dom/builder", "vs/base/ui/widgets/tree/treeImpl", "vs/base/ui/widgets/highlightedLabel", "vs/base/filters", "vs/base/strings", "vs/base/dom/keyboardEvent", "vs/base/dom/dom", "vs/base/ui/events", "vs/editor/editor", "vs/css!./quickOutline"], function (e, t, n, i, o, r, s, a, u, l, d, c, h) {
    "use strict";
    var p = n, f = i, g = o, m = r, v = s, y = a, b = u, C = l, E = d, w = c, _ = h;
    !function (e) {
        e[e.NO = 0] = "NO", e[e.EXPLICITLY = 1] = "EXPLICITLY", e[e.IMPLICITLY = 2] = "IMPLICITLY"
    }(t.Visible || (t.Visible = {}));
    var S = t.Visible, T = function () {
        function e() {
        }

        return e.prototype.getId = function (e, t) {
            return t.id
        }, e.prototype.getParent = function (e, t) {
            return p.Promise.as(t.parent)
        }, e.prototype.getChildren = function (e, t) {
            for (var n = [], i = t instanceof Array ? t : t.children, o = 0; o < i.length; o++)i[o].visible !== S.NO && n.push(i[o]);
            return p.Promise.as(n)
        }, e.prototype.hasChildren = function (e, t) {
            for (var n = t instanceof Array ? t : t.children, i = 0; i < n.length; i++)if (n[i].visible !== S.NO)return!0;
            return!1
        }, e
    }();
    t.DataSource = T;
    var L = function () {
        function e() {
        }

        return e.prototype.getHeight = function () {
            return 23
        }, e.prototype.render = function (t, n, i) {
            var o = g.withElement(i), r = o.getBinding(), s = o.clone();
            r || (r = {highlightedLabel: new v.HighlightedLabel(s)}, o.bind(r));
            var a = n, u = a.label, l = 0;
            (e.TYPES.indexOf(a.type) > -1 || a.category && -1 !== a.category.indexOf("g")) && (u = a.type + " " + u, l += a.type.length + 1);
            var d = a.highlights || [];
            return 0 !== l && (d = d.map(function (e) {
                return{start: e.start + l, end: e.end + l}
            })), a.highlightCategory && d.unshift({start: 0, end: l}), r.highlightedLabel.setValue(u, d), function () {
                r.highlightedLabel.destroy()
            }
        }, e.TYPES = ["class", "interface", "module", "enum"], e
    }();
    t.Renderer = L;
    var N = function () {
        function e(e) {
            this.codeEditor = e, this._domNode = null, this._input = null, this._inputField = null, this._tree = null, this._loosingFocus = !1, this._lastPattern = "", this._editorViewState = null, this._lineHighlightDecorationId = null, this._isVisible = !1, this.buildDomNode(g.Build.offDOM()), this.codeEditor.addOverlayWidget(this)
        }

        return e.prototype.getId = function () {
            return e.ID
        }, e.prototype.getDomNode = function () {
            return this._domNode
        }, e.prototype.cleanUpDecoration = function () {
            var e = this;
            this._lineHighlightDecorationId && this.codeEditor.changeDecorations(function (t) {
                t.removeDecoration(e._lineHighlightDecorationId), e._lineHighlightDecorationId = null
            })
        }, e.prototype.destroy = function () {
            this.cleanUpDecoration()
        }, e.prototype.isVisible = function () {
            return this._isVisible
        }, e.prototype.show = function () {
            this._isVisible = !0, this._domNode.style.display = "block", this._loosingFocus = !1, this._editorViewState = this.codeEditor.saveViewState(), this._inputField.focus(), this.codeEditor.layoutOverlayWidget(this)
        }, e.prototype.hide = function () {
            this._isVisible = !1, this.cleanUpDecoration(), this._domNode.style.display = "none", this._inputField.value = "", this._tree.setInput([]).done(null, f.onUnexpectedError), this._tree.layout(), this.codeEditor.layoutOverlayWidget(this)
        }, e.prototype.getPosition = function () {
            return this._isVisible ? {preference: _.OverlayWidgetPositionPreference.TOP_RIGHT_CORNER} : null
        }, e.prototype.escape = function () {
            this.codeEditor.restoreViewState(this._editorViewState), this.codeEditor.focus(), this.hide()
        }, e.prototype.setInput = function (e) {
            var t = this;
            this._input = e;
            for (var n = 0; n < this._input.length; n++) {
                var i = this._input[n];
                this._input[n] = i = this.flattenModules(i), this.updateAllNodes(i, null), this.updateVisibility(i)
            }
            this._tree.layout(), this._tree.setInput(this._input).done(null, f.onUnexpectedError), this.expandAll(), this._lastPattern = "", p.Promise.timeout(0).then(function () {
                t._inputField.focus()
            })
        }, e.prototype.flattenModules = function (e) {
            for (; "module" === e.type && 1 === e.children.length && "module" === e.children[0].type;) {
                var t = e.children[0];
                t.parent = null, e.children.pop(), t.label = e.label + "." + t.label, t.range.startLineNumber = e.range.startLineNumber, t.range.startColumn = e.range.startColumn, e = t
            }
            return e
        }, e.prototype.updateAllNodes = function (e, t) {
            var n = this;
            e.id = e.range.startLineNumber + ":" + e.range.startColumn + ":" + e.range.endLineNumber + ":" + e.range.endColumn, e.parent = t, e.children.forEach(function (t) {
                n.updateAllNodes(t, e)
            })
        }, e.prototype.expandAll = function () {
            if (this._input)for (var e, t = this._input; t.length;)e = [], t.forEach(function (t) {
                return e.push.apply(e, t.children)
            }), this._tree.expandAll(t), t = e
        }, e.prototype.updateVisibility = function (e, t, n, i) {
            "undefined" == typeof t && (t = null), "undefined" == typeof n && (n = null), "undefined" == typeof i && (i = null);
            var o = this, r = !1;
            e.children.forEach(function (e) {
                r = o.updateVisibility(e, t, n, i) || r
            }), e.highlightCategory = !1, e.highlights = null;
            var s = !1;
            if (i) {
                var a = i.exec(e.label);
                if (a)e.highlights = [
                    {start: a.index, end: a.index + a[0].length}
                ], s = !0; else {
                    var u = y.matchesCamelCase(n, e.label);
                    u && (e.highlights = u, s = !0)
                }
            }
            var l = !1;
            return t && e.category && -1 !== e.category.indexOf(t) && (e.highlightCategory = !0, l = !0), e.visible = t || n ? s && !t ? S.EXPLICITLY : l ? s || !n ? S.EXPLICITLY : S.NO : r ? S.IMPLICITLY : S.NO : S.EXPLICITLY, e.visible !== S.NO
        }, e.prototype.findFirstExplicitlyVisibleNode = function () {
            for (var e = this._input.slice(0), t = 0; t < e.length; t++) {
                if (e[t].visible === S.EXPLICITLY)return e[t];
                e.push.apply(e, e[t].children)
            }
            return null
        }, e.prototype.filterChanged = function (e) {
            var t = this;
            if (e = b.trim(e), e !== this._lastPattern) {
                this._lastPattern = e;
                var n = null, i = null;
                if (e.length > 0)if (":" === e.charAt(0)) {
                    var o = e.indexOf(" ");
                    -1 !== o ? (n = e.substring(1, o), i = e.substring(o + 1)) : n = e.substring(1)
                } else i = e;
                n = n || null, i = i || null;
                var r = i ? new RegExp("^" + b.convertSimple2RegExpPattern(i), "i") : null;
                if (this._input.forEach(function (e) {
                    t.updateVisibility(e, n, i, r)
                }), null !== n || null !== i) {
                    if (this._tree.setInput(this._input).done(null, f.onUnexpectedError), this.expandAll(), null === this._tree.getFocus()) {
                        var s = this.findFirstExplicitlyVisibleNode();
                        null !== s && this._tree.setFocus(s)
                    }
                } else this._tree.setInput(this._input).done(null, f.onUnexpectedError), this.expandAll(), this.codeEditor.restoreViewState(this._editorViewState)
            }
        }, e.prototype.elementSelected = function (e, t) {
            "undefined" == typeof t && (t = !0);
            var n = this, i = {startLineNumber: e.range.startLineNumber, startColumn: e.range.startColumn, endLineNumber: e.range.startLineNumber, endColumn: e.range.startColumn};
            this.codeEditor.setSelection(i, !0, !0, !0), t ? (this.codeEditor.focus(), this.hide()) : this.codeEditor.changeDecorations(function (e) {
                n._lineHighlightDecorationId && (e.removeDecoration(n._lineHighlightDecorationId), n._lineHighlightDecorationId = null), n._lineHighlightDecorationId = e.addDecoration(i, {className: "lineHighlight", isWholeLine: !0})
            })
        }, e.prototype.selectTreeIfNotSelected = function (e) {
            this._tree.getFocus() || this._tree.focusNext(1, e)
        }, e.prototype.loosingFocus = function () {
            var e = this;
            this.isVisible() && (this._loosingFocus = !0, p.Promise.timeout(0).then(function () {
                e._loosingFocus && (e._inputField.value = "", e.codeEditor.focus(), e.hide())
            }))
        }, e.prototype.gainingFocus = function () {
            this._loosingFocus = !1
        }, e.prototype.buildDomNode = function (e) {
            var t = this;
            this._domNode = e.div(function (e) {
                e.on(E.EventType.KEY_DOWN,function (e) {
                    var n = new C.KeyboardEvent(e);
                    switch (n.key) {
                        case"Escape":
                            t.escape(), E.EventHelper.stop(e, !0)
                    }
                }).on(E.EventType.FOCUS,function () {
                        t.gainingFocus()
                    }, null, !0).on(E.EventType.BLUR, function () {
                        t.loosingFocus()
                    }, null, !0), t._inputField = e.element("input", {type: "text", className: "quick-outline-input"}).on(E.EventType.KEY_UP,function (e) {
                    var n = new C.KeyboardEvent(e);
                    switch (n.key) {
                        case"Enter":
                            t.codeEditor.focus(), t.hide();
                            break;
                        default:
                            t.filterChanged(t._inputField.value)
                    }
                }).on(E.EventType.KEY_DOWN,function (e) {
                    var n = new C.KeyboardEvent(e);
                    switch (n.key) {
                        case"Tab":
                            t.selectTreeIfNotSelected(n);
                            break;
                        case"DownArrow":
                            t.selectTreeIfNotSelected(n), t._tree.getFocus() && t._tree.DOMFocus(), E.EventHelper.stop(e, !1)
                    }
                }).attr({wrap: "off", autocorrect: "off", autocapitalize: "off", spellcheck: "false"}).style({width: "290px", border: "none", margin: "0", padding: "5px", outline: "0"}).getHTMLElement(), e.div({}, function (e) {
                    e.style({"border-bottom": "4px solid rgba(197, 197, 197, .4)"})
                }), e.div({}, function (e) {
                    e.style("height", "269px"), t._tree = new m.Tree(e.getHTMLElement(), {dataSource: new T, renderer: new L}, {verticalScrollMode: "visible", twistiePixels: 16, indentPixels: 10}), t._tree.addListener(w.EventType.FOCUS, function (e) {
                        null !== e.focus && t.elementSelected(e.focus, !1)
                    }), t._tree.addListener(w.EventType.SELECTION, function (e) {
                        null !== e.selection && e.selection.length > 0 && t.elementSelected(e.selection[0], !0)
                    })
                })
            }).style({width: "300px", height: "300px", display: "none", border: "1px solid rgba(197, 197, 197, .4)"}).addClass("monaco-editor-background editor-widget quick-outline-widget").getHTMLElement()
        }, e.ID = "editor.contrib.quickOutlineWidget", e
    }();
    t.QuickOutlineWidget = N
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/editor/contrib/quickOutline/quickOutline", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/base/types", "./quickOutlineWidget", "vs/platform/platform", "vs/platform/actionRegistry", "vs/editor/editorExtensions"], function (e, t, n, i, o, r, s, a) {
    "use strict";
    var u = n, l = i, d = o, c = r, h = s, p = a, f = function (e) {
        function t(t, n) {
            e.call(this, t, n), this.widget = null, this.label = u.localize("vs_editor_contrib_quickOutline_quickOutline", 0)
        }

        return __extends(t, e), t.prototype.run = function () {
            var e = this, t = this.editor.getModel(), n = t.getMode(), i = n.outlineSupport;
            if (!i)return null;
            var o = i.getOutline(t.getAssociatedResource());
            return o.then(function (t) {
                return l.isArray(t) && t.length > 0 && (e.widget || (e.widget = new d.QuickOutlineWidget(e.editor)), e.widget.show(), e.widget.setInput(t)), !0
            }, function (e) {
                return console.log(e), !1
            })
        }, t.prototype.dispose = function () {
            e.prototype.dispose.call(this), this.widget && (this.widget.destroy(), this.widget = null)
        }, t.ID = "editor.actions.quickOutline", t
    }(p.EditorAction);
    t.QuickOutlineAction = f;
    var g = c.Registry.as(p.Extensions.EditorContributions);
    g.registerEditorContribution(new h.ActionDescriptor(f, f.ID, u.localize("vs_editor_contrib_quickOutline_quickOutline", 1), {ctrlCmd: !0, alt: !0, key: "O"}, {ctrlCmd: !0, shift: !0, key: "O"}))
}), define("vs/languages/bat/bat.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["text/x-bat"], new o.DeferredDescriptor("vs/languages/bat/bat", "BatMode"))
}), define("vs/languages/coffeescript/coffeescript.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["text/x-coffeescript", "text/coffeescript"], new o.DeferredDescriptor("vs/languages/coffeescript/coffeescript", "CoffeeMode"))
}), define("vs/languages/cpp/cpp.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["text/x-cpp"], new o.DeferredDescriptor("vs/languages/cpp/cpp", "CPPMode"))
}), define("vs/languages/csharp/csharp.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["text/x-csharp"], new o.DeferredDescriptor("vs/languages/csharp/csharp", "CSMode"))
}), define("vs/languages/css/css.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions", "vs/base/env"], function (e, t, n, i, o) {
    "use strict";
    var r = n, s = i, a = o, u = r.Registry.as(s.Extensions.EditorModes);
    u.registerMode(["text/css"], new r.DeferredDescriptor("vs/languages/css/css", "CSSMode")), a.enableGlobalCSSRuleChecker && u.registerWorkerParticipant("vs.languages.css", new r.DeferredDescriptor("vs/languages/css/monacoParticipant", "WorkerParticipant"))
}), define("vs/languages/fsharp/fsharp.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["text/x-fsharp"], new o.DeferredDescriptor("vs/languages/fsharp/fsharp", "FSMode"))
}), define("vs/languages/handlebars/handlebars.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["text/x-handlebars-template"], new o.DeferredDescriptor("vs/languages/handlebars/handlebars", "HandlebarsMode"))
}), define("vs/languages/html/html.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["text/html"], new o.DeferredDescriptor("vs/languages/html/html", "HTMLMode"))
}), define("vs/languages/ini/ini.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["text/x-ini"], new o.DeferredDescriptor("vs/languages/ini/ini", "INIMode"))
}), define("vs/languages/jade/jade.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["text/x-jade"], new o.DeferredDescriptor("vs/languages/jade/jade", "JadeMode"))
}), define("vs/languages/java/java.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["text/x-java-source"], new o.DeferredDescriptor("vs/languages/java/java", "JMode"))
}), define("vs/languages/javascript/javascript.contribution", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/platform/platform", "vs/platform/configurationRegistry", "vs/editor/modes/modesExtensions"], function (e, t, n, i, o, r) {
    "use strict";
    var s = n, a = i, u = o, l = r, d = a.Registry.as(l.Extensions.EditorModes);
    d.registerMode(["text/javascript"], new a.DeferredDescriptor("vs/languages/javascript/javascript", "JSVSMode"));
    var c = a.Registry.as(u.Extensions.Configuration);
    c.registerConfiguration({id: l.LANGUAGE_CONFIGURATION + "/vs.languages.javascript", type: "object", title: s.localize("vs_languages_javascript_javascript.contribution", 0), description: s.localize("vs_languages_javascript_javascript.contribution", 1), properties: {predef: {type: "array", description: s.localize("vs_languages_javascript_javascript.contribution", 2), items: {type: "string"}}, asi: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 3)}, lastsemic: {type: "boolean", description: s.localize("vs_languages_javascript_javascript.contribution", 4)}, bitwise: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 5)}, browser: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 6)}, debug: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 7)}, devel: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 8)}, eqeqeq: {type: "boolean", description: s.localize("vs_languages_javascript_javascript.contribution", 9)}, es5: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 10)}, forin: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 11)}, globalstrict: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 12)}, jquery: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 13)}, latedef: {type: "boolean", description: s.localize("vs_languages_javascript_javascript.contribution", 14)}, newcap: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 15)}, noarg: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 16)}, node: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 17)}, noempty: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 18)}, nonew: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 19)}, nonstandard: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 20)}, proto: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 21)}, undef: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 22)}, scripturl: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 23)}, strict: {type: "boolean", description: s.localize("vs_languages_javascript_javascript.contribution", 24)}, sub: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 25)}, supernew: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 26)}, laxcomma: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 27)}, smarttabs: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 28)}, validthis: {type: "boolean", "default": !0, description: s.localize("vs_languages_javascript_javascript.contribution", 29)}}})
}), define("vs/languages/jshtm/jshtm.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["text/x-jshtm"], new o.DeferredDescriptor("vs/languages/jshtm/jshtm", "JSHTMHTMLMode"))
}), define("vs/languages/json/json.contribution", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/platform/configurationRegistry", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i, o, r) {
    "use strict";
    var s = n, a = i, u = o, l = r, d = u.Registry.as(l.Extensions.EditorModes);
    d.registerMode(["application/json"], new u.DeferredDescriptor("vs/languages/json/json", "JSONMode"));
    var c = u.Registry.as(a.Extensions.Configuration);
    c.registerConfiguration({id: l.LANGUAGE_CONFIGURATION + "/vs.languages.json", type: "object", title: s.localize("vs_languages_json_json.contribution", 0), description: s.localize("vs_languages_json_json.contribution", 1), properties: {schemas: {type: "array", description: s.localize("vs_languages_json_json.contribution", 2), items: {type: "object", properties: {schema: {type: "string", "default": "/user.schema.json", description: s.localize("vs_languages_json_json.contribution", 3)}, filePattern: {type: "string", "default": "*.json", description: s.localize("vs_languages_json_json.contribution", 4)}}}}}})
}), define("vs/languages/lua/lua.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["text/x-lua"], new o.DeferredDescriptor("vs/languages/lua/lua", "LuaMode"))
}), define("vs/languages/markdown/markdown.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["text/x-web-markdown"], new o.DeferredDescriptor("vs/languages/markdown/markdown", "MarkdownMode"))
}), define("vs/languages/php/php.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["application/x-php"], new o.DeferredDescriptor("vs/languages/php/php", "PHPMode"))
});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/languages/plaintext/plaintext.contribution", ["require", "exports", "vs/editor/modes/modesExtensions", "vs/platform/platform"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = function (e) {
        function t(t) {
            e.call(this, t)
        }

        return __extends(t, e), t.prototype.makeClone = function () {
            return new t(this.getMode())
        }, t.prototype.tokenize = function (e) {
            return e.advanceToEOS(), {type: ""}
        }, t
    }(o.AbstractState), a = function (e) {
        function t() {
            e.call(this, "vs.languages.plainText", "vs/languages/plaintext/plainTextWorker")
        }

        return __extends(t, e), t.prototype.getInitialState = function () {
            return new s(this)
        }, t
    }(o.AbstractMode);
    t.Mode = a;
    var u = r.Registry.as(o.Extensions.EditorModes);
    u.registerMode(["text/plain"], new r.DeferredDescriptor("vs/languages/plaintext/plaintext.contribution", "Mode"))
}), define("vs/languages/powershell/powershell.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["text/x-powershell"], new o.DeferredDescriptor("vs/languages/powershell/powershell", "PowerShellMode"))
}), define("vs/languages/python/python.contribution", ["require", "exports", "vs/editor/modes/modesExtensions", "vs/platform/platform"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = r.Registry.as(o.Extensions.EditorModes);
    s.registerMode(["text/x-python", "text/python"], new r.DeferredDescriptor("vs/languages/python/python", "PythonMode"))
}), define("vs/languages/razor/razor.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["text/x-cshtml"], new o.DeferredDescriptor("vs/languages/razor/razor", "RAZORMode"))
}), define("vs/css!vs/languages/typescript/editor/workerStatusReporter", ["vs/css!vs/editor/editor.main"], {});
var __extends = this.__extends || function (e, t) {
    function n() {
        this.constructor = e
    }

    for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
    n.prototype = t.prototype, e.prototype = new n
};
define("vs/languages/typescript/editor/workerStatusReporter", ["require", "exports", "vs/editor/editor", "vs/editor/core/constants", "vs/editor/modes/modesExtensions", "vs/base/eventEmitter", "vs/base/dom/builder", "vs/css!./workerStatusReporter"], function (e, t, n, i, o, r, s) {
    "use strict";
    var a, u = n, l = i, d = o, c = r, h = s, p = h.$;
    !function (e) {
        e[e.Unknown = 0] = "Unknown", e[e.Updating = 1] = "Updating", e[e.Fetching = 2] = "Fetching", e[e.Error = 3] = "Error", e[e.Ok = 4] = "Ok"
    }(a || (a = {}));
    var f = function (e) {
        function t(t) {
            var n = this;
            e.call(this), this.worker = t, this.worker.request("setStatusReporting", [!0]), this.updateStatus(a.Unknown), this.worker.addMessageHandler("ts.statusUpdate", function (e) {
                switch (e.status) {
                    case 0:
                        n.updateStatus(a.Ok);
                        break;
                    case 1:
                        n.updateStatus(a.Updating);
                        break;
                    case 2:
                        n.updateStatus(a.Error);
                        break;
                    case 3:
                        n.updateStatus(a.Fetching);
                        break;
                    default:
                        n.updateStatus(a.Unknown)
                }
            })
        }

        return __extends(t, e), t.prototype.getStatus = function () {
            return this.status
        }, t.prototype.updateStatus = function (e) {
            this.status !== e && (this.status = e, this.emit(t.Events.Updated, this.status))
        }, t.prototype.dispose = function () {
            this.worker.removeMessageHandler("ts.status")
        }, t.Events = {Updated: "updated"}, t
    }(c.EventEmitter), g = function () {
        function e() {
        }

        return e.prototype.getStatus = function (e) {
            return this.status || (this.status = e.getWorkers().map(function (e) {
                return new f(e)
            })), this.status
        }, e
    }(), m = new g, v = function () {
        function e(e) {
            var t = this;
            this.editor = e, this.callOnDispose = [], this.factory = m, this.created = !1, this.domNode = p(".monaco-typescript-status"), this.editor.addOverlayWidget(this), this.onModelChange(), this.callOnDispose.push(this.editor.addListener(l.EventType.ModelChanged, function () {
                return t.onModelChange()
            }))
        }

        return e.prototype.getId = function () {
            return e.ID
        }, e.prototype.dispose = function () {
            for (; this.callOnDispose.length > 0;)this.callOnDispose.pop()()
        }, e.prototype.onModelChange = function () {
            var e = this, t = this.editor.getModel();
            if (t) {
                var n = t.getMode();
                "vs.languages.typescript" === n.getId() && n instanceof d.AbstractMode ? (this.domNode.show(), this.created || (this.created = !0, this.factory.getStatus(n).forEach(function (t) {
                    var n = p(".worker").appendTo(e.domNode);
                    e.updateWidget(n, a.Unknown), e.callOnDispose.push(t.addListener(f.Events.Updated, function (t) {
                        e.updateWidget(n, t)
                    }))
                }))) : this.domNode.hide()
            }
        }, e.prototype.updateWidget = function (e, t) {
            t && t !== a.Unknown ? t === a.Ok ? e.attr("status", "ok") : t === a.Updating ? e.attr("status", "updating") : t === a.Fetching ? e.attr("status", "fetching") : t === a.Error && e.attr("status", "error") : e.attr("status", "unkown")
        }, e.prototype.getDomNode = function () {
            return this.domNode.getHTMLElement()
        }, e.prototype.getPosition = function () {
            return{preference: u.OverlayWidgetPositionPreference.TOP_RIGHT_CORNER}
        }, e.ID = "typescript.status.reporter", e
    }();
    t.StatusPresenter = v
}), define("vs/languages/typescript/typescript.contribution", ["require", "exports", "vs/nls!vs/editor/editor.main", "vs/platform/platform", "vs/editor/modes/modesExtensions", "vs/editor/editorExtensions", "./editor/workerStatusReporter", "vs/platform/configurationRegistry", "vs/base/env"], function (e, t, n, i, o, r, s, a, u) {
    "use strict";
    var l = n, d = i, c = o, h = r, p = s, f = a, g = u, m = d.Registry.as(c.Extensions.EditorModes);
    m.registerMode(["text/typescript"], new d.DeferredDescriptor("vs/languages/typescript/typescript", "TypeScriptMode")), g.enableNLSWarnings && m.registerWorkerParticipant("vs.languages.typescript", new d.DeferredDescriptor("vs/languages/typescript/participants/nlsParticipant", "WorkerParticipant")), g.enableEditorLanguageServiceIndicator && d.Registry.as(h.Extensions.EditorContributions).registerEditorContribution(new d.BaseDescriptor(p.StatusPresenter));
    var v = d.Registry.as(f.Extensions.Configuration);
    v.registerConfiguration({id: c.LANGUAGE_CONFIGURATION + "/vs.languages.typescript", type: "object", title: l.localize("vs_languages_typescript_typescript.contribution", 0), description: l.localize("vs_languages_typescript_typescript.contribution", 1), properties: {useCodeSnippetsOnMethodSuggest: {type: "boolean", "default": !0, description: l.localize("vs_languages_typescript_typescript.contribution", 2)}, showTypeScriptWarnings: {type: "boolean", "default": !0, description: l.localize("vs_languages_typescript_typescript.contribution", 3)}, completeFunctionsAsInvocation: {type: "boolean", description: l.localize("vs_languages_typescript_typescript.contribution", 4)}, lint: {type: "object", "default": {eqeqeq: !0, "typeof": !0, unusedLocals: !1, unusedImport: !0, emptyBlock: !0, semiColonInsteadOfBlock: !1, functionsInLoops: !1}, description: l.localize("vs_languages_typescript_typescript.contribution", 5)}}})
}), define("vs/languages/vb/vb.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["text/x-vb"], new o.DeferredDescriptor("vs/languages/vb/vb", "VBMode"))
}), define("vs/languages/less/less.contribution", ["require", "exports", "vs/editor/modes/modesExtensions", "vs/platform/platform"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = r.Registry.as(o.Extensions.EditorModes);
    s.registerMode(["text/x-less", "text/less"], new r.DeferredDescriptor("vs/languages/less/less", "LESSMode"))
}), define("vs/languages/xml/xml.contribution", ["require", "exports", "vs/platform/platform", "vs/editor/modes/modesExtensions"], function (e, t, n, i) {
    "use strict";
    var o = n, r = i, s = o.Registry.as(r.Extensions.EditorModes);
    s.registerMode(["text/xml", "application/xml", "application/xaml+xml"], new o.DeferredDescriptor("vs/languages/xml/xml", "XMLMode"))
}), define("vs/languages/languages.main", ["vs/languages/bat/bat.contribution", "vs/languages/coffeescript/coffeescript.contribution", "vs/languages/cpp/cpp.contribution", "vs/languages/csharp/csharp.contribution", "vs/languages/css/css.contribution", "vs/languages/fsharp/fsharp.contribution", "vs/languages/handlebars/handlebars.contribution", "vs/languages/html/html.contribution", "vs/languages/ini/ini.contribution", "vs/languages/jade/jade.contribution", "vs/languages/java/java.contribution", "vs/languages/javascript/javascript.contribution", "vs/languages/jshtm/jshtm.contribution", "vs/languages/json/json.contribution", "vs/languages/lua/lua.contribution", "vs/languages/markdown/markdown.contribution", "vs/languages/php/php.contribution", "vs/languages/plaintext/plaintext.contribution", "vs/languages/powershell/powershell.contribution", "vs/languages/python/python.contribution", "vs/languages/razor/razor.contribution", "vs/languages/typescript/typescript.contribution", "vs/languages/vb/vb.contribution", "vs/languages/less/less.contribution", "vs/languages/xml/xml.contribution"], function () {
    "use strict"
}), require.config({ignoreDuplicateModules: ["vs/languages/vsxml/vsxml", "vs/languages/javascript/jsdoc"]}), define("vs/editor/editor.main", ["./editor.all", "./standalone/standaloneEditor", "./contrib/quickOutline/quickOutline", "vs/languages/languages.main"], function () {
    "use strict"
}), define("vs/editor/modes/autoIndentation/autoIndentation", ["require", "exports", "vs/editor/modes/modes"], function (e, t, n) {
    "use strict";
    var i = n, o = function () {
        function e(e) {
            this.brackets = e
        }

        return e.prototype.getElectricBrackets = function () {
            for (var e, t = [], n = 0; n < this.brackets.length; n++)e = this.brackets[n], e.isElectric && t.push(e.close);
            return t
        }, e.prototype.onEnter = function (e, t, n) {
            for (var o = 0; o < t.length && t[o].startIndex < n;)o++;
            for (var r = t[o - 1]; o > 0 && "" === r.type;)o--, r = t[o - 1];
            if (o > 0 && this.tokenTypeIsBracket(r.type) && r.bracket === i.Bracket.Open) {
                for (var s = t[o]; o < t.length && "" === s.type;)o++, s = t[o];
                return void 0 !== s && s.type === r.type && s.bracket === i.Bracket.Close ? {indentAction: i.IndentAction.IndentOutdent} : {indentAction: i.IndentAction.Indent}
            }
            return null
        }, e.prototype.onElectricCharacter = function (e, t, n) {
            var i;
            for (i = 0; n > i; i++)if (" " !== e[i] && "	" !== e[i])return null;
            return{matchBracketType: this.tokenTypeFromChar(e[n])}
        }, e.prototype.tokenTypeFromChar = function (e) {
            for (var t, n = 0; n < this.brackets.length; n++)if (t = this.brackets[n], e === t.open || e === t.close)return t.tokenType;
            return null
        }, e.prototype.bracketTypeFromChar = function (e) {
            for (var t, n = 0; n < this.brackets.length; n++) {
                if (t = this.brackets[n], e === t.open)return i.Bracket.Open;
                if (e === t.close)return i.Bracket.Close
            }
            return null
        }, e.prototype.tokenTypeIsBracket = function (e) {
            for (var t = 0; t < this.brackets.length; t++)if (e === this.brackets[t].tokenType)return!0;
            return!1
        }, e.prototype.characterIsBracket = function (e) {
            for (var t, n = 0; n < this.brackets.length; n++)if (t = this.brackets[n], e === t.open || e === t.close)return!0;
            return!1
        }, e
    }();
    t.Brackets = o
});